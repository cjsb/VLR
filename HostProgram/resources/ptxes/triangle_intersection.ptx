//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23920284
// Cuda compilation tools, release 9.2, V9.2.88
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	_ZN3VLR17intersectTriangleEi
.visible .global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo6sm_rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo15a_hitPointParamE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename6sm_rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename15a_hitPointParamE[18] = {72, 105, 116, 80, 111, 105, 110, 116, 80, 97, 114, 97, 109, 101, 116, 101, 114, 0};
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum6sm_rayE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum15a_hitPointParamE = 4919;
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_semantic6sm_rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_semantic15a_hitPointParamE[24] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 104, 105, 116, 80, 111, 105, 110, 116, 80, 97, 114, 97, 109, 0};
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation6sm_rayE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation15a_hitPointParamE[1];
.visible .global .align 1 .b8 _ZN3VLR15pv_vertexBufferE[1];
.visible .global .align 1 .b8 _ZN3VLR17pv_triangleBufferE[1];
.visible .global .align 4 .b8 _ZN3VLR6sm_rayE[36];
.visible .global .align 4 .b8 _ZN3VLR15a_hitPointParamE[12];
.weak .global .align 4 .b8 _ZN3VLR17Matrix4x4TemplateIfEC1ERKNS_16Vector3DTemplateIfEES5_S5_$294[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63};

.visible .entry _ZN3VLR17intersectTriangleEi(
	.param .u32 _ZN3VLR17intersectTriangleEi_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<66>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<28>;


	ld.param.u32 	%r1, [_ZN3VLR17intersectTriangleEi_param_0];
	cvt.s64.s32	%rd4, %r1;
	mov.u64 	%rd26, _ZN3VLR17pv_triangleBufferE;
	cvta.global.u64 	%rd3, %rd26;
	mov.u32 	%r8, 1;
	mov.u32 	%r3, 16;
	mov.u64 	%rd25, 0;
	// inline asm
	call (%rd2), _rt_buffer_get_64, (%rd3, %r8, %r3, %rd4, %rd25, %rd25, %rd25);
	// inline asm
	ld.u32 	%rd10, [%rd2];
	mov.u64 	%rd27, _ZN3VLR15pv_vertexBufferE;
	cvta.global.u64 	%rd9, %rd27;
	mov.u32 	%r9, 44;
	// inline asm
	call (%rd8), _rt_buffer_get_64, (%rd9, %r8, %r9, %rd10, %rd25, %rd25, %rd25);
	// inline asm
	ld.u32 	%rd16, [%rd2+4];
	// inline asm
	call (%rd14), _rt_buffer_get_64, (%rd9, %r8, %r9, %rd16, %rd25, %rd25, %rd25);
	// inline asm
	ld.u32 	%rd22, [%rd2+8];
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd9, %r8, %r9, %rd22, %rd25, %rd25, %rd25);
	// inline asm
	ld.f32 	%f4, [%rd14];
	ld.f32 	%f5, [%rd8];
	sub.f32 	%f6, %f4, %f5;
	ld.f32 	%f7, [%rd14+4];
	ld.f32 	%f8, [%rd8+4];
	sub.f32 	%f9, %f7, %f8;
	ld.f32 	%f10, [%rd14+8];
	ld.f32 	%f11, [%rd8+8];
	sub.f32 	%f12, %f10, %f11;
	ld.f32 	%f13, [%rd20];
	sub.f32 	%f14, %f5, %f13;
	ld.f32 	%f15, [%rd20+4];
	sub.f32 	%f16, %f8, %f15;
	ld.f32 	%f17, [%rd20+8];
	sub.f32 	%f18, %f11, %f17;
	mul.f32 	%f19, %f12, %f16;
	mul.f32 	%f20, %f9, %f18;
	sub.f32 	%f21, %f19, %f20;
	mul.f32 	%f22, %f6, %f18;
	mul.f32 	%f23, %f12, %f14;
	sub.f32 	%f24, %f22, %f23;
	mul.f32 	%f25, %f9, %f14;
	mul.f32 	%f26, %f6, %f16;
	sub.f32 	%f27, %f25, %f26;
	ld.global.f32 	%f28, [_ZN3VLR6sm_rayE+12];
	ld.global.f32 	%f29, [_ZN3VLR6sm_rayE+16];
	mul.f32 	%f30, %f29, %f24;
	fma.rn.f32 	%f31, %f28, %f21, %f30;
	ld.global.f32 	%f32, [_ZN3VLR6sm_rayE+20];
	fma.rn.f32 	%f33, %f27, %f32, %f31;
	rcp.rn.f32 	%f34, %f33;
	ld.global.f32 	%f35, [_ZN3VLR6sm_rayE];
	sub.f32 	%f36, %f5, %f35;
	ld.global.f32 	%f37, [_ZN3VLR6sm_rayE+4];
	sub.f32 	%f38, %f8, %f37;
	ld.global.f32 	%f39, [_ZN3VLR6sm_rayE+8];
	sub.f32 	%f40, %f11, %f39;
	mul.f32 	%f41, %f34, %f36;
	mul.f32 	%f42, %f34, %f38;
	mul.f32 	%f43, %f34, %f40;
	mul.f32 	%f44, %f29, %f43;
	mul.f32 	%f45, %f42, %f32;
	sub.f32 	%f46, %f44, %f45;
	mul.f32 	%f47, %f41, %f32;
	mul.f32 	%f48, %f43, %f28;
	sub.f32 	%f49, %f47, %f48;
	mul.f32 	%f50, %f42, %f28;
	mul.f32 	%f51, %f41, %f29;
	sub.f32 	%f52, %f50, %f51;
	mul.f32 	%f53, %f16, %f49;
	fma.rn.f32 	%f54, %f14, %f46, %f53;
	fma.rn.f32 	%f1, %f18, %f52, %f54;
	mul.f32 	%f55, %f9, %f49;
	fma.rn.f32 	%f56, %f6, %f46, %f55;
	fma.rn.f32 	%f2, %f12, %f52, %f56;
	mul.f32 	%f57, %f24, %f42;
	fma.rn.f32 	%f58, %f21, %f41, %f57;
	fma.rn.f32 	%f3, %f27, %f43, %f58;
	ld.global.f32 	%f59, [_ZN3VLR6sm_rayE+32];
	setp.lt.f32	%p1, %f3, %f59;
	ld.global.f32 	%f60, [_ZN3VLR6sm_rayE+28];
	setp.gt.f32	%p2, %f3, %f60;
	and.pred  	%p3, %p1, %p2;
	setp.ge.f32	%p4, %f1, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	setp.ge.f32	%p6, %f2, 0f00000000;
	and.pred  	%p7, %p5, %p6;
	add.f32 	%f61, %f1, %f2;
	setp.le.f32	%p8, %f61, 0f3F800000;
	and.pred  	%p9, %p7, %p8;
	@!%p9 bra 	BB0_3;
	bra.uni 	BB0_1;

BB0_1:
	// inline asm
	call (%r10), _rt_potential_intersection, (%f3);
	// inline asm
	setp.eq.s32	%p10, %r10, 0;
	@%p10 bra 	BB0_3;

	mov.f32 	%f63, 0f3F800000;
	sub.f32 	%f64, %f63, %f1;
	sub.f32 	%f65, %f64, %f2;
	st.global.f32 	[_ZN3VLR15a_hitPointParamE], %f65;
	st.global.f32 	[_ZN3VLR15a_hitPointParamE+4], %f1;
	st.global.u32 	[_ZN3VLR15a_hitPointParamE+8], %r1;
	ld.u32 	%r12, [%rd2+12];
	// inline asm
	call (%r11), _rt_report_intersection, (%r12);
	// inline asm

BB0_3:
	ret;
}

	// .globl	_ZN3VLR19calcBBoxForTriangleEiPf
.visible .entry _ZN3VLR19calcBBoxForTriangleEiPf(
	.param .u32 _ZN3VLR19calcBBoxForTriangleEiPf_param_0,
	.param .u64 _ZN3VLR19calcBBoxForTriangleEiPf_param_1
)
{
	.reg .f32 	%f<34>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<29>;


	ld.param.u64 	%rd25, [_ZN3VLR19calcBBoxForTriangleEiPf_param_1];
	cvta.to.global.u64 	%rd26, %rd25;
	ld.param.s32 	%rd3, [_ZN3VLR19calcBBoxForTriangleEiPf_param_0];
	mov.u64 	%rd27, _ZN3VLR17pv_triangleBufferE;
	cvta.global.u64 	%rd2, %rd27;
	mov.u32 	%r7, 1;
	mov.u32 	%r2, 16;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r7, %r2, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%rd9, [%rd1];
	mov.u64 	%rd28, _ZN3VLR15pv_vertexBufferE;
	cvta.global.u64 	%rd8, %rd28;
	mov.u32 	%r8, 44;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r7, %r8, %rd9, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%rd15, [%rd1+4];
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd8, %r7, %r8, %rd15, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%rd21, [%rd1+8];
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd8, %r7, %r8, %rd21, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f1, [%rd7];
	min.f32 	%f2, %f3, %f1;
	ld.f32 	%f4, [%rd7+4];
	min.f32 	%f5, %f6, %f4;
	ld.f32 	%f7, [%rd7+8];
	min.f32 	%f8, %f9, %f7;
	max.f32 	%f10, %f11, %f1;
	max.f32 	%f12, %f13, %f4;
	max.f32 	%f14, %f15, %f7;
	ld.f32 	%f16, [%rd13];
	min.f32 	%f17, %f2, %f16;
	ld.f32 	%f18, [%rd13+4];
	min.f32 	%f19, %f5, %f18;
	ld.f32 	%f20, [%rd13+8];
	min.f32 	%f21, %f8, %f20;
	max.f32 	%f22, %f10, %f16;
	max.f32 	%f23, %f12, %f18;
	max.f32 	%f24, %f14, %f20;
	ld.f32 	%f25, [%rd19];
	min.f32 	%f26, %f17, %f25;
	ld.f32 	%f27, [%rd19+4];
	min.f32 	%f28, %f19, %f27;
	ld.f32 	%f29, [%rd19+8];
	min.f32 	%f30, %f21, %f29;
	max.f32 	%f31, %f22, %f25;
	max.f32 	%f32, %f23, %f27;
	max.f32 	%f33, %f24, %f29;
	st.global.f32 	[%rd26], %f26;
	st.global.f32 	[%rd26+4], %f28;
	st.global.f32 	[%rd26+8], %f30;
	st.global.f32 	[%rd26+12], %f31;
	st.global.f32 	[%rd26+16], %f32;
	st.global.f32 	[%rd26+20], %f33;
	ret;
}

	// .weak	_ZN3VLR16Vector3DTemplateIfEC2Ev
.weak .func _ZN3VLR16Vector3DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR16Vector3DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR16Vector3DTemplateIfEC2Ef
.weak .func _ZN3VLR16Vector3DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR16Vector3DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR16Vector3DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector3DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Vector3DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	ret;
}

	// .weak	_ZN3VLR16Vector3DTemplateIfEC2Efff
.weak .func _ZN3VLR16Vector3DTemplateIfEC2Efff(
	.param .b64 _ZN3VLR16Vector3DTemplateIfEC2Efff_param_0,
	.param .b32 _ZN3VLR16Vector3DTemplateIfEC2Efff_param_1,
	.param .b32 _ZN3VLR16Vector3DTemplateIfEC2Efff_param_2,
	.param .b32 _ZN3VLR16Vector3DTemplateIfEC2Efff_param_3
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector3DTemplateIfEC2Efff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Vector3DTemplateIfEC2Efff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR16Vector3DTemplateIfEC2Efff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR16Vector3DTemplateIfEC2Efff_param_3];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR16Vector4DTemplateIfEC2Ev
.weak .func _ZN3VLR16Vector4DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR16Vector4DTemplateIfEC2Ef
.weak .func _ZN3VLR16Vector4DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector4DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Vector4DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	st.f32 	[%rd1+12], %f1;
	ret;
}

	// .weak	_ZN3VLR16Vector4DTemplateIfEC2Effff
.weak .func _ZN3VLR16Vector4DTemplateIfEC2Effff(
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_0,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_1,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_2,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_3,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_4
)
{
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_3];
	ld.param.f32 	%f4, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_4];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+12], %f4;
	ret;
}

	// .weak	_ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf
.weak .func _ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf(
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_0,
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_1,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_2
)
{
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_1];
	ld.param.f32 	%f1, [_ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_2];
	ld.f32 	%f2, [%rd2];
	st.f32 	[%rd1], %f2;
	ld.f32 	%f3, [%rd2+4];
	st.f32 	[%rd1+4], %f3;
	ld.f32 	%f4, [%rd2+8];
	st.f32 	[%rd1+8], %f4;
	st.f32 	[%rd1+12], %f1;
	ret;
}

	// .weak	_ZN3VLR16Normal3DTemplateIfEC2Ev
.weak .func _ZN3VLR16Normal3DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR16Normal3DTemplateIfEC2Ef
.weak .func _ZN3VLR16Normal3DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR16Normal3DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Normal3DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Normal3DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	ret;
}

	// .weak	_ZN3VLR16Normal3DTemplateIfEC2Efff
.weak .func _ZN3VLR16Normal3DTemplateIfEC2Efff(
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2Efff_param_0,
	.param .b32 _ZN3VLR16Normal3DTemplateIfEC2Efff_param_1,
	.param .b32 _ZN3VLR16Normal3DTemplateIfEC2Efff_param_2,
	.param .b32 _ZN3VLR16Normal3DTemplateIfEC2Efff_param_3
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Normal3DTemplateIfEC2Efff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Normal3DTemplateIfEC2Efff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR16Normal3DTemplateIfEC2Efff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR16Normal3DTemplateIfEC2Efff_param_3];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE
.weak .func _ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE(
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_0,
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_1
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_1];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR15Point3DTemplateIfEC2Ev
.weak .func _ZN3VLR15Point3DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR15Point3DTemplateIfEC2Ef
.weak .func _ZN3VLR15Point3DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR15Point3DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR15Point3DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR15Point3DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	ret;
}

	// .weak	_ZN3VLR15Point3DTemplateIfEC2Efff
.weak .func _ZN3VLR15Point3DTemplateIfEC2Efff(
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2Efff_param_0,
	.param .b32 _ZN3VLR15Point3DTemplateIfEC2Efff_param_1,
	.param .b32 _ZN3VLR15Point3DTemplateIfEC2Efff_param_2,
	.param .b32 _ZN3VLR15Point3DTemplateIfEC2Efff_param_3
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR15Point3DTemplateIfEC2Efff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR15Point3DTemplateIfEC2Efff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR15Point3DTemplateIfEC2Efff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR15Point3DTemplateIfEC2Efff_param_3];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE
.weak .func _ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE(
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_0,
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_1
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_1];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR18TexCoord2DTemplateIfEC2Ev
.weak .func _ZN3VLR18TexCoord2DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR18TexCoord2DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR18TexCoord2DTemplateIfEC2Ef
.weak .func _ZN3VLR18TexCoord2DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR18TexCoord2DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR18TexCoord2DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR18TexCoord2DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR18TexCoord2DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	ret;
}

	// .weak	_ZN3VLR18TexCoord2DTemplateIfEC2Eff
.weak .func _ZN3VLR18TexCoord2DTemplateIfEC2Eff(
	.param .b64 _ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_0,
	.param .b32 _ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_1,
	.param .b32 _ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_2
)
{
	.reg .f32 	%f<3>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_2];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	ret;
}

	// .weak	_ZN3VLR21BoundingBox3DTemplateIfEC2Ev
.weak .func _ZN3VLR21BoundingBox3DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE
.weak .func _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE(
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE_param_0,
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE_param_1
)
{
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE_param_1];
	ld.f32 	%f1, [%rd2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1], %f1;
	ld.f32 	%f4, [%rd2];
	ld.f32 	%f5, [%rd2+4];
	ld.f32 	%f6, [%rd2+8];
	st.f32 	[%rd1+20], %f6;
	st.f32 	[%rd1+16], %f5;
	st.f32 	[%rd1+12], %f4;
	ret;
}

	// .weak	_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5_
.weak .func _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5_(
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_0,
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_1,
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_2
)
{
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_0];
	ld.param.u64 	%rd2, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_1];
	ld.param.u64 	%rd3, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_2];
	ld.f32 	%f1, [%rd2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1], %f1;
	ld.f32 	%f4, [%rd3];
	ld.f32 	%f5, [%rd3+4];
	ld.f32 	%f6, [%rd3+8];
	st.f32 	[%rd1+20], %f6;
	st.f32 	[%rd1+16], %f5;
	st.f32 	[%rd1+12], %f4;
	ret;
}

	// .weak	_ZN3VLR17Matrix3x3TemplateIfEC2Ev
.weak .func _ZN3VLR17Matrix3x3TemplateIfEC2Ev(
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR17Matrix3x3TemplateIfEC2EPf
.weak .func _ZN3VLR17Matrix3x3TemplateIfEC2EPf(
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2EPf_param_0,
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2EPf_param_1
)
{
	.reg .f32 	%f<10>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix3x3TemplateIfEC2EPf_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix3x3TemplateIfEC2EPf_param_1];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	ld.f32 	%f4, [%rd2+12];
	st.f32 	[%rd1+12], %f4;
	ld.f32 	%f5, [%rd2+16];
	st.f32 	[%rd1+16], %f5;
	ld.f32 	%f6, [%rd2+20];
	st.f32 	[%rd1+20], %f6;
	ld.f32 	%f7, [%rd2+24];
	st.f32 	[%rd1+24], %f7;
	ld.f32 	%f8, [%rd2+28];
	st.f32 	[%rd1+28], %f8;
	ld.f32 	%f9, [%rd2+32];
	st.f32 	[%rd1+32], %f9;
	ret;
}

	// .weak	_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5_
.weak .func _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5_(
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_0,
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_1,
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_2,
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_3
)
{
	.reg .f32 	%f<10>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_1];
	ld.param.u64 	%rd3, [_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_2];
	ld.param.u64 	%rd4, [_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_3];
	ld.f32 	%f1, [%rd2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1], %f1;
	ld.f32 	%f4, [%rd3];
	ld.f32 	%f5, [%rd3+4];
	ld.f32 	%f6, [%rd3+8];
	st.f32 	[%rd1+20], %f6;
	st.f32 	[%rd1+16], %f5;
	st.f32 	[%rd1+12], %f4;
	ld.f32 	%f7, [%rd4];
	ld.f32 	%f8, [%rd4+4];
	ld.f32 	%f9, [%rd4+8];
	st.f32 	[%rd1+32], %f9;
	st.f32 	[%rd1+28], %f8;
	st.f32 	[%rd1+24], %f7;
	ret;
}

	// .weak	_ZN3VLR17Matrix4x4TemplateIfEC2Ev
.weak .func _ZN3VLR17Matrix4x4TemplateIfEC2Ev(
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR17Matrix4x4TemplateIfEC2EPf
.weak .func _ZN3VLR17Matrix4x4TemplateIfEC2EPf(
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2EPf_param_0,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2EPf_param_1
)
{
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix4x4TemplateIfEC2EPf_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix4x4TemplateIfEC2EPf_param_1];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	ld.f32 	%f4, [%rd2+12];
	st.f32 	[%rd1+12], %f4;
	ld.f32 	%f5, [%rd2+16];
	st.f32 	[%rd1+16], %f5;
	ld.f32 	%f6, [%rd2+20];
	st.f32 	[%rd1+20], %f6;
	ld.f32 	%f7, [%rd2+24];
	st.f32 	[%rd1+24], %f7;
	ld.f32 	%f8, [%rd2+28];
	st.f32 	[%rd1+28], %f8;
	ld.f32 	%f9, [%rd2+32];
	st.f32 	[%rd1+32], %f9;
	ld.f32 	%f10, [%rd2+36];
	st.f32 	[%rd1+36], %f10;
	ld.f32 	%f11, [%rd2+40];
	st.f32 	[%rd1+40], %f11;
	ld.f32 	%f12, [%rd2+44];
	st.f32 	[%rd1+44], %f12;
	ld.f32 	%f13, [%rd2+48];
	st.f32 	[%rd1+48], %f13;
	ld.f32 	%f14, [%rd2+52];
	st.f32 	[%rd1+52], %f14;
	ld.f32 	%f15, [%rd2+56];
	st.f32 	[%rd1+56], %f15;
	ld.f32 	%f16, [%rd2+60];
	st.f32 	[%rd1+60], %f16;
	ret;
}

	// .weak	_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5_
.weak .func _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5_(
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_0,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_1,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_2,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_3
)
{
	.reg .f32 	%f<10>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_1];
	ld.param.u64 	%rd3, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_2];
	ld.param.u64 	%rd4, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_3];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	mov.u32 	%r1, 0;
	st.u32 	[%rd1+12], %r1;
	ld.f32 	%f4, [%rd3];
	st.f32 	[%rd1+16], %f4;
	ld.f32 	%f5, [%rd3+4];
	st.f32 	[%rd1+20], %f5;
	ld.f32 	%f6, [%rd3+8];
	st.f32 	[%rd1+24], %f6;
	st.u32 	[%rd1+28], %r1;
	ld.f32 	%f7, [%rd4];
	st.f32 	[%rd1+32], %f7;
	ld.f32 	%f8, [%rd4+4];
	st.f32 	[%rd1+36], %f8;
	ld.f32 	%f9, [%rd4+8];
	st.f32 	[%rd1+40], %f9;
	st.u32 	[%rd1+44], %r1;
	st.u32 	[%rd1+48], %r1;
	st.u32 	[%rd1+52], %r1;
	st.u32 	[%rd1+56], %r1;
	mov.u32 	%r2, 1065353216;
	st.u32 	[%rd1+60], %r2;
	ret;
}

	// .weak	_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5_
.weak .func _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5_(
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_0,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_1,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_2,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_3,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_4
)
{
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_1];
	ld.param.u64 	%rd3, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_2];
	ld.param.u64 	%rd4, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_3];
	ld.param.u64 	%rd5, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_4];
	ld.f32 	%f1, [%rd2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	ld.f32 	%f4, [%rd2+12];
	st.f32 	[%rd1+12], %f4;
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1], %f1;
	ld.f32 	%f5, [%rd3];
	ld.f32 	%f6, [%rd3+4];
	ld.f32 	%f7, [%rd3+8];
	ld.f32 	%f8, [%rd3+12];
	st.f32 	[%rd1+28], %f8;
	st.f32 	[%rd1+24], %f7;
	st.f32 	[%rd1+20], %f6;
	st.f32 	[%rd1+16], %f5;
	ld.f32 	%f9, [%rd4];
	ld.f32 	%f10, [%rd4+4];
	ld.f32 	%f11, [%rd4+8];
	ld.f32 	%f12, [%rd4+12];
	st.f32 	[%rd1+44], %f12;
	st.f32 	[%rd1+40], %f11;
	st.f32 	[%rd1+36], %f10;
	st.f32 	[%rd1+32], %f9;
	ld.f32 	%f13, [%rd5];
	ld.f32 	%f14, [%rd5+4];
	ld.f32 	%f15, [%rd5+8];
	ld.f32 	%f16, [%rd5+12];
	st.f32 	[%rd1+60], %f16;
	st.f32 	[%rd1+56], %f15;
	st.f32 	[%rd1+52], %f14;
	st.f32 	[%rd1+48], %f13;
	ret;
}

	// .weak	_ZN3VLR18QuaternionTemplateIfEC2Ev
.weak .func _ZN3VLR18QuaternionTemplateIfEC2Ev(
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR18QuaternionTemplateIfEC2Effff
.weak .func _ZN3VLR18QuaternionTemplateIfEC2Effff(
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_0,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_1,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_2,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_3,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_4
)
{
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_3];
	ld.param.f32 	%f4, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_4];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+12], %f4;
	ret;
}

	// .weak	_ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf
.weak .func _ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf(
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_0,
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_1,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_2
)
{
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_1];
	ld.param.f32 	%f1, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	ld.f32 	%f4, [%rd2];
	st.f32 	[%rd1], %f4;
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+12], %f1;
	ret;
}

	// .weak	_ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE
.weak .func _ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE(
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE_param_0,
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE_param_1
)
{
	.local .align 4 .b8 	__local_depot33[184];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .f32 	%f<77>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<73>;


	mov.u64 	%SPL, __local_depot33;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE_param_0];
	ld.param.u64 	%rd4, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE_param_1];
	ld.f32 	%f1, [%rd4+20];
	ld.f32 	%f2, [%rd4];
	add.f32 	%f16, %f2, %f1;
	ld.f32 	%f3, [%rd4+40];
	add.f32 	%f4, %f16, %f3;
	setp.gt.f32	%p1, %f4, 0f00000000;
	@%p1 bra 	BB33_4;
	bra.uni 	BB33_1;

BB33_4:
	add.f32 	%f59, %f4, 0f3F800000;
	sqrt.rn.f32 	%f60, %f59;
	mov.f32 	%f61, 0f3F000000;
	div.rn.f32 	%f62, %f61, %f60;
	ld.f32 	%f63, [%rd4+36];
	ld.f32 	%f64, [%rd4+24];
	sub.f32 	%f65, %f64, %f63;
	ld.f32 	%f66, [%rd4+8];
	ld.f32 	%f67, [%rd4+32];
	sub.f32 	%f68, %f67, %f66;
	ld.f32 	%f69, [%rd4+16];
	ld.f32 	%f70, [%rd4+4];
	sub.f32 	%f71, %f70, %f69;
	mul.f32 	%f72, %f62, %f65;
	mul.f32 	%f73, %f62, %f68;
	mul.f32 	%f74, %f62, %f71;
	st.f32 	[%rd3], %f72;
	st.f32 	[%rd3+4], %f73;
	st.f32 	[%rd3+8], %f74;
	mul.f32 	%f75, %f60, 0f3F000000;
	st.f32 	[%rd3+12], %f75;
	bra.uni 	BB33_5;

BB33_1:
	add.u64 	%rd5, %SP, 160;
	cvta.to.local.u64 	%rd6, %rd5;
	mov.u32 	%r3, 0;
	st.local.u32 	[%rd6+8], %r3;
	mov.u32 	%r4, 2;
	st.local.u32 	[%rd6+4], %r4;
	mov.u32 	%r5, 1;
	st.local.u32 	[%rd6], %r5;
	setp.gt.f32	%p2, %f1, %f2;
	selp.u64	%rd7, 1, 0, %p2;
	selp.u32	%r6, 1, 0, %p2;
	mul.wide.u32 	%rd8, %r6, 16;
	add.s64 	%rd9, %rd4, %rd8;
	ld.f32 	%f17, [%rd9];
	ld.f32 	%f18, [%rd9+4];
	ld.f32 	%f19, [%rd9+8];
	ld.f32 	%f20, [%rd9+12];
	add.u64 	%rd10, %SP, 0;
	cvta.to.local.u64 	%rd11, %rd10;
	st.local.f32 	[%rd11+12], %f20;
	st.local.f32 	[%rd11+8], %f19;
	st.local.f32 	[%rd11+4], %f18;
	st.local.f32 	[%rd11], %f17;
	mul.wide.u32 	%rd12, %r6, 4;
	add.s64 	%rd13, %rd11, %rd12;
	ld.local.f32 	%f21, [%rd13];
	setp.gt.f32	%p3, %f3, %f21;
	selp.b64	%rd2, 2, %rd7, %p3;
	shl.b64 	%rd14, %rd2, 2;
	add.s64 	%rd15, %rd6, %rd14;
	ld.local.u32 	%r1, [%rd15];
	mul.wide.s32 	%rd16, %r1, 4;
	add.s64 	%rd17, %rd6, %rd16;
	ld.local.u32 	%r2, [%rd17];
	shl.b64 	%rd18, %rd2, 4;
	add.s64 	%rd19, %rd4, %rd18;
	ld.f32 	%f22, [%rd19];
	ld.f32 	%f23, [%rd19+4];
	ld.f32 	%f24, [%rd19+8];
	ld.f32 	%f25, [%rd19+12];
	add.u64 	%rd20, %SP, 16;
	cvta.to.local.u64 	%rd21, %rd20;
	st.local.f32 	[%rd21+12], %f25;
	st.local.f32 	[%rd21+8], %f24;
	st.local.f32 	[%rd21+4], %f23;
	st.local.f32 	[%rd21], %f22;
	add.s64 	%rd22, %rd21, %rd14;
	ld.local.f32 	%f26, [%rd22];
	mul.wide.u32 	%rd23, %r1, 16;
	add.s64 	%rd24, %rd4, %rd23;
	ld.f32 	%f5, [%rd24];
	ld.f32 	%f6, [%rd24+4];
	ld.f32 	%f7, [%rd24+8];
	ld.f32 	%f8, [%rd24+12];
	add.u64 	%rd25, %SP, 32;
	cvta.to.local.u64 	%rd26, %rd25;
	st.local.f32 	[%rd26+12], %f8;
	st.local.f32 	[%rd26+8], %f7;
	st.local.f32 	[%rd26+4], %f6;
	st.local.f32 	[%rd26], %f5;
	mul.wide.u32 	%rd27, %r1, 4;
	add.s64 	%rd28, %rd26, %rd27;
	ld.local.f32 	%f27, [%rd28];
	mul.wide.u32 	%rd29, %r2, 16;
	add.s64 	%rd30, %rd4, %rd29;
	ld.f32 	%f9, [%rd30];
	ld.f32 	%f10, [%rd30+4];
	ld.f32 	%f11, [%rd30+8];
	ld.f32 	%f12, [%rd30+12];
	add.u64 	%rd31, %SP, 48;
	cvta.to.local.u64 	%rd32, %rd31;
	st.local.f32 	[%rd32+12], %f12;
	st.local.f32 	[%rd32+8], %f11;
	st.local.f32 	[%rd32+4], %f10;
	st.local.f32 	[%rd32], %f9;
	mul.wide.u32 	%rd33, %r2, 4;
	add.s64 	%rd34, %rd32, %rd33;
	ld.local.f32 	%f28, [%rd34];
	add.f32 	%f29, %f27, %f28;
	sub.f32 	%f30, %f26, %f29;
	add.f32 	%f31, %f30, 0f3F800000;
	sqrt.rn.f32 	%f76, %f31;
	mul.f32 	%f32, %f76, 0f00000000;
	add.u64 	%rd35, %SP, 172;
	cvta.to.local.u64 	%rd36, %rd35;
	add.s64 	%rd37, %rd36, %rd14;
	st.local.f32 	[%rd37], %f32;
	setp.eq.f32	%p4, %f76, 0f00000000;
	@%p4 bra 	BB33_3;

	mov.f32 	%f33, 0f3F000000;
	div.rn.f32 	%f76, %f33, %f76;

BB33_3:
	add.u64 	%rd38, %SP, 64;
	cvta.to.local.u64 	%rd39, %rd38;
	st.local.f32 	[%rd39+4], %f6;
	st.local.f32 	[%rd39], %f5;
	st.local.f32 	[%rd39+8], %f7;
	st.local.f32 	[%rd39+12], %f8;
	add.s64 	%rd41, %rd39, %rd33;
	ld.local.f32 	%f34, [%rd41];
	add.u64 	%rd42, %SP, 80;
	cvta.to.local.u64 	%rd43, %rd42;
	st.local.f32 	[%rd43+12], %f12;
	st.local.f32 	[%rd43+8], %f11;
	st.local.f32 	[%rd43+4], %f10;
	st.local.f32 	[%rd43], %f9;
	add.s64 	%rd45, %rd43, %rd27;
	ld.local.f32 	%f35, [%rd45];
	sub.f32 	%f36, %f34, %f35;
	mul.f32 	%f37, %f76, %f36;
	st.f32 	[%rd3+12], %f37;
	ld.f32 	%f38, [%rd19];
	ld.f32 	%f39, [%rd19+4];
	ld.f32 	%f40, [%rd19+8];
	ld.f32 	%f41, [%rd19+12];
	add.u64 	%rd48, %SP, 96;
	cvta.to.local.u64 	%rd49, %rd48;
	st.local.f32 	[%rd49+12], %f41;
	st.local.f32 	[%rd49+8], %f40;
	st.local.f32 	[%rd49+4], %f39;
	st.local.f32 	[%rd49], %f38;
	add.s64 	%rd50, %rd49, %rd27;
	ld.local.f32 	%f42, [%rd50];
	ld.f32 	%f43, [%rd24];
	ld.f32 	%f44, [%rd24+4];
	ld.f32 	%f45, [%rd24+8];
	ld.f32 	%f46, [%rd24+12];
	add.u64 	%rd53, %SP, 112;
	cvta.to.local.u64 	%rd54, %rd53;
	st.local.f32 	[%rd54+12], %f46;
	st.local.f32 	[%rd54+8], %f45;
	st.local.f32 	[%rd54+4], %f44;
	st.local.f32 	[%rd54], %f43;
	add.s64 	%rd56, %rd54, %rd14;
	ld.local.f32 	%f47, [%rd56];
	add.f32 	%f48, %f42, %f47;
	mul.f32 	%f49, %f76, %f48;
	add.s64 	%rd60, %rd36, %rd16;
	st.local.f32 	[%rd60], %f49;
	add.u64 	%rd61, %SP, 128;
	cvta.to.local.u64 	%rd62, %rd61;
	st.local.f32 	[%rd62+12], %f41;
	st.local.f32 	[%rd62+8], %f40;
	st.local.f32 	[%rd62+4], %f39;
	st.local.f32 	[%rd62], %f38;
	add.s64 	%rd63, %rd62, %rd33;
	ld.local.f32 	%f50, [%rd63];
	ld.f32 	%f51, [%rd30];
	ld.f32 	%f52, [%rd30+4];
	ld.f32 	%f53, [%rd30+8];
	ld.f32 	%f54, [%rd30+12];
	add.u64 	%rd66, %SP, 144;
	cvta.to.local.u64 	%rd67, %rd66;
	st.local.f32 	[%rd67+12], %f54;
	st.local.f32 	[%rd67+8], %f53;
	st.local.f32 	[%rd67+4], %f52;
	st.local.f32 	[%rd67], %f51;
	add.s64 	%rd68, %rd67, %rd14;
	ld.local.f32 	%f55, [%rd68];
	add.f32 	%f56, %f50, %f55;
	mul.f32 	%f57, %f76, %f56;
	mul.wide.s32 	%rd69, %r2, 4;
	add.s64 	%rd70, %rd36, %rd69;
	st.local.f32 	[%rd70], %f57;
	ld.local.u32 	%rd71, [%rd36];
	ld.local.f32 	%f58, [%rd36+8];
	ld.local.u32 	%rd72, [%rd36+4];
	st.u32 	[%rd3+4], %rd72;
	st.u32 	[%rd3], %rd71;
	st.f32 	[%rd3+8], %f58;

BB33_5:
	ret;
}

	// .weak	_ZN3VLR11RGBTemplateIfEC2Ev
.weak .func _ZN3VLR11RGBTemplateIfEC2Ev(
	.param .b64 _ZN3VLR11RGBTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR11RGBTemplateIfEC2Ef
.weak .func _ZN3VLR11RGBTemplateIfEC2Ef(
	.param .b64 _ZN3VLR11RGBTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR11RGBTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR11RGBTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR11RGBTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	ret;
}

	// .weak	_ZN3VLR11RGBTemplateIfEC2Efff
.weak .func _ZN3VLR11RGBTemplateIfEC2Efff(
	.param .b64 _ZN3VLR11RGBTemplateIfEC2Efff_param_0,
	.param .b32 _ZN3VLR11RGBTemplateIfEC2Efff_param_1,
	.param .b32 _ZN3VLR11RGBTemplateIfEC2Efff_param_2,
	.param .b32 _ZN3VLR11RGBTemplateIfEC2Efff_param_3
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR11RGBTemplateIfEC2Efff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR11RGBTemplateIfEC2Efff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR11RGBTemplateIfEC2Efff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR11RGBTemplateIfEC2Efff_param_3];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .globl	_ZN3VLR25decodeHitPointForTriangleERKNS_17HitPointParameterEPNS_12SurfacePointE
.visible .func _ZN3VLR25decodeHitPointForTriangleERKNS_17HitPointParameterEPNS_12SurfacePointE(
	.param .b64 _ZN3VLR25decodeHitPointForTriangleERKNS_17HitPointParameterEPNS_12SurfacePointE_param_0,
	.param .b64 _ZN3VLR25decodeHitPointForTriangleERKNS_17HitPointParameterEPNS_12SurfacePointE_param_1
)
{
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<166>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<29>;


	ld.param.u64 	%rd25, [_ZN3VLR25decodeHitPointForTriangleERKNS_17HitPointParameterEPNS_12SurfacePointE_param_1];
	ld.param.u64 	%rd26, [_ZN3VLR25decodeHitPointForTriangleERKNS_17HitPointParameterEPNS_12SurfacePointE_param_0];
	ld.s32 	%rd3, [%rd26+8];
	mov.u64 	%rd27, _ZN3VLR17pv_triangleBufferE;
	cvta.global.u64 	%rd2, %rd27;
	mov.u32 	%r7, 1;
	mov.u32 	%r2, 16;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r7, %r2, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%rd9, [%rd1];
	mov.u64 	%rd28, _ZN3VLR15pv_vertexBufferE;
	cvta.global.u64 	%rd8, %rd28;
	mov.u32 	%r8, 44;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r7, %r8, %rd9, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%rd15, [%rd1+4];
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd8, %r7, %r8, %rd15, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%rd21, [%rd1+8];
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd8, %r7, %r8, %rd21, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f33, [%rd13];
	ld.f32 	%f34, [%rd7];
	sub.f32 	%f35, %f33, %f34;
	ld.f32 	%f36, [%rd13+4];
	ld.f32 	%f37, [%rd7+4];
	sub.f32 	%f38, %f36, %f37;
	ld.f32 	%f39, [%rd13+8];
	ld.f32 	%f40, [%rd7+8];
	sub.f32 	%f41, %f39, %f40;
	ld.f32 	%f42, [%rd19];
	sub.f32 	%f43, %f42, %f34;
	ld.f32 	%f44, [%rd19+4];
	sub.f32 	%f45, %f44, %f37;
	ld.f32 	%f46, [%rd19+8];
	sub.f32 	%f47, %f46, %f40;
	mul.f32 	%f48, %f38, %f47;
	mul.f32 	%f49, %f41, %f45;
	sub.f32 	%f50, %f48, %f49;
	mul.f32 	%f51, %f41, %f43;
	mul.f32 	%f52, %f35, %f47;
	sub.f32 	%f53, %f51, %f52;
	mul.f32 	%f54, %f35, %f45;
	mul.f32 	%f55, %f38, %f43;
	sub.f32 	%f56, %f54, %f55;
	mul.f32 	%f57, %f53, %f53;
	fma.rn.f32 	%f58, %f50, %f50, %f57;
	fma.rn.f32 	%f59, %f56, %f56, %f58;
	sqrt.rn.f32 	%f60, %f59;
	rcp.rn.f32 	%f61, %f60;
	mul.f32 	%f29, %f61, %f50;
	mul.f32 	%f30, %f61, %f53;
	mul.f32 	%f31, %f56, %f61;
	ld.f32 	%f62, [%rd26];
	ld.f32 	%f63, [%rd26+4];
	mov.f32 	%f8, 0f3F800000;
	sub.f32 	%f64, %f8, %f62;
	sub.f32 	%f65, %f64, %f63;
	mul.f32 	%f66, %f63, %f33;
	mul.f32 	%f67, %f63, %f36;
	mul.f32 	%f68, %f63, %f39;
	fma.rn.f32 	%f69, %f62, %f34, %f66;
	fma.rn.f32 	%f70, %f62, %f37, %f67;
	fma.rn.f32 	%f71, %f62, %f40, %f68;
	fma.rn.f32 	%f5, %f65, %f42, %f69;
	fma.rn.f32 	%f6, %f65, %f44, %f70;
	fma.rn.f32 	%f7, %f65, %f46, %f71;
	ld.f32 	%f72, [%rd7+12];
	ld.f32 	%f73, [%rd7+16];
	ld.f32 	%f74, [%rd7+20];
	ld.f32 	%f75, [%rd13+12];
	mul.f32 	%f76, %f63, %f75;
	ld.f32 	%f77, [%rd13+16];
	mul.f32 	%f78, %f63, %f77;
	ld.f32 	%f79, [%rd13+20];
	mul.f32 	%f80, %f63, %f79;
	fma.rn.f32 	%f81, %f62, %f72, %f76;
	fma.rn.f32 	%f82, %f62, %f73, %f78;
	fma.rn.f32 	%f83, %f62, %f74, %f80;
	ld.f32 	%f84, [%rd19+12];
	ld.f32 	%f85, [%rd19+16];
	ld.f32 	%f86, [%rd19+20];
	fma.rn.f32 	%f87, %f65, %f84, %f81;
	fma.rn.f32 	%f88, %f65, %f85, %f82;
	fma.rn.f32 	%f89, %f65, %f86, %f83;
	mul.f32 	%f90, %f88, %f88;
	fma.rn.f32 	%f91, %f87, %f87, %f90;
	fma.rn.f32 	%f92, %f89, %f89, %f91;
	sqrt.rn.f32 	%f93, %f92;
	rcp.rn.f32 	%f94, %f93;
	mul.f32 	%f13, %f87, %f94;
	mul.f32 	%f14, %f88, %f94;
	mul.f32 	%f15, %f89, %f94;
	ld.f32 	%f95, [%rd7+24];
	ld.f32 	%f96, [%rd7+28];
	ld.f32 	%f97, [%rd7+32];
	ld.f32 	%f98, [%rd13+24];
	mul.f32 	%f99, %f63, %f98;
	ld.f32 	%f100, [%rd13+28];
	mul.f32 	%f101, %f63, %f100;
	ld.f32 	%f102, [%rd13+32];
	mul.f32 	%f103, %f63, %f102;
	fma.rn.f32 	%f104, %f62, %f95, %f99;
	fma.rn.f32 	%f105, %f62, %f96, %f101;
	fma.rn.f32 	%f106, %f62, %f97, %f103;
	ld.f32 	%f107, [%rd19+24];
	ld.f32 	%f108, [%rd19+28];
	ld.f32 	%f109, [%rd19+32];
	fma.rn.f32 	%f110, %f65, %f107, %f104;
	fma.rn.f32 	%f111, %f65, %f108, %f105;
	fma.rn.f32 	%f112, %f65, %f109, %f106;
	mul.f32 	%f113, %f111, %f111;
	fma.rn.f32 	%f114, %f110, %f110, %f113;
	fma.rn.f32 	%f115, %f112, %f112, %f114;
	sqrt.rn.f32 	%f116, %f115;
	rcp.rn.f32 	%f117, %f116;
	mul.f32 	%f21, %f110, %f117;
	mul.f32 	%f22, %f111, %f117;
	mul.f32 	%f23, %f112, %f117;
	ld.f32 	%f118, [%rd7+36];
	ld.f32 	%f119, [%rd7+40];
	ld.f32 	%f120, [%rd13+36];
	mul.f32 	%f121, %f63, %f120;
	ld.f32 	%f122, [%rd13+40];
	mul.f32 	%f123, %f63, %f122;
	fma.rn.f32 	%f124, %f62, %f118, %f121;
	fma.rn.f32 	%f125, %f62, %f119, %f123;
	ld.f32 	%f126, [%rd19+36];
	ld.f32 	%f127, [%rd19+40];
	fma.rn.f32 	%f128, %f65, %f126, %f124;
	fma.rn.f32 	%f129, %f65, %f127, %f125;
	mov.u32 	%r11, 3841;
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_transform_tuple, (%r11, %f5, %f6, %f7, %f8);
	// inline asm
	div.rn.f32 	%f130, %f1, %f4;
	div.rn.f32 	%f131, %f2, %f4;
	div.rn.f32 	%f132, %f3, %f4;
	mov.u32 	%r12, 7937;
	mov.f32 	%f32, 0f00000000;
	// inline asm
	call (%f9, %f10, %f11, %f12), _rt_transform_tuple, (%r12, %f13, %f14, %f15, %f32);
	// inline asm
	mul.f32 	%f133, %f10, %f10;
	fma.rn.f32 	%f134, %f9, %f9, %f133;
	fma.rn.f32 	%f135, %f11, %f11, %f134;
	sqrt.rn.f32 	%f136, %f135;
	rcp.rn.f32 	%f137, %f136;
	mul.f32 	%f138, %f9, %f137;
	mul.f32 	%f139, %f10, %f137;
	mul.f32 	%f140, %f11, %f137;
	// inline asm
	call (%f17, %f18, %f19, %f20), _rt_transform_tuple, (%r11, %f21, %f22, %f23, %f32);
	// inline asm
	mul.f32 	%f141, %f18, %f18;
	fma.rn.f32 	%f142, %f17, %f17, %f141;
	fma.rn.f32 	%f143, %f19, %f19, %f142;
	sqrt.rn.f32 	%f144, %f143;
	rcp.rn.f32 	%f145, %f144;
	mul.f32 	%f146, %f17, %f145;
	mul.f32 	%f147, %f18, %f145;
	mul.f32 	%f148, %f19, %f145;
	st.f32 	[%rd25], %f130;
	st.f32 	[%rd25+4], %f131;
	st.f32 	[%rd25+8], %f132;
	mul.f32 	%f149, %f139, %f148;
	mul.f32 	%f150, %f140, %f147;
	sub.f32 	%f151, %f149, %f150;
	mul.f32 	%f152, %f140, %f146;
	mul.f32 	%f153, %f138, %f148;
	sub.f32 	%f154, %f152, %f153;
	mul.f32 	%f155, %f138, %f147;
	mul.f32 	%f156, %f139, %f146;
	sub.f32 	%f157, %f155, %f156;
	st.f32 	[%rd25+24], %f146;
	st.f32 	[%rd25+28], %f147;
	st.f32 	[%rd25+32], %f148;
	st.f32 	[%rd25+36], %f151;
	st.f32 	[%rd25+40], %f154;
	st.f32 	[%rd25+44], %f157;
	st.f32 	[%rd25+48], %f138;
	st.f32 	[%rd25+52], %f139;
	st.f32 	[%rd25+56], %f140;
	mov.u16 	%rs1, 0;
	st.u8 	[%rd25+76], %rs1;
	// inline asm
	call (%f25, %f26, %f27, %f28), _rt_transform_tuple, (%r12, %f29, %f30, %f31, %f32);
	// inline asm
	mul.f32 	%f158, %f26, %f26;
	fma.rn.f32 	%f159, %f25, %f25, %f158;
	fma.rn.f32 	%f160, %f27, %f27, %f159;
	sqrt.rn.f32 	%f161, %f160;
	rcp.rn.f32 	%f162, %f161;
	mul.f32 	%f163, %f25, %f162;
	mul.f32 	%f164, %f26, %f162;
	mul.f32 	%f165, %f27, %f162;
	st.f32 	[%rd25+12], %f163;
	st.f32 	[%rd25+16], %f164;
	st.f32 	[%rd25+20], %f165;
	st.f32 	[%rd25+60], %f62;
	st.f32 	[%rd25+64], %f63;
	st.f32 	[%rd25+68], %f128;
	st.f32 	[%rd25+72], %f129;
	ret;
}

	// .globl	_ZN3VLR25decodeTexCoordForTriangleERKNS_17HitPointParameterE
.visible .func  (.param .align 4 .b8 func_retval0[8]) _ZN3VLR25decodeTexCoordForTriangleERKNS_17HitPointParameterE(
	.param .b64 _ZN3VLR25decodeTexCoordForTriangleERKNS_17HitPointParameterE_param_0
)
{
	.reg .f32 	%f<18>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd25, [_ZN3VLR25decodeTexCoordForTriangleERKNS_17HitPointParameterE_param_0];
	ld.s32 	%rd3, [%rd25+8];
	mov.u64 	%rd26, _ZN3VLR17pv_triangleBufferE;
	cvta.global.u64 	%rd2, %rd26;
	mov.u32 	%r7, 1;
	mov.u32 	%r2, 16;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r7, %r2, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%rd9, [%rd1];
	mov.u64 	%rd27, _ZN3VLR15pv_vertexBufferE;
	cvta.global.u64 	%rd8, %rd27;
	mov.u32 	%r8, 44;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r7, %r8, %rd9, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%rd15, [%rd1+4];
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd8, %r7, %r8, %rd15, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%rd21, [%rd1+8];
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd8, %r7, %r8, %rd21, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f1, [%rd25];
	ld.f32 	%f2, [%rd25+4];
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f1;
	sub.f32 	%f5, %f4, %f2;
	ld.f32 	%f6, [%rd7+36];
	ld.f32 	%f7, [%rd7+40];
	ld.f32 	%f8, [%rd13+36];
	mul.f32 	%f9, %f2, %f8;
	ld.f32 	%f10, [%rd13+40];
	mul.f32 	%f11, %f2, %f10;
	fma.rn.f32 	%f12, %f1, %f6, %f9;
	fma.rn.f32 	%f13, %f1, %f7, %f11;
	ld.f32 	%f14, [%rd19+36];
	ld.f32 	%f15, [%rd19+40];
	fma.rn.f32 	%f16, %f5, %f14, %f12;
	fma.rn.f32 	%f17, %f5, %f15, %f13;
	st.param.f32	[func_retval0+0], %f16;
	st.param.f32	[func_retval0+4], %f17;
	ret;
}

	// .globl	_ZN3VLR18sampleTriangleMeshERKNS_6Shared22SurfaceLightDescriptor4BodyERKNS_21SurfaceLightPosSampleEPNS_26SurfaceLightPosQueryResultE
.visible .func _ZN3VLR18sampleTriangleMeshERKNS_6Shared22SurfaceLightDescriptor4BodyERKNS_21SurfaceLightPosSampleEPNS_26SurfaceLightPosQueryResultE(
	.param .b64 _ZN3VLR18sampleTriangleMeshERKNS_6Shared22SurfaceLightDescriptor4BodyERKNS_21SurfaceLightPosSampleEPNS_26SurfaceLightPosQueryResultE_param_0,
	.param .b64 _ZN3VLR18sampleTriangleMeshERKNS_6Shared22SurfaceLightDescriptor4BodyERKNS_21SurfaceLightPosSampleEPNS_26SurfaceLightPosQueryResultE_param_1,
	.param .b64 _ZN3VLR18sampleTriangleMeshERKNS_6Shared22SurfaceLightDescriptor4BodyERKNS_21SurfaceLightPosSampleEPNS_26SurfaceLightPosQueryResultE_param_2
)
{
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<204>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<35>;


	ld.param.u64 	%rd3, [_ZN3VLR18sampleTriangleMeshERKNS_6Shared22SurfaceLightDescriptor4BodyERKNS_21SurfaceLightPosSampleEPNS_26SurfaceLightPosQueryResultE_param_0];
	ld.param.u64 	%rd1, [_ZN3VLR18sampleTriangleMeshERKNS_6Shared22SurfaceLightDescriptor4BodyERKNS_21SurfaceLightPosSampleEPNS_26SurfaceLightPosQueryResultE_param_1];
	ld.param.u64 	%rd4, [_ZN3VLR18sampleTriangleMeshERKNS_6Shared22SurfaceLightDescriptor4BodyERKNS_21SurfaceLightPosSampleEPNS_26SurfaceLightPosQueryResultE_param_2];
	add.s64 	%rd2, %rd3, 20;
	ld.u32 	%r43, [%rd3+20];
	shr.u32 	%r9, %r43, 1;
	or.b32  	%r10, %r9, %r43;
	shr.u32 	%r11, %r10, 2;
	or.b32  	%r12, %r11, %r10;
	shr.u32 	%r13, %r12, 4;
	or.b32  	%r14, %r13, %r12;
	shr.u32 	%r15, %r14, 8;
	or.b32  	%r16, %r15, %r14;
	shr.u32 	%r17, %r16, 16;
	or.b32  	%r18, %r17, %r16;
	shr.u32 	%r19, %r18, 1;
	sub.s32 	%r41, %r18, %r19;
	setp.lt.s32	%p3, %r41, 1;
	@%p3 bra 	BB39_5;

	ld.f32 	%f1, [%rd1];

BB39_2:
	sub.s32 	%r5, %r43, %r41;
	mov.pred 	%p8, 0;
	setp.lt.s32	%p5, %r5, 1;
	@%p5 bra 	BB39_4;

	cvt.s64.s32	%rd6, %r5;
	ld.u32 	%r20, [%rd2+-8];
	mov.u32 	%r21, 1;
	mov.u32 	%r22, 4;
	mov.u64 	%rd9, 0;
	// inline asm
	call (%rd5), _rt_buffer_get_id_64, (%r20, %r21, %r22, %rd6, %rd9, %rd9, %rd9);
	// inline asm
	ld.f32 	%f27, [%rd5];
	setp.ge.f32	%p8, %f27, %f1;

BB39_4:
	selp.b32	%r23, %r41, 0, %p8;
	sub.s32 	%r43, %r43, %r23;
	shr.s32 	%r41, %r41, 1;
	setp.gt.s32	%p6, %r41, 0;
	@%p6 bra 	BB39_2;

BB39_5:
	add.s32 	%r39, %r43, -1;
	cvt.s64.s32	%rd11, %r39;
	ld.u32 	%r24, [%rd2+-12];
	mov.u32 	%r37, 1;
	mov.u32 	%r26, 4;
	mov.u64 	%rd34, 0;
	// inline asm
	call (%rd10), _rt_buffer_get_id_64, (%r24, %r37, %r26, %rd11, %rd34, %rd34, %rd34);
	// inline asm
	ld.f32 	%f2, [%rd10];
	cvt.u64.u32	%rd16, %r39;
	ld.u32 	%r27, [%rd2+-16];
	mov.u32 	%r29, 16;
	// inline asm
	call (%rd15), _rt_buffer_get_id_64, (%r27, %r37, %r29, %rd16, %rd34, %rd34, %rd34);
	// inline asm
	ld.u32 	%rd21, [%rd15];
	ld.u32 	%r30, [%rd2+-20];
	mov.u32 	%r38, 44;
	// inline asm
	call (%rd20), _rt_buffer_get_id_64, (%r30, %r37, %r38, %rd21, %rd34, %rd34, %rd34);
	// inline asm
	ld.u32 	%rd26, [%rd15+4];
	ld.u32 	%r33, [%rd2+-20];
	// inline asm
	call (%rd25), _rt_buffer_get_id_64, (%r33, %r37, %r38, %rd26, %rd34, %rd34, %rd34);
	// inline asm
	ld.u32 	%rd31, [%rd15+8];
	ld.u32 	%r36, [%rd2+-20];
	// inline asm
	call (%rd30), _rt_buffer_get_id_64, (%r36, %r37, %r38, %rd31, %rd34, %rd34, %rd34);
	// inline asm
	ld.f32 	%f28, [%rd20];
	ld.f32 	%f29, [%rd25];
	sub.f32 	%f30, %f29, %f28;
	ld.f32 	%f31, [%rd20+4];
	ld.f32 	%f32, [%rd25+4];
	sub.f32 	%f33, %f32, %f31;
	ld.f32 	%f34, [%rd20+8];
	ld.f32 	%f35, [%rd25+8];
	sub.f32 	%f36, %f35, %f34;
	ld.f32 	%f37, [%rd30];
	sub.f32 	%f38, %f37, %f28;
	ld.f32 	%f39, [%rd30+4];
	sub.f32 	%f40, %f39, %f31;
	ld.f32 	%f41, [%rd30+8];
	sub.f32 	%f42, %f41, %f34;
	mul.f32 	%f43, %f33, %f42;
	mul.f32 	%f44, %f36, %f40;
	sub.f32 	%f3, %f43, %f44;
	mul.f32 	%f45, %f36, %f38;
	mul.f32 	%f46, %f30, %f42;
	sub.f32 	%f4, %f45, %f46;
	mul.f32 	%f47, %f30, %f40;
	mul.f32 	%f48, %f33, %f38;
	sub.f32 	%f5, %f47, %f48;
	mul.f32 	%f49, %f4, %f4;
	fma.rn.f32 	%f50, %f3, %f3, %f49;
	fma.rn.f32 	%f51, %f5, %f5, %f50;
	sqrt.rn.f32 	%f6, %f51;
	ld.f32 	%f52, [%rd1+4];
	sqrt.rn.f32 	%f53, %f52;
	mov.f32 	%f54, 0f3F800000;
	sub.f32 	%f7, %f54, %f53;
	ld.f32 	%f55, [%rd1+8];
	mul.f32 	%f8, %f55, %f53;
	sub.f32 	%f56, %f54, %f7;
	sub.f32 	%f57, %f56, %f8;
	mul.f32 	%f58, %f8, %f29;
	mul.f32 	%f59, %f8, %f32;
	mul.f32 	%f60, %f8, %f35;
	fma.rn.f32 	%f61, %f28, %f7, %f58;
	fma.rn.f32 	%f62, %f7, %f31, %f59;
	fma.rn.f32 	%f63, %f7, %f34, %f60;
	fma.rn.f32 	%f9, %f57, %f37, %f61;
	fma.rn.f32 	%f10, %f57, %f39, %f62;
	fma.rn.f32 	%f11, %f57, %f41, %f63;
	ld.f32 	%f64, [%rd20+12];
	ld.f32 	%f65, [%rd20+16];
	ld.f32 	%f66, [%rd20+20];
	ld.f32 	%f67, [%rd25+12];
	mul.f32 	%f68, %f8, %f67;
	ld.f32 	%f69, [%rd25+16];
	mul.f32 	%f70, %f8, %f69;
	ld.f32 	%f71, [%rd25+20];
	mul.f32 	%f72, %f8, %f71;
	fma.rn.f32 	%f73, %f7, %f64, %f68;
	fma.rn.f32 	%f74, %f7, %f65, %f70;
	fma.rn.f32 	%f75, %f7, %f66, %f72;
	ld.f32 	%f76, [%rd30+12];
	ld.f32 	%f77, [%rd30+16];
	ld.f32 	%f78, [%rd30+20];
	fma.rn.f32 	%f79, %f57, %f76, %f73;
	fma.rn.f32 	%f80, %f57, %f77, %f74;
	fma.rn.f32 	%f81, %f57, %f78, %f75;
	mul.f32 	%f82, %f80, %f80;
	fma.rn.f32 	%f83, %f79, %f79, %f82;
	fma.rn.f32 	%f84, %f81, %f81, %f83;
	sqrt.rn.f32 	%f85, %f84;
	rcp.rn.f32 	%f86, %f85;
	mul.f32 	%f12, %f79, %f86;
	mul.f32 	%f13, %f80, %f86;
	mul.f32 	%f14, %f81, %f86;
	ld.f32 	%f87, [%rd20+24];
	ld.f32 	%f88, [%rd20+28];
	ld.f32 	%f89, [%rd20+32];
	ld.f32 	%f90, [%rd25+24];
	mul.f32 	%f91, %f8, %f90;
	ld.f32 	%f92, [%rd25+28];
	mul.f32 	%f93, %f8, %f92;
	ld.f32 	%f94, [%rd25+32];
	mul.f32 	%f95, %f8, %f94;
	fma.rn.f32 	%f96, %f7, %f87, %f91;
	fma.rn.f32 	%f97, %f7, %f88, %f93;
	fma.rn.f32 	%f98, %f7, %f89, %f95;
	ld.f32 	%f99, [%rd30+24];
	ld.f32 	%f100, [%rd30+28];
	ld.f32 	%f101, [%rd30+32];
	fma.rn.f32 	%f102, %f57, %f99, %f96;
	fma.rn.f32 	%f103, %f57, %f100, %f97;
	fma.rn.f32 	%f104, %f57, %f101, %f98;
	mul.f32 	%f105, %f103, %f103;
	fma.rn.f32 	%f106, %f102, %f102, %f105;
	fma.rn.f32 	%f107, %f104, %f104, %f106;
	sqrt.rn.f32 	%f108, %f107;
	rcp.rn.f32 	%f109, %f108;
	mul.f32 	%f201, %f102, %f109;
	mul.f32 	%f202, %f103, %f109;
	mul.f32 	%f203, %f104, %f109;
	ld.f32 	%f110, [%rd20+36];
	ld.f32 	%f111, [%rd20+40];
	ld.f32 	%f112, [%rd25+36];
	mul.f32 	%f113, %f8, %f112;
	ld.f32 	%f114, [%rd25+40];
	mul.f32 	%f115, %f8, %f114;
	fma.rn.f32 	%f116, %f7, %f110, %f113;
	fma.rn.f32 	%f117, %f7, %f111, %f115;
	ld.f32 	%f118, [%rd30+36];
	ld.f32 	%f119, [%rd30+40];
	fma.rn.f32 	%f18, %f57, %f118, %f116;
	fma.rn.f32 	%f19, %f57, %f119, %f117;
	mul.f32 	%f120, %f13, %f202;
	fma.rn.f32 	%f121, %f12, %f201, %f120;
	fma.rn.f32 	%f20, %f14, %f203, %f121;
	abs.f32 	%f122, %f20;
	setp.ltu.f32	%p7, %f122, 0f3C23D70A;
	@%p7 bra 	BB39_7;

	mul.f32 	%f123, %f12, %f20;
	sub.f32 	%f124, %f201, %f123;
	mul.f32 	%f125, %f13, %f20;
	sub.f32 	%f126, %f202, %f125;
	mul.f32 	%f127, %f14, %f20;
	sub.f32 	%f128, %f203, %f127;
	mul.f32 	%f129, %f126, %f126;
	fma.rn.f32 	%f130, %f124, %f124, %f129;
	fma.rn.f32 	%f131, %f128, %f128, %f130;
	sqrt.rn.f32 	%f132, %f131;
	rcp.rn.f32 	%f133, %f132;
	mul.f32 	%f201, %f124, %f133;
	mul.f32 	%f202, %f126, %f133;
	mul.f32 	%f203, %f128, %f133;

BB39_7:
	mul.f32 	%f134, %f6, 0f3F000000;
	add.f32 	%f135, %f134, %f134;
	rcp.rn.f32 	%f136, %f135;
	mul.f32 	%f137, %f136, %f3;
	mul.f32 	%f138, %f136, %f4;
	mul.f32 	%f139, %f5, %f136;
	mul.f32 	%f140, %f14, %f202;
	mul.f32 	%f141, %f13, %f203;
	sub.f32 	%f142, %f141, %f140;
	mul.f32 	%f143, %f12, %f203;
	mul.f32 	%f144, %f14, %f201;
	sub.f32 	%f145, %f144, %f143;
	mul.f32 	%f146, %f13, %f201;
	mul.f32 	%f147, %f12, %f202;
	sub.f32 	%f148, %f147, %f146;
	st.f32 	[%rd4], %f9;
	st.f32 	[%rd4+4], %f10;
	st.f32 	[%rd4+8], %f11;
	st.f32 	[%rd4+24], %f201;
	st.f32 	[%rd4+28], %f202;
	st.f32 	[%rd4+32], %f203;
	st.f32 	[%rd4+36], %f142;
	st.f32 	[%rd4+40], %f145;
	st.f32 	[%rd4+44], %f148;
	st.f32 	[%rd4+48], %f12;
	st.f32 	[%rd4+52], %f13;
	st.f32 	[%rd4+56], %f14;
	mov.u16 	%rs1, 0;
	st.u8 	[%rd4+76], %rs1;
	ld.f32 	%f149, [%rd3+36];
	ld.f32 	%f150, [%rd3+40];
	mul.f32 	%f151, %f150, %f150;
	ld.f32 	%f152, [%rd3+44];
	mul.f32 	%f153, %f152, %f152;
	mul.f32 	%f154, %f150, %f149;
	mul.f32 	%f155, %f150, %f152;
	mul.f32 	%f156, %f152, %f149;
	ld.f32 	%f157, [%rd3+48];
	mul.f32 	%f158, %f149, %f157;
	mul.f32 	%f159, %f157, %f150;
	mul.f32 	%f160, %f157, %f152;
	add.f32 	%f161, %f151, %f153;
	add.f32 	%f162, %f161, %f161;
	sub.f32 	%f164, %f54, %f162;
	add.f32 	%f165, %f154, %f160;
	add.f32 	%f166, %f165, %f165;
	sub.f32 	%f167, %f156, %f159;
	add.f32 	%f168, %f167, %f167;
	sub.f32 	%f169, %f154, %f160;
	add.f32 	%f170, %f169, %f169;
	fma.rn.f32 	%f171, %f149, %f149, %f153;
	add.f32 	%f172, %f171, %f171;
	sub.f32 	%f173, %f54, %f172;
	add.f32 	%f174, %f155, %f158;
	add.f32 	%f175, %f174, %f174;
	add.f32 	%f176, %f156, %f159;
	add.f32 	%f177, %f176, %f176;
	sub.f32 	%f178, %f155, %f158;
	add.f32 	%f179, %f178, %f178;
	fma.rn.f32 	%f180, %f149, %f149, %f151;
	add.f32 	%f181, %f180, %f180;
	sub.f32 	%f182, %f54, %f181;
	mul.f32 	%f183, %f138, %f170;
	fma.rn.f32 	%f184, %f137, %f164, %f183;
	fma.rn.f32 	%f185, %f139, %f177, %f184;
	mul.f32 	%f186, %f137, %f166;
	fma.rn.f32 	%f187, %f138, %f173, %f186;
	fma.rn.f32 	%f188, %f139, %f179, %f187;
	mul.f32 	%f189, %f137, %f168;
	fma.rn.f32 	%f190, %f138, %f175, %f189;
	fma.rn.f32 	%f191, %f139, %f182, %f190;
	mul.f32 	%f192, %f188, %f188;
	fma.rn.f32 	%f193, %f185, %f185, %f192;
	fma.rn.f32 	%f194, %f191, %f191, %f193;
	sqrt.rn.f32 	%f195, %f194;
	rcp.rn.f32 	%f196, %f195;
	mul.f32 	%f197, %f196, %f185;
	mul.f32 	%f198, %f196, %f188;
	mul.f32 	%f199, %f196, %f191;
	st.f32 	[%rd4+12], %f197;
	st.f32 	[%rd4+16], %f198;
	st.f32 	[%rd4+20], %f199;
	st.f32 	[%rd4+60], %f7;
	st.f32 	[%rd4+64], %f8;
	st.f32 	[%rd4+68], %f18;
	st.f32 	[%rd4+72], %f19;
	div.rn.f32 	%f200, %f2, %f134;
	st.f32 	[%rd4+80], %f200;
	st.u32 	[%rd4+84], %r37;
	ret;
}


