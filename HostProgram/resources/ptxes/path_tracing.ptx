//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23920284
// Cuda compilation tools, release 9.2, V9.2.88
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	_ZN3VLR21stochasticAlphaAnyHitEv
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.visible .global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo19pv_progGetBaseColorE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo18pv_progBSDFmatchesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo25pv_progSampleBSDFInternalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo27pv_progEvaluateBSDFInternalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo31pv_progEvaluateBSDF_PDFInternalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo11pv_topGroupE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo24pv_progEvaluateEmittanceE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo26pv_progEvaluateEDFInternalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo17pv_thinLensCameraE[8] = {82, 97, 121, 0, 60, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo14sm_launchIndexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo6sm_rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo10sm_payloadE[8] = {82, 97, 121, 0, 64, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo19sm_shadowRayPayloadE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo15a_hitPointParamE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo21pv_progDecodeTexCoordE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo21pv_progDecodeHitPointE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo17pv_progFetchAlphaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo18pv_progFetchNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename19pv_progGetBaseColorE[20] = {112, 114, 111, 103, 83, 105, 103, 71, 101, 116, 66, 97, 115, 101, 67, 111, 108, 111, 114, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename18pv_progBSDFmatchesE[19] = {112, 114, 111, 103, 83, 105, 103, 66, 83, 68, 70, 77, 97, 116, 99, 104, 101, 115, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename25pv_progSampleBSDFInternalE[26] = {112, 114, 111, 103, 83, 105, 103, 83, 97, 109, 112, 108, 101, 66, 83, 68, 70, 73, 110, 116, 101, 114, 110, 97, 108, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename27pv_progEvaluateBSDFInternalE[28] = {112, 114, 111, 103, 83, 105, 103, 69, 118, 97, 108, 117, 97, 116, 101, 66, 83, 68, 70, 73, 110, 116, 101, 114, 110, 97, 108, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename31pv_progEvaluateBSDF_PDFInternalE[32] = {112, 114, 111, 103, 83, 105, 103, 69, 118, 97, 108, 117, 97, 116, 101, 66, 83, 68, 70, 95, 80, 68, 70, 73, 110, 116, 101, 114, 110, 97, 108, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename11pv_topGroupE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename24pv_progEvaluateEmittanceE[25] = {112, 114, 111, 103, 83, 105, 103, 69, 118, 97, 108, 117, 97, 116, 101, 69, 109, 105, 116, 116, 97, 110, 99, 101, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename26pv_progEvaluateEDFInternalE[27] = {112, 114, 111, 103, 83, 105, 103, 69, 118, 97, 108, 117, 97, 116, 101, 69, 68, 70, 73, 110, 116, 101, 114, 110, 97, 108, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename17pv_thinLensCameraE[15] = {84, 104, 105, 110, 76, 101, 110, 115, 67, 97, 109, 101, 114, 97, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename14sm_launchIndexE[13] = {111, 112, 116, 105, 120, 58, 58, 117, 105, 110, 116, 50, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename6sm_rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.visible .global .align 8 .b8 _ZN3VLR21rti_internal_typename10sm_payloadE[8] = {80, 97, 121, 108, 111, 97, 100, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename19sm_shadowRayPayloadE[17] = {83, 104, 97, 100, 111, 119, 82, 97, 121, 80, 97, 121, 108, 111, 97, 100, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename15a_hitPointParamE[18] = {72, 105, 116, 80, 111, 105, 110, 116, 80, 97, 114, 97, 109, 101, 116, 101, 114, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename21pv_progDecodeTexCoordE[22] = {112, 114, 111, 103, 83, 105, 103, 68, 101, 99, 111, 100, 101, 84, 101, 120, 67, 111, 111, 114, 100, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename21pv_progDecodeHitPointE[22] = {112, 114, 111, 103, 83, 105, 103, 68, 101, 99, 111, 100, 101, 72, 105, 116, 80, 111, 105, 110, 116, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename17pv_progFetchAlphaE[18] = {112, 114, 111, 103, 83, 105, 103, 70, 101, 116, 99, 104, 65, 108, 112, 104, 97, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename18pv_progFetchNormalE[19] = {112, 114, 111, 103, 83, 105, 103, 70, 101, 116, 99, 104, 78, 111, 114, 109, 97, 108, 0};
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum19pv_progGetBaseColorE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum18pv_progBSDFmatchesE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum25pv_progSampleBSDFInternalE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum27pv_progEvaluateBSDFInternalE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum31pv_progEvaluateBSDF_PDFInternalE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum11pv_topGroupE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum24pv_progEvaluateEmittanceE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum26pv_progEvaluateEDFInternalE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum17pv_thinLensCameraE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum14sm_launchIndexE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum6sm_rayE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum10sm_payloadE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum19sm_shadowRayPayloadE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum15a_hitPointParamE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum21pv_progDecodeTexCoordE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum21pv_progDecodeHitPointE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum17pv_progFetchAlphaE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum18pv_progFetchNormalE = 4921;
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic19pv_progGetBaseColorE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic18pv_progBSDFmatchesE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic25pv_progSampleBSDFInternalE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic27pv_progEvaluateBSDFInternalE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic31pv_progEvaluateBSDF_PDFInternalE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic11pv_topGroupE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic24pv_progEvaluateEmittanceE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic26pv_progEvaluateEDFInternalE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic17pv_thinLensCameraE[1];
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_semantic14sm_launchIndexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_semantic6sm_rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_semantic10sm_payloadE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_semantic19sm_shadowRayPayloadE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_semantic15a_hitPointParamE[24] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 104, 105, 116, 80, 111, 105, 110, 116, 80, 97, 114, 97, 109, 0};
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic21pv_progDecodeTexCoordE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic21pv_progDecodeHitPointE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic17pv_progFetchAlphaE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic18pv_progFetchNormalE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation19pv_progGetBaseColorE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation18pv_progBSDFmatchesE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation25pv_progSampleBSDFInternalE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation27pv_progEvaluateBSDFInternalE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation31pv_progEvaluateBSDF_PDFInternalE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation11pv_topGroupE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation24pv_progEvaluateEmittanceE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation26pv_progEvaluateEDFInternalE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation17pv_thinLensCameraE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation14sm_launchIndexE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation6sm_rayE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation10sm_payloadE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation19sm_shadowRayPayloadE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation15a_hitPointParamE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation21pv_progDecodeTexCoordE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation21pv_progDecodeHitPointE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation17pv_progFetchAlphaE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation18pv_progFetchNormalE[1];
.visible .global .align 4 .b8 _ZN3VLR19pv_progGetBaseColorE[4];
.visible .global .align 4 .b8 _ZN3VLR18pv_progBSDFmatchesE[4];
.visible .global .align 4 .b8 _ZN3VLR25pv_progSampleBSDFInternalE[4];
.visible .global .align 4 .b8 _ZN3VLR27pv_progEvaluateBSDFInternalE[4];
.visible .global .align 4 .b8 _ZN3VLR31pv_progEvaluateBSDF_PDFInternalE[4];
.visible .global .align 4 .b8 _ZN3VLR11pv_topGroupE[4];
.visible .global .align 4 .b8 _ZN3VLR24pv_progEvaluateEmittanceE[4];
.visible .global .align 4 .b8 _ZN3VLR26pv_progEvaluateEDFInternalE[4];
.visible .global .align 4 .b8 _ZN3VLR17pv_thinLensCameraE[60];
.visible .global .texref _ZN3VLR17pv_texNormalAlphaE;
.visible .global .align 8 .b8 _ZN3VLR14sm_launchIndexE[8];
.visible .global .align 4 .b8 _ZN3VLR6sm_rayE[36];
.visible .global .align 4 .b8 _ZN3VLR10sm_payloadE[64];
.visible .global .align 4 .b8 _ZN3VLR19sm_shadowRayPayloadE[4];
.visible .global .align 4 .b8 _ZN3VLR15a_hitPointParamE[12];
.visible .global .align 1 .b8 _ZN3VLR12pv_rngBufferE[1];
.visible .global .align 1 .b8 _ZN3VLR15pv_outputBufferE[1];
.visible .global .align 4 .b8 _ZN3VLR21pv_progDecodeTexCoordE[4];
.visible .global .align 4 .b8 _ZN3VLR21pv_progDecodeHitPointE[4];
.visible .global .align 4 .b8 _ZN3VLR17pv_progFetchAlphaE[4];
.visible .global .align 4 .b8 _ZN3VLR18pv_progFetchNormalE[4];
.global .align 16 .b8 $str[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str1[218] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 58, 32, 48, 120, 37, 108, 108, 88, 10, 32, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 105, 116, 121, 32, 58, 32, 37, 100, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 120, 37, 108, 108, 100, 120, 37, 108, 108, 100, 10, 32, 32, 101, 108, 101, 109, 101, 110, 116, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 10, 0};
.global .align 16 .b8 $str2[40] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 16 .b8 $str3[46] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str4[56] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 16 .b8 $str5[39] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 112, 114, 111, 103, 114, 97, 109, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str6[40] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 16 .b8 $str7[33] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 48, 41, 10, 0};
.global .align 16 .b8 $str8[56] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 16 .b8 $str9[34] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 45, 49, 41, 10, 0};
.global .align 16 .b8 $str10[39] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 16 .b8 $str11[44] = {9, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str12[55] = {9, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 16 .b8 $str13[37] = {9, 66, 117, 102, 102, 101, 114, 32, 73, 68, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 98, 117, 102, 102, 101, 114, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str14[145] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 58, 32, 48, 120, 37, 108, 108, 88, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 16 .b8 $str15[179] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 86, 65, 76, 73, 68, 95, 82, 65, 89, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 32, 32, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 121, 112, 101, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 116, 109, 105, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 109, 97, 120, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 0};
.global .align 16 .b8 $str16[84] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 78, 65, 76, 95, 69, 82, 82, 79, 82, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 101, 114, 114, 111, 114, 32, 105, 100, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str17[57] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 43, 37, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str18[54] = {67, 97, 117, 103, 104, 116, 32, 117, 110, 107, 110, 111, 119, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.weak .global .align 4 .b8 _ZN3VLR17Matrix4x4TemplateIfEC1ERKNS_16Vector3DTemplateIfEES5_S5_$412[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63};
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _ZN3VLR21stochasticAlphaAnyHitEv(

)
{
	.local .align 4 .b8 	__local_depot0[20];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<21>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd9, %SP, 8;
	cvta.to.local.u64 	%rd10, %rd9;
	add.u64 	%rd11, %SP, 0;
	cvta.to.local.u64 	%rd12, %rd11;
	ld.global.f32 	%f1, [_ZN3VLR15a_hitPointParamE];
	ld.global.f32 	%f2, [_ZN3VLR15a_hitPointParamE+4];
	ld.global.u32 	%r5, [_ZN3VLR15a_hitPointParamE+8];
	st.local.u32 	[%rd10+8], %r5;
	st.local.f32 	[%rd10+4], %f2;
	st.local.f32 	[%rd10], %f1;
	ld.global.u32 	%r1, [_ZN3VLR21pv_progDecodeTexCoordE];
	// inline asm
	call (%rd1), _rt_callable_program_from_id_64, (%r1);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .align 4 .b8 retval0[8];
	prototype_0 : .callprototype (.param .align 4 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd1, 
	(
	param0
	)
	, prototype_0;
	ld.param.f32	%f3, [retval0+0];
	ld.param.f32	%f4, [retval0+4];
	
	//{
	}// Callseq End 0
	st.local.f32 	[%rd12+4], %f4;
	st.local.f32 	[%rd12], %f3;
	ld.global.u32 	%r2, [_ZN3VLR17pv_progFetchAlphaE];
	// inline asm
	call (%rd2), _rt_callable_program_from_id_64, (%r2);
	// inline asm
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b32 retval0;
	prototype_1 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd2, 
	(
	param0
	)
	, prototype_1;
	ld.param.f32	%f5, [retval0+0];
	
	//{
	}// Callseq End 1
	ld.global.v2.u32 	{%r6, %r7}, [_ZN3VLR14sm_launchIndexE];
	cvt.u64.u32	%rd5, %r6;
	cvt.u64.u32	%rd6, %r7;
	mov.u64 	%rd13, _ZN3VLR12pv_rngBufferE;
	cvta.global.u64 	%rd4, %rd13;
	mov.u32 	%r3, 2;
	mov.u32 	%r4, 8;
	mov.u64 	%rd8, 0;
	// inline asm
	call (%rd3), _rt_buffer_get_64, (%rd4, %r3, %r4, %rd5, %rd6, %rd8, %rd8);
	// inline asm
	ld.u64 	%rd14, [%rd3];
	mul.lo.s64 	%rd15, %rd14, 6364136223846793005;
	add.s64 	%rd16, %rd15, 1;
	st.u64 	[%rd3], %rd16;
	shr.u64 	%rd17, %rd14, 18;
	xor.b64  	%rd18, %rd17, %rd14;
	shr.u64 	%rd19, %rd18, 27;
	cvt.u32.u64	%r10, %rd19;
	shr.u64 	%rd20, %rd14, 59;
	cvt.u32.u64	%r11, %rd20;
	shr.u32 	%r12, %r10, %r11;
	neg.s32 	%r13, %r11;
	and.b32  	%r14, %r13, 31;
	shl.b32 	%r15, %r10, %r14;
	or.b32  	%r16, %r12, %r15;
	shr.u32 	%r17, %r16, 9;
	or.b32  	%r18, %r17, 1065353216;
	mov.b32 	 %f6, %r18;
	add.f32 	%f7, %f6, 0fBF800000;
	setp.ltu.f32	%p1, %f7, %f5;
	@%p1 bra 	BB0_2;

	// inline asm
	call _rt_ignore_intersection, ();
	// inline asm

BB0_2:
	ret;
}

	// .globl	_ZN3VLR11alphaAnyHitEv
.visible .entry _ZN3VLR11alphaAnyHitEv(

)
{
	.local .align 4 .b8 	__local_depot1[20];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<7>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd3, %SP, 8;
	cvta.to.local.u64 	%rd4, %rd3;
	add.u64 	%rd5, %SP, 0;
	cvta.to.local.u64 	%rd6, %rd5;
	ld.global.f32 	%f1, [_ZN3VLR15a_hitPointParamE];
	ld.global.f32 	%f2, [_ZN3VLR15a_hitPointParamE+4];
	ld.global.u32 	%r3, [_ZN3VLR15a_hitPointParamE+8];
	st.local.u32 	[%rd4+8], %r3;
	st.local.f32 	[%rd4+4], %f2;
	st.local.f32 	[%rd4], %f1;
	ld.global.u32 	%r1, [_ZN3VLR21pv_progDecodeTexCoordE];
	// inline asm
	call (%rd1), _rt_callable_program_from_id_64, (%r1);
	// inline asm
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .align 4 .b8 retval0[8];
	prototype_2 : .callprototype (.param .align 4 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd1, 
	(
	param0
	)
	, prototype_2;
	ld.param.f32	%f3, [retval0+0];
	ld.param.f32	%f4, [retval0+4];
	
	//{
	}// Callseq End 2
	st.local.f32 	[%rd6+4], %f4;
	st.local.f32 	[%rd6], %f3;
	ld.global.u32 	%r2, [_ZN3VLR17pv_progFetchAlphaE];
	// inline asm
	call (%rd2), _rt_callable_program_from_id_64, (%r2);
	// inline asm
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b32 retval0;
	prototype_3 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd2, 
	(
	param0
	)
	, prototype_3;
	ld.param.f32	%f5, [retval0+0];
	
	//{
	}// Callseq End 3
	ld.global.f32 	%f6, [_ZN3VLR19sm_shadowRayPayloadE];
	mul.f32 	%f7, %f5, %f6;
	st.global.f32 	[_ZN3VLR19sm_shadowRayPayloadE], %f7;
	setp.neu.f32	%p1, %f7, 0f00000000;
	@%p1 bra 	BB1_2;

	// inline asm
	call _rt_terminate_ray, ();
	// inline asm

BB1_2:
	ret;
}

	// .globl	_ZN3VLR20pathTracingIterationEv
.visible .entry _ZN3VLR20pathTracingIterationEv(

)
{
	.local .align 4 .b8 	__local_depot2[92];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<14>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd9, %SP, 80;
	cvta.to.local.u64 	%rd10, %rd9;
	ld.global.v2.u32 	{%r5, %r6}, [_ZN3VLR14sm_launchIndexE];
	cvt.u64.u32	%rd3, %r5;
	cvt.u64.u32	%rd4, %r6;
	mov.u64 	%rd11, _ZN3VLR12pv_rngBufferE;
	cvta.global.u64 	%rd2, %rd11;
	mov.u32 	%r1, 2;
	mov.u32 	%r2, 8;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd4, %rd6, %rd6);
	// inline asm
	ld.global.f32 	%f1, [_ZN3VLR15a_hitPointParamE];
	ld.global.f32 	%f2, [_ZN3VLR15a_hitPointParamE+4];
	ld.global.u32 	%r9, [_ZN3VLR15a_hitPointParamE+8];
	st.local.u32 	[%rd10+8], %r9;
	st.local.f32 	[%rd10+4], %f2;
	st.local.f32 	[%rd10], %f1;
	ld.global.u32 	%r3, [_ZN3VLR21pv_progDecodeHitPointE];
	// inline asm
	call (%rd7), _rt_callable_program_from_id_64, (%r3);
	// inline asm
	add.u64 	%rd12, %SP, 0;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	prototype_4 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd7, 
	(
	param0, 
	param1
	)
	, prototype_4;
	
	//{
	}// Callseq End 4
	add.s64 	%rd13, %rd12, 68;
	ld.global.u32 	%r4, [_ZN3VLR19pv_progGetBaseColorE];
	// inline asm
	call (%rd8), _rt_callable_program_from_id_64, (%r4);
	// inline asm
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .align 4 .b8 retval0[12];
	prototype_5 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _);
	call (retval0), 
	%rd8, 
	(
	param0
	)
	, prototype_5;
	ld.param.f32	%f3, [retval0+0];
	ld.param.f32	%f4, [retval0+4];
	ld.param.f32	%f5, [retval0+8];
	
	//{
	}// Callseq End 5
	st.global.f32 	[_ZN3VLR10sm_payloadE+24], %f5;
	st.global.f32 	[_ZN3VLR10sm_payloadE+20], %f4;
	st.global.f32 	[_ZN3VLR10sm_payloadE+16], %f3;
	mov.u16 	%rs1, 1;
	st.global.u8 	[_ZN3VLR10sm_payloadE+60], %rs1;
	ret;
}

	// .globl	_ZN3VLR15pathTracingMissEv
.visible .entry _ZN3VLR15pathTracingMissEv(

)
{
	.reg .b16 	%rs<2>;


	mov.u16 	%rs1, 1;
	st.global.u8 	[_ZN3VLR10sm_payloadE+60], %rs1;
	ret;
}

	// .globl	_ZN3VLR11pathTracingEv
.visible .entry _ZN3VLR11pathTracingEv(

)
{
	.local .align 4 .b8 	__local_depot4[92];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<35>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<319>;
	.reg .b32 	%r<244>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<76>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.global.v2.u32 	{%r78, %r79}, [_ZN3VLR14sm_launchIndexE];
	cvt.u64.u32	%rd16, %r78;
	cvt.u64.u32	%rd17, %r79;
	mov.u64 	%rd25, _ZN3VLR12pv_rngBufferE;
	cvta.global.u64 	%rd15, %rd25;
	mov.u32 	%r76, 2;
	mov.u32 	%r75, 8;
	mov.u64 	%rd19, 0;
	// inline asm
	call (%rd14), _rt_buffer_get_64, (%rd15, %r76, %r75, %rd16, %rd17, %rd19, %rd19);
	// inline asm
	ld.global.u32 	%r82, [_ZN3VLR14sm_launchIndexE];
	cvt.rn.f32.u32	%f98, %r82;
	ld.u64 	%rd26, [%rd14];
	mul.lo.s64 	%rd27, %rd26, 6364136223846793005;
	add.s64 	%rd28, %rd27, 1;
	st.u64 	[%rd14], %rd28;
	shr.u64 	%rd29, %rd26, 18;
	xor.b64  	%rd30, %rd29, %rd26;
	shr.u64 	%rd31, %rd30, 27;
	cvt.u32.u64	%r83, %rd31;
	shr.u64 	%rd32, %rd26, 59;
	cvt.u32.u64	%r84, %rd32;
	shr.u32 	%r85, %r83, %r84;
	neg.s32 	%r86, %r84;
	and.b32  	%r87, %r86, 31;
	shl.b32 	%r88, %r83, %r87;
	or.b32  	%r89, %r85, %r88;
	shr.u32 	%r90, %r89, 9;
	or.b32  	%r91, %r90, 1065353216;
	mov.b32 	 %f99, %r91;
	add.f32 	%f100, %f99, 0fBF800000;
	add.f32 	%f1, %f98, %f100;
	ld.global.u32 	%r92, [_ZN3VLR14sm_launchIndexE+4];
	cvt.rn.f32.u32	%f101, %r92;
	mul.lo.s64 	%rd33, %rd28, 6364136223846793005;
	add.s64 	%rd34, %rd33, 1;
	st.u64 	[%rd14], %rd34;
	shr.u64 	%rd35, %rd28, 18;
	xor.b64  	%rd36, %rd35, %rd28;
	shr.u64 	%rd37, %rd36, 27;
	cvt.u32.u64	%r93, %rd37;
	shr.u64 	%rd38, %rd28, 59;
	cvt.u32.u64	%r94, %rd38;
	shr.u32 	%r95, %r93, %r94;
	neg.s32 	%r96, %r94;
	and.b32  	%r97, %r96, 31;
	shl.b32 	%r98, %r93, %r97;
	or.b32  	%r99, %r95, %r98;
	shr.u32 	%r100, %r99, 9;
	or.b32  	%r101, %r100, 1065353216;
	mov.b32 	 %f102, %r101;
	add.f32 	%f103, %f102, 0fBF800000;
	add.f32 	%f2, %f101, %f103;
	mov.u64 	%rd39, _ZN3VLR15pv_outputBufferE;
	cvta.global.u64 	%rd24, %rd39;
	mov.u32 	%r77, 12;
	// inline asm
	call (%rd20, %rd21, %rd22, %rd23), _rt_buffer_get_size_64, (%rd24, %r76, %r77);
	// inline asm
	cvt.u32.u64	%r1, %rd20;
	cvt.u32.u64	%r2, %rd21;
	ld.u64 	%rd40, [%rd14];
	mul.lo.s64 	%rd41, %rd40, 6364136223846793005;
	add.s64 	%rd42, %rd41, 1;
	shr.u64 	%rd43, %rd40, 18;
	xor.b64  	%rd44, %rd43, %rd40;
	shr.u64 	%rd45, %rd44, 27;
	cvt.u32.u64	%r102, %rd45;
	shr.u64 	%rd46, %rd40, 59;
	cvt.u32.u64	%r103, %rd46;
	shr.u32 	%r104, %r102, %r103;
	neg.s32 	%r105, %r103;
	and.b32  	%r106, %r105, 31;
	shl.b32 	%r107, %r102, %r106;
	or.b32  	%r108, %r104, %r107;
	shr.u32 	%r109, %r108, 9;
	or.b32  	%r110, %r109, 1065353216;
	mov.b32 	 %f104, %r110;
	add.f32 	%f105, %f104, 0fBF800000;
	mul.lo.s64 	%rd47, %rd42, 6364136223846793005;
	add.s64 	%rd48, %rd47, 1;
	st.u64 	[%rd14], %rd48;
	shr.u64 	%rd49, %rd42, 18;
	xor.b64  	%rd50, %rd49, %rd42;
	shr.u64 	%rd51, %rd50, 27;
	cvt.u32.u64	%r111, %rd51;
	shr.u64 	%rd52, %rd42, 59;
	cvt.u32.u64	%r112, %rd52;
	shr.u32 	%r113, %r111, %r112;
	neg.s32 	%r114, %r112;
	and.b32  	%r115, %r114, 31;
	shl.b32 	%r116, %r111, %r115;
	or.b32  	%r117, %r113, %r116;
	shr.u32 	%r118, %r117, 9;
	or.b32  	%r119, %r118, 1065353216;
	mov.b32 	 %f106, %r119;
	add.f32 	%f107, %f106, 0fBF800000;
	ld.global.f32 	%f108, [_ZN3VLR17pv_thinLensCameraE+12];
	ld.global.f32 	%f109, [_ZN3VLR17pv_thinLensCameraE+16];
	mul.f32 	%f110, %f109, %f109;
	ld.global.f32 	%f111, [_ZN3VLR17pv_thinLensCameraE+20];
	mul.f32 	%f112, %f111, %f111;
	mul.f32 	%f113, %f108, %f109;
	mul.f32 	%f114, %f109, %f111;
	mul.f32 	%f115, %f111, %f108;
	ld.global.f32 	%f116, [_ZN3VLR17pv_thinLensCameraE+24];
	mul.f32 	%f117, %f108, %f116;
	mul.f32 	%f118, %f116, %f109;
	mul.f32 	%f119, %f116, %f111;
	add.f32 	%f120, %f110, %f112;
	add.f32 	%f121, %f120, %f120;
	mov.f32 	%f311, 0f3F800000;
	sub.f32 	%f3, %f311, %f121;
	add.f32 	%f123, %f113, %f119;
	add.f32 	%f4, %f123, %f123;
	sub.f32 	%f124, %f115, %f118;
	add.f32 	%f5, %f124, %f124;
	sub.f32 	%f125, %f113, %f119;
	add.f32 	%f6, %f125, %f125;
	fma.rn.f32 	%f126, %f108, %f108, %f112;
	add.f32 	%f127, %f126, %f126;
	sub.f32 	%f7, %f311, %f127;
	add.f32 	%f128, %f114, %f117;
	add.f32 	%f8, %f128, %f128;
	add.f32 	%f129, %f115, %f118;
	add.f32 	%f9, %f129, %f129;
	sub.f32 	%f10, %f114, %f117;
	fma.rn.f32 	%f11, %f108, %f108, %f110;
	fma.rn.f32 	%f12, %f105, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f295, %f107, 0f40000000, 0fBF800000;
	setp.eq.f32	%p1, %f12, 0f00000000;
	setp.eq.f32	%p2, %f295, 0f00000000;
	and.pred  	%p3, %p1, %p2;
	mov.f32 	%f309, 0f00000000;
	mov.f32 	%f310, %f309;
	@%p3 bra 	BB4_56;

	neg.f32 	%f130, %f295;
	setp.ltu.f32	%p4, %f12, %f130;
	@%p4 bra 	BB4_5;
	bra.uni 	BB4_2;

BB4_5:
	setp.gt.f32	%p6, %f12, %f295;
	@%p6 bra 	BB4_7;
	bra.uni 	BB4_6;

BB4_7:
	div.rn.f32 	%f134, %f12, %f295;
	add.f32 	%f296, %f134, 0f40C00000;
	mov.f32 	%f12, %f295;
	bra.uni 	BB4_8;

BB4_2:
	setp.gt.f32	%p5, %f12, %f295;
	@%p5 bra 	BB4_4;
	bra.uni 	BB4_3;

BB4_4:
	div.rn.f32 	%f296, %f295, %f12;
	mov.f32 	%f295, %f12;
	bra.uni 	BB4_9;

BB4_6:
	div.rn.f32 	%f133, %f295, %f12;
	add.f32 	%f296, %f133, 0f40800000;

BB4_8:
	neg.f32 	%f295, %f12;
	bra.uni 	BB4_9;

BB4_3:
	div.rn.f32 	%f131, %f12, %f295;
	mov.f32 	%f132, 0f40000000;
	sub.f32 	%f296, %f132, %f131;

BB4_9:
	mul.f32 	%f303, %f296, 0f3F490FDB;
	abs.f32 	%f24, %f303;
	setp.neu.f32	%p7, %f24, 0f7F800000;
	mov.f32 	%f297, %f303;
	@%p7 bra 	BB4_11;

	mov.f32 	%f135, 0f00000000;
	mul.rn.f32 	%f297, %f303, %f135;

BB4_11:
	mul.f32 	%f136, %f297, 0f3F22F983;
	cvt.rni.s32.f32	%r232, %f136;
	cvt.rn.f32.s32	%f137, %r232;
	neg.f32 	%f138, %f137;
	mov.f32 	%f139, 0f3FC90FDA;
	fma.rn.f32 	%f140, %f138, %f139, %f297;
	mov.f32 	%f141, 0f33A22168;
	fma.rn.f32 	%f142, %f138, %f141, %f140;
	mov.f32 	%f143, 0f27C234C5;
	fma.rn.f32 	%f298, %f138, %f143, %f142;
	abs.f32 	%f144, %f297;
	setp.leu.f32	%p8, %f144, 0f47CE4780;
	@%p8 bra 	BB4_22;

	mov.b32 	 %r4, %f297;
	shl.b32 	%r122, %r4, 8;
	or.b32  	%r5, %r122, -2147483648;
	add.u64 	%rd54, %SP, 0;
	cvta.to.local.u64 	%rd73, %rd54;
	mov.u32 	%r224, 0;
	mov.u64 	%rd72, __cudart_i2opi_f;
	mov.u32 	%r223, -6;

BB4_13:
	.pragma "nounroll";
	ld.const.u32 	%r125, [%rd72];
	// inline asm
	{
	mad.lo.cc.u32   %r123, %r125, %r5, %r224;
	madc.hi.u32     %r224, %r125, %r5,  0;
	}
	// inline asm
	st.local.u32 	[%rd73], %r123;
	add.s64 	%rd73, %rd73, 4;
	add.s64 	%rd72, %rd72, 4;
	add.s32 	%r223, %r223, 1;
	setp.ne.s32	%p9, %r223, 0;
	@%p9 bra 	BB4_13;

	bfe.u32 	%r128, %r4, 23, 8;
	add.s32 	%r129, %r128, -128;
	shr.u32 	%r130, %r129, 5;
	and.b32  	%r10, %r4, -2147483648;
	cvta.to.local.u64 	%rd56, %rd54;
	st.local.u32 	[%rd56+24], %r224;
	bfe.u32 	%r11, %r4, 23, 5;
	mov.u32 	%r131, 6;
	sub.s32 	%r132, %r131, %r130;
	mul.wide.s32 	%rd57, %r132, 4;
	add.s64 	%rd6, %rd56, %rd57;
	ld.local.u32 	%r225, [%rd6];
	ld.local.u32 	%r226, [%rd6+-4];
	setp.eq.s32	%p10, %r11, 0;
	@%p10 bra 	BB4_16;

	mov.u32 	%r133, 32;
	sub.s32 	%r134, %r133, %r11;
	shr.u32 	%r135, %r226, %r134;
	shl.b32 	%r136, %r225, %r11;
	add.s32 	%r225, %r135, %r136;
	ld.local.u32 	%r137, [%rd6+-8];
	shr.u32 	%r138, %r137, %r134;
	shl.b32 	%r139, %r226, %r11;
	add.s32 	%r226, %r138, %r139;

BB4_16:
	shr.u32 	%r140, %r226, 30;
	shl.b32 	%r141, %r225, 2;
	add.s32 	%r227, %r140, %r141;
	shl.b32 	%r19, %r226, 2;
	shr.u32 	%r142, %r227, 31;
	shr.u32 	%r143, %r225, 30;
	add.s32 	%r20, %r142, %r143;
	setp.eq.s32	%p11, %r142, 0;
	@%p11 bra 	BB4_17;

	not.b32 	%r144, %r227;
	neg.s32 	%r229, %r19;
	setp.eq.s32	%p12, %r19, 0;
	selp.u32	%r145, 1, 0, %p12;
	add.s32 	%r227, %r145, %r144;
	xor.b32  	%r228, %r10, -2147483648;
	bra.uni 	BB4_19;

BB4_17:
	mov.u32 	%r228, %r10;
	mov.u32 	%r229, %r19;

BB4_19:
	clz.b32 	%r231, %r227;
	setp.eq.s32	%p13, %r231, 0;
	shl.b32 	%r146, %r227, %r231;
	mov.u32 	%r147, 32;
	sub.s32 	%r148, %r147, %r231;
	shr.u32 	%r149, %r229, %r148;
	add.s32 	%r150, %r149, %r146;
	selp.b32	%r28, %r227, %r150, %p13;
	mov.u32 	%r151, -921707870;
	mul.hi.u32 	%r230, %r28, %r151;
	setp.eq.s32	%p14, %r10, 0;
	neg.s32 	%r152, %r20;
	selp.b32	%r232, %r20, %r152, %p14;
	setp.lt.s32	%p15, %r230, 1;
	@%p15 bra 	BB4_21;

	mul.lo.s32 	%r153, %r28, -921707870;
	shr.u32 	%r154, %r153, 31;
	shl.b32 	%r155, %r230, 1;
	add.s32 	%r230, %r154, %r155;
	add.s32 	%r231, %r231, 1;

BB4_21:
	mov.u32 	%r156, 126;
	sub.s32 	%r157, %r156, %r231;
	shl.b32 	%r158, %r157, 23;
	add.s32 	%r159, %r230, 1;
	shr.u32 	%r160, %r159, 7;
	add.s32 	%r161, %r160, 1;
	shr.u32 	%r162, %r161, 1;
	add.s32 	%r163, %r162, %r158;
	or.b32  	%r164, %r163, %r228;
	mov.b32 	 %f298, %r164;

BB4_22:
	mul.rn.f32 	%f30, %f298, %f298;
	add.s32 	%r36, %r232, 1;
	and.b32  	%r37, %r36, 1;
	setp.eq.s32	%p16, %r37, 0;
	@%p16 bra 	BB4_24;

	mov.f32 	%f145, 0fBAB6061A;
	mov.f32 	%f146, 0f37CCF5CE;
	fma.rn.f32 	%f299, %f146, %f30, %f145;
	bra.uni 	BB4_25;

BB4_24:
	mov.f32 	%f147, 0f3C08839E;
	mov.f32 	%f148, 0fB94CA1F9;
	fma.rn.f32 	%f299, %f148, %f30, %f147;

BB4_25:
	@%p16 bra 	BB4_27;

	mov.f32 	%f149, 0f3D2AAAA5;
	fma.rn.f32 	%f150, %f299, %f30, %f149;
	mov.f32 	%f151, 0fBF000000;
	fma.rn.f32 	%f300, %f150, %f30, %f151;
	bra.uni 	BB4_28;

BB4_27:
	mov.f32 	%f152, 0fBE2AAAA3;
	fma.rn.f32 	%f153, %f299, %f30, %f152;
	mov.f32 	%f154, 0f00000000;
	fma.rn.f32 	%f300, %f153, %f30, %f154;

BB4_28:
	fma.rn.f32 	%f301, %f300, %f298, %f298;
	@%p16 bra 	BB4_30;

	fma.rn.f32 	%f301, %f300, %f30, %f311;

BB4_30:
	and.b32  	%r165, %r36, 2;
	setp.eq.s32	%p19, %r165, 0;
	@%p19 bra 	BB4_32;

	mov.f32 	%f156, 0f00000000;
	mov.f32 	%f157, 0fBF800000;
	fma.rn.f32 	%f301, %f301, %f157, %f156;

BB4_32:
	@%p7 bra 	BB4_34;

	mov.f32 	%f158, 0f00000000;
	mul.rn.f32 	%f303, %f303, %f158;

BB4_34:
	mul.f32 	%f159, %f303, 0f3F22F983;
	cvt.rni.s32.f32	%r242, %f159;
	cvt.rn.f32.s32	%f160, %r242;
	neg.f32 	%f161, %f160;
	fma.rn.f32 	%f163, %f161, %f139, %f303;
	fma.rn.f32 	%f165, %f161, %f141, %f163;
	fma.rn.f32 	%f304, %f161, %f143, %f165;
	abs.f32 	%f167, %f303;
	setp.leu.f32	%p21, %f167, 0f47CE4780;
	@%p21 bra 	BB4_45;

	mov.b32 	 %r39, %f303;
	shr.u32 	%r40, %r39, 23;
	shl.b32 	%r168, %r39, 8;
	or.b32  	%r41, %r168, -2147483648;
	add.u64 	%rd59, %SP, 0;
	cvta.to.local.u64 	%rd75, %rd59;
	mov.u32 	%r234, 0;
	mov.u64 	%rd74, __cudart_i2opi_f;
	mov.u32 	%r233, -6;

BB4_36:
	.pragma "nounroll";
	ld.const.u32 	%r171, [%rd74];
	// inline asm
	{
	mad.lo.cc.u32   %r169, %r171, %r41, %r234;
	madc.hi.u32     %r234, %r171, %r41,  0;
	}
	// inline asm
	st.local.u32 	[%rd75], %r169;
	add.s64 	%rd75, %rd75, 4;
	add.s64 	%rd74, %rd74, 4;
	add.s32 	%r233, %r233, 1;
	setp.ne.s32	%p22, %r233, 0;
	@%p22 bra 	BB4_36;

	and.b32  	%r174, %r40, 255;
	add.s32 	%r175, %r174, -128;
	shr.u32 	%r176, %r175, 5;
	and.b32  	%r46, %r39, -2147483648;
	cvta.to.local.u64 	%rd61, %rd59;
	st.local.u32 	[%rd61+24], %r234;
	mov.u32 	%r177, 6;
	sub.s32 	%r178, %r177, %r176;
	mul.wide.s32 	%rd62, %r178, 4;
	add.s64 	%rd12, %rd61, %rd62;
	ld.local.u32 	%r235, [%rd12];
	ld.local.u32 	%r236, [%rd12+-4];
	and.b32  	%r49, %r40, 31;
	setp.eq.s32	%p23, %r49, 0;
	@%p23 bra 	BB4_39;

	mov.u32 	%r179, 32;
	sub.s32 	%r180, %r179, %r49;
	shr.u32 	%r181, %r236, %r180;
	shl.b32 	%r182, %r235, %r49;
	add.s32 	%r235, %r181, %r182;
	ld.local.u32 	%r183, [%rd12+-8];
	shr.u32 	%r184, %r183, %r180;
	shl.b32 	%r185, %r236, %r49;
	add.s32 	%r236, %r184, %r185;

BB4_39:
	shr.u32 	%r186, %r236, 30;
	shl.b32 	%r187, %r235, 2;
	add.s32 	%r237, %r186, %r187;
	shl.b32 	%r55, %r236, 2;
	shr.u32 	%r188, %r237, 31;
	shr.u32 	%r189, %r235, 30;
	add.s32 	%r56, %r188, %r189;
	setp.eq.s32	%p24, %r188, 0;
	@%p24 bra 	BB4_40;

	not.b32 	%r190, %r237;
	neg.s32 	%r239, %r55;
	setp.eq.s32	%p25, %r55, 0;
	selp.u32	%r191, 1, 0, %p25;
	add.s32 	%r237, %r191, %r190;
	xor.b32  	%r238, %r46, -2147483648;
	bra.uni 	BB4_42;

BB4_40:
	mov.u32 	%r238, %r46;
	mov.u32 	%r239, %r55;

BB4_42:
	clz.b32 	%r241, %r237;
	setp.eq.s32	%p26, %r241, 0;
	shl.b32 	%r192, %r237, %r241;
	mov.u32 	%r193, 32;
	sub.s32 	%r194, %r193, %r241;
	shr.u32 	%r195, %r239, %r194;
	add.s32 	%r196, %r195, %r192;
	selp.b32	%r64, %r237, %r196, %p26;
	mov.u32 	%r197, -921707870;
	mul.hi.u32 	%r240, %r64, %r197;
	setp.eq.s32	%p27, %r46, 0;
	neg.s32 	%r198, %r56;
	selp.b32	%r242, %r56, %r198, %p27;
	setp.lt.s32	%p28, %r240, 1;
	@%p28 bra 	BB4_44;

	mul.lo.s32 	%r199, %r64, -921707870;
	shr.u32 	%r200, %r199, 31;
	shl.b32 	%r201, %r240, 1;
	add.s32 	%r240, %r200, %r201;
	add.s32 	%r241, %r241, 1;

BB4_44:
	mov.u32 	%r202, 126;
	sub.s32 	%r203, %r202, %r241;
	shl.b32 	%r204, %r203, 23;
	add.s32 	%r205, %r240, 1;
	shr.u32 	%r206, %r205, 7;
	add.s32 	%r207, %r206, 1;
	shr.u32 	%r208, %r207, 1;
	add.s32 	%r209, %r208, %r204;
	or.b32  	%r210, %r209, %r238;
	mov.b32 	 %f304, %r210;

BB4_45:
	mul.rn.f32 	%f47, %f304, %f304;
	and.b32  	%r72, %r242, 1;
	setp.eq.s32	%p29, %r72, 0;
	@%p29 bra 	BB4_47;

	mov.f32 	%f168, 0fBAB6061A;
	mov.f32 	%f169, 0f37CCF5CE;
	fma.rn.f32 	%f305, %f169, %f47, %f168;
	bra.uni 	BB4_48;

BB4_47:
	mov.f32 	%f170, 0f3C08839E;
	mov.f32 	%f171, 0fB94CA1F9;
	fma.rn.f32 	%f305, %f171, %f47, %f170;

BB4_48:
	@%p29 bra 	BB4_50;

	mov.f32 	%f172, 0f3D2AAAA5;
	fma.rn.f32 	%f173, %f305, %f47, %f172;
	mov.f32 	%f174, 0fBF000000;
	fma.rn.f32 	%f306, %f173, %f47, %f174;
	bra.uni 	BB4_51;

BB4_50:
	mov.f32 	%f175, 0fBE2AAAA3;
	fma.rn.f32 	%f176, %f305, %f47, %f175;
	mov.f32 	%f177, 0f00000000;
	fma.rn.f32 	%f306, %f176, %f47, %f177;

BB4_51:
	fma.rn.f32 	%f307, %f306, %f304, %f304;
	@%p29 bra 	BB4_53;

	fma.rn.f32 	%f307, %f306, %f47, %f311;

BB4_53:
	and.b32  	%r211, %r242, 2;
	setp.eq.s32	%p32, %r211, 0;
	@%p32 bra 	BB4_55;

	mov.f32 	%f179, 0f00000000;
	mov.f32 	%f180, 0fBF800000;
	fma.rn.f32 	%f307, %f307, %f180, %f179;

BB4_55:
	mul.f32 	%f310, %f295, %f307;
	mul.f32 	%f309, %f295, %f301;

BB4_56:
	add.f32 	%f182, %f10, %f10;
	add.f32 	%f183, %f11, %f11;
	sub.f32 	%f184, %f311, %f183;
	ld.global.f32 	%f63, [_ZN3VLR17pv_thinLensCameraE+36];
	mul.f32 	%f64, %f309, %f63;
	mul.f32 	%f65, %f310, %f63;
	mul.f32 	%f185, %f6, 0f00000000;
	fma.rn.f32 	%f186, %f3, 0f00000000, %f185;
	add.f32 	%f187, %f9, %f186;
	mul.f32 	%f188, %f4, 0f00000000;
	fma.rn.f32 	%f189, %f7, 0f00000000, %f188;
	add.f32 	%f190, %f182, %f189;
	mul.f32 	%f191, %f5, 0f00000000;
	fma.rn.f32 	%f192, %f8, 0f00000000, %f191;
	add.f32 	%f193, %f184, %f192;
	mul.f32 	%f194, %f190, %f190;
	fma.rn.f32 	%f195, %f187, %f187, %f194;
	fma.rn.f32 	%f196, %f193, %f193, %f195;
	sqrt.rn.f32 	%f197, %f196;
	rcp.rn.f32 	%f198, %f197;
	mul.f32 	%f66, %f187, %f198;
	mul.f32 	%f67, %f190, %f198;
	mul.f32 	%f68, %f193, %f198;
	fma.rn.f32 	%f199, %f6, 0f00000000, %f3;
	fma.rn.f32 	%f200, %f9, 0f00000000, %f199;
	fma.rn.f32 	%f201, %f7, 0f00000000, %f4;
	fma.rn.f32 	%f202, %f182, 0f00000000, %f201;
	fma.rn.f32 	%f203, %f8, 0f00000000, %f5;
	fma.rn.f32 	%f204, %f184, 0f00000000, %f203;
	mul.f32 	%f205, %f200, %f200;
	fma.rn.f32 	%f206, %f202, %f202, %f205;
	fma.rn.f32 	%f207, %f204, %f204, %f206;
	sqrt.rn.f32 	%f208, %f207;
	rcp.rn.f32 	%f209, %f208;
	mul.f32 	%f69, %f200, %f209;
	mul.f32 	%f70, %f202, %f209;
	mul.f32 	%f71, %f204, %f209;
	mul.f32 	%f210, %f6, %f65;
	fma.rn.f32 	%f211, %f3, %f64, %f210;
	fma.rn.f32 	%f72, %f9, 0f00000000, %f211;
	mul.f32 	%f212, %f7, %f65;
	fma.rn.f32 	%f213, %f4, %f64, %f212;
	fma.rn.f32 	%f73, %f182, 0f00000000, %f213;
	mul.f32 	%f214, %f8, %f65;
	fma.rn.f32 	%f215, %f5, %f64, %f214;
	fma.rn.f32 	%f74, %f184, 0f00000000, %f215;
	setp.leu.f32	%p33, %f63, 0f00000000;
	@%p33 bra 	BB4_58;

	mul.f32 	%f216, %f63, 0f40490FDB;
	mul.f32 	%f217, %f63, %f216;
	rcp.rn.f32 	%f311, %f217;

BB4_58:
	ld.global.f32 	%f219, [_ZN3VLR17pv_thinLensCameraE];
	ld.global.f32 	%f220, [_ZN3VLR17pv_thinLensCameraE+4];
	ld.global.f32 	%f221, [_ZN3VLR17pv_thinLensCameraE+8];
	cvt.rn.f32.u32	%f222, %r1;
	div.rn.f32 	%f223, %f1, %f222;
	cvt.rn.f32.u32	%f224, %r2;
	div.rn.f32 	%f225, %f2, %f224;
	mov.f32 	%f226, 0f3F000000;
	sub.f32 	%f227, %f226, %f223;
	ld.global.f32 	%f228, [_ZN3VLR17pv_thinLensCameraE+48];
	mul.f32 	%f229, %f227, %f228;
	sub.f32 	%f230, %f226, %f225;
	ld.global.f32 	%f231, [_ZN3VLR17pv_thinLensCameraE+52];
	mul.f32 	%f232, %f230, %f231;
	sub.f32 	%f233, %f229, %f64;
	sub.f32 	%f234, %f232, %f65;
	mul.f32 	%f235, %f234, %f234;
	fma.rn.f32 	%f236, %f233, %f233, %f235;
	ld.global.f32 	%f237, [_ZN3VLR17pv_thinLensCameraE+44];
	fma.rn.f32 	%f238, %f237, %f237, %f236;
	sqrt.rn.f32 	%f239, %f238;
	rcp.rn.f32 	%f240, %f239;
	mul.f32 	%f241, %f233, %f240;
	mul.f32 	%f242, %f234, %f240;
	mul.f32 	%f243, %f237, %f240;
	ld.global.f32 	%f244, [_ZN3VLR17pv_thinLensCameraE+40];
	mul.f32 	%f245, %f244, %f244;
	mul.f32 	%f246, %f243, %f243;
	mul.f32 	%f247, %f243, %f246;
	ld.global.f32 	%f248, [_ZN3VLR17pv_thinLensCameraE+56];
	mul.f32 	%f249, %f248, %f247;
	div.rn.f32 	%f250, %f245, %f249;
	mul.f32 	%f251, %f68, %f70;
	mul.f32 	%f252, %f67, %f71;
	sub.f32 	%f253, %f252, %f251;
	mul.f32 	%f254, %f253, %f242;
	fma.rn.f32 	%f255, %f69, %f241, %f254;
	fma.rn.f32 	%f315, %f66, %f243, %f255;
	mul.f32 	%f256, %f66, %f71;
	mul.f32 	%f257, %f68, %f69;
	sub.f32 	%f258, %f257, %f256;
	mul.f32 	%f259, %f258, %f242;
	fma.rn.f32 	%f260, %f70, %f241, %f259;
	fma.rn.f32 	%f316, %f67, %f243, %f260;
	mul.f32 	%f261, %f67, %f69;
	mul.f32 	%f262, %f66, %f70;
	sub.f32 	%f263, %f262, %f261;
	mul.f32 	%f264, %f263, %f242;
	fma.rn.f32 	%f265, %f71, %f241, %f264;
	fma.rn.f32 	%f317, %f68, %f243, %f265;
	mul.f32 	%f266, %f67, %f316;
	fma.rn.f32 	%f267, %f66, %f315, %f266;
	fma.rn.f32 	%f268, %f68, %f317, %f267;
	cvt.f64.f32	%fd1, %f268;
	abs.f64 	%fd2, %fd1;
	cvt.rn.f32.f64	%f269, %fd2;
	mul.f32 	%f270, %f311, %f250;
	div.rn.f32 	%f271, %f269, %f270;
	mul.f32 	%f272, %f271, 0f3F371437;
	fma.rn.f32 	%f273, %f271, 0f3E59C6ED, %f272;
	fma.rn.f32 	%f274, %f271, 0f3D93D07D, %f273;
	add.u64 	%rd63, %SP, 28;
	cvta.to.local.u64 	%rd13, %rd63;
	st.local.f32 	[%rd13], %f274;
	st.local.f32 	[%rd13+4], %f271;
	st.local.f32 	[%rd13+8], %f271;
	st.local.f32 	[%rd13+12], %f271;
	mov.u32 	%r243, 0;
	st.local.u32 	[%rd13+16], %r243;
	st.local.u32 	[%rd13+20], %r243;
	st.local.u32 	[%rd13+24], %r243;
	add.f32 	%f314, %f74, %f221;
	add.f32 	%f313, %f73, %f220;
	add.f32 	%f312, %f72, %f219;
	mov.f32 	%f318, 0f00000000;
	bra.uni 	BB4_59;

BB4_61:
	ld.local.f32 	%f312, [%rd13+28];
	ld.local.f32 	%f313, [%rd13+32];
	ld.local.f32 	%f314, [%rd13+36];
	ld.local.f32 	%f315, [%rd13+40];
	ld.local.f32 	%f316, [%rd13+44];
	ld.local.f32 	%f317, [%rd13+48];
	mov.f32 	%f318, 0f38D1B717;
	mov.u32 	%r243, 1;

BB4_59:
	ld.global.u32 	%r213, [_ZN3VLR11pv_topGroupE];
	mov.f32 	%f282, 0f7F800000;
	mov.u32 	%r215, 64;
	// inline asm
	call _rt_trace_64, (%r213, %f312, %f313, %f314, %f315, %f316, %f317, %r243, %f318, %f282, %rd63, %r215);
	// inline asm
	ld.local.u8 	%rs1, [%rd13+60];
	setp.eq.s16	%p34, %rs1, 0;
	@%p34 bra 	BB4_61;

	ld.global.v2.u32 	{%r218, %r219}, [_ZN3VLR14sm_launchIndexE];
	cvt.u64.u32	%rd67, %r218;
	cvt.u64.u32	%rd68, %r219;
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd24, %r76, %r77, %rd67, %rd68, %rd19, %rd19);
	// inline asm
	ld.f32 	%f283, [%rd65];
	ld.local.f32 	%f284, [%rd13+16];
	add.f32 	%f285, %f284, %f283;
	ld.f32 	%f286, [%rd65+4];
	ld.f32 	%f287, [%rd65+8];
	st.f32 	[%rd65], %f285;
	ld.local.f32 	%f288, [%rd13+20];
	add.f32 	%f289, %f288, %f286;
	st.f32 	[%rd65+4], %f289;
	ld.local.f32 	%f290, [%rd13+24];
	add.f32 	%f291, %f290, %f287;
	st.f32 	[%rd65+8], %f291;
	ret;
}

	// .globl	_ZN3VLR9exceptionEv
.visible .entry _ZN3VLR9exceptionEv(

)
{
	.local .align 16 .b8 	__local_depot5[208];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<40>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<83>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<89>;


	mov.u64 	%SPL, __local_depot5;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%r39), _rt_get_exception_code, ();
	// inline asm
	setp.eq.s32	%p1, %r39, 1020;
	@%p1 bra 	BB5_58;
	bra.uni 	BB5_1;

BB5_58:
	ld.volatile.global.u32 	%r36, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r37, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r38, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r80), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p39, %r80, 0;
	@%p39 bra 	BB5_60;

	add.u64 	%rd83, %SP, 184;
	cvta.to.local.u64 	%rd84, %rd83;
	st.local.v2.u32 	[%rd84], {%r36, %r37};
	st.local.u32 	[%rd84+8], %r38;
	mov.u64 	%rd85, $str;
	cvta.global.u64 	%rd86, %rd85;
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd86;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd83;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r81, [retval0+0];
	
	//{
	}// Callseq End 24
	bra.uni 	BB5_60;

BB5_1:
	setp.eq.s32	%p2, %r39, 1021;
	@%p2 bra 	BB5_52;
	bra.uni 	BB5_2;

BB5_52:
	ld.volatile.global.u32 	%r30, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r31, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r32, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r33, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd5, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r34, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u64 	%rd6, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	mov.u64 	%rd88, 1;
	setp.lt.u32	%p36, %r30, 2;
	mov.u64 	%rd87, %rd88;
	@%p36 bra 	BB5_54;

	ld.volatile.global.u64 	%rd87, [_ZN21rti_internal_register24reg_exception_64_detail2E];

BB5_54:
	setp.lt.u32	%p37, %r30, 3;
	@%p37 bra 	BB5_56;

	ld.volatile.global.u64 	%rd88, [_ZN21rti_internal_register24reg_exception_64_detail3E];

BB5_56:
	ld.volatile.global.u32 	%r35, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u64 	%rd11, [_ZN21rti_internal_register24reg_exception_64_detail4E];
	ld.volatile.global.u64 	%rd12, [_ZN21rti_internal_register24reg_exception_64_detail5E];
	ld.volatile.global.u64 	%rd13, [_ZN21rti_internal_register24reg_exception_64_detail6E];
	// inline asm
	call (%r78), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p38, %r78, 0;
	@%p38 bra 	BB5_60;

	add.u64 	%rd79, %SP, 96;
	cvta.to.local.u64 	%rd80, %rd79;
	st.local.v2.u32 	[%rd80], {%r31, %r32};
	st.local.u32 	[%rd80+8], %r33;
	st.local.u32 	[%rd80+24], %r34;
	st.local.u32 	[%rd80+56], %r35;
	st.local.u64 	[%rd80+16], %rd5;
	st.local.u64 	[%rd80+32], %rd6;
	st.local.u64 	[%rd80+40], %rd87;
	st.local.u64 	[%rd80+48], %rd88;
	st.local.u64 	[%rd80+64], %rd11;
	st.local.u64 	[%rd80+72], %rd12;
	st.local.u64 	[%rd80+80], %rd13;
	mov.u64 	%rd81, $str1;
	cvta.global.u64 	%rd82, %rd81;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd82;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd79;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r79, [retval0+0];
	
	//{
	}// Callseq End 23

BB5_60:
	ret;

BB5_2:
	setp.eq.s32	%p3, %r39, 1006;
	@%p3 bra 	BB5_41;
	bra.uni 	BB5_3;

BB5_41:
	// inline asm
	call (%r69), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p29, %r69, 0;
	@%p29 bra 	BB5_43;

	mov.u64 	%rd64, $str2;
	cvta.global.u64 	%rd65, %rd64;
	mov.u64 	%rd66, 0;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd65;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r70, [retval0+0];
	
	//{
	}// Callseq End 19

BB5_43:
	ld.volatile.global.u32 	%r71, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p30, %r71, 0;
	@%p30 bra 	BB5_50;

	setp.eq.s32	%p31, %r71, 1;
	@%p31 bra 	BB5_48;
	bra.uni 	BB5_45;

BB5_48:
	ld.volatile.global.u32 	%r29, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r74), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p34, %r74, 0;
	@%p34 bra 	BB5_60;

	add.u64 	%rd70, %SP, 88;
	cvta.to.local.u64 	%rd71, %rd70;
	st.local.u32 	[%rd71], %r29;
	mov.u64 	%rd72, $str4;
	cvta.global.u64 	%rd73, %rd72;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd73;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd70;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r75, [retval0+0];
	
	//{
	}// Callseq End 21
	bra.uni 	BB5_60;

BB5_3:
	setp.eq.s32	%p4, %r39, 1007;
	@%p4 bra 	BB5_30;
	bra.uni 	BB5_4;

BB5_30:
	// inline asm
	call (%r60), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p22, %r60, 0;
	@%p22 bra 	BB5_32;

	mov.u64 	%rd49, $str6;
	cvta.global.u64 	%rd50, %rd49;
	mov.u64 	%rd51, 0;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd50;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r61, [retval0+0];
	
	//{
	}// Callseq End 15

BB5_32:
	ld.volatile.global.u32 	%r62, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p23, %r62, 0;
	@%p23 bra 	BB5_39;

	setp.eq.s32	%p24, %r62, 1;
	@%p24 bra 	BB5_37;
	bra.uni 	BB5_34;

BB5_37:
	ld.volatile.global.u32 	%r27, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r65), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p27, %r65, 0;
	@%p27 bra 	BB5_60;

	add.u64 	%rd56, %SP, 72;
	cvta.to.local.u64 	%rd57, %rd56;
	st.local.u32 	[%rd57], %r27;
	mov.u64 	%rd58, $str8;
	cvta.global.u64 	%rd59, %rd58;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd59;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd56;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r66, [retval0+0];
	
	//{
	}// Callseq End 17
	bra.uni 	BB5_60;

BB5_4:
	setp.eq.s32	%p5, %r39, 1018;
	@%p5 bra 	BB5_19;
	bra.uni 	BB5_5;

BB5_19:
	// inline asm
	call (%r51), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p15, %r51, 0;
	@%p15 bra 	BB5_21;

	mov.u64 	%rd36, $str10;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, 0;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd37;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd38;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r52, [retval0+0];
	
	//{
	}// Callseq End 11

BB5_21:
	ld.volatile.global.u32 	%r53, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p16, %r53, 0;
	@%p16 bra 	BB5_28;

	setp.eq.s32	%p17, %r53, 1;
	@%p17 bra 	BB5_26;
	bra.uni 	BB5_23;

BB5_26:
	ld.volatile.global.u32 	%r25, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r56), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p20, %r56, 0;
	@%p20 bra 	BB5_60;

	add.u64 	%rd42, %SP, 56;
	cvta.to.local.u64 	%rd43, %rd42;
	st.local.u32 	[%rd43], %r25;
	mov.u64 	%rd44, $str12;
	cvta.global.u64 	%rd45, %rd44;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd45;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r57, [retval0+0];
	
	//{
	}// Callseq End 13
	bra.uni 	BB5_60;

BB5_50:
	// inline asm
	call (%r76), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p35, %r76, 0;
	@%p35 bra 	BB5_60;

	mov.u64 	%rd74, $str3;
	cvta.global.u64 	%rd75, %rd74;
	mov.u64 	%rd76, 0;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd75;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd76;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r77, [retval0+0];
	
	//{
	}// Callseq End 22
	bra.uni 	BB5_60;

BB5_45:
	setp.ne.s32	%p32, %r71, 2;
	@%p32 bra 	BB5_60;

	// inline asm
	call (%r72), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p33, %r72, 0;
	@%p33 bra 	BB5_60;

	mov.u64 	%rd67, $str5;
	cvta.global.u64 	%rd68, %rd67;
	mov.u64 	%rd69, 0;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd68;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd69;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r73, [retval0+0];
	
	//{
	}// Callseq End 20
	bra.uni 	BB5_60;

BB5_5:
	setp.eq.s32	%p6, %r39, 1019;
	@%p6 bra 	BB5_17;
	bra.uni 	BB5_6;

BB5_17:
	ld.volatile.global.u32 	%r49, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r22, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r23, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r24, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd2, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd3, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd4, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	// inline asm
	call (%r48), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p14, %r48, 0;
	@%p14 bra 	BB5_60;

	add.u64 	%rd32, %SP, 16;
	cvta.to.local.u64 	%rd33, %rd32;
	st.local.v2.u32 	[%rd33], {%r22, %r23};
	st.local.u32 	[%rd33+8], %r24;
	st.local.u64 	[%rd33+16], %rd2;
	st.local.u64 	[%rd33+24], %rd3;
	st.local.u64 	[%rd33+32], %rd4;
	mov.u64 	%rd34, $str14;
	cvta.global.u64 	%rd35, %rd34;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r50, [retval0+0];
	
	//{
	}// Callseq End 10
	bra.uni 	BB5_60;

BB5_39:
	ld.volatile.global.u32 	%r28, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r67), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p28, %r67, 0;
	@%p28 bra 	BB5_60;

	add.u64 	%rd60, %SP, 80;
	cvta.to.local.u64 	%rd61, %rd60;
	st.local.u32 	[%rd61], %r28;
	mov.u64 	%rd62, $str7;
	cvta.global.u64 	%rd63, %rd62;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd63;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd60;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r68, [retval0+0];
	
	//{
	}// Callseq End 18
	bra.uni 	BB5_60;

BB5_34:
	setp.ne.s32	%p25, %r62, 2;
	@%p25 bra 	BB5_60;

	ld.volatile.global.u32 	%r26, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r63), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p26, %r63, 0;
	@%p26 bra 	BB5_60;

	add.u64 	%rd52, %SP, 64;
	cvta.to.local.u64 	%rd53, %rd52;
	st.local.u32 	[%rd53], %r26;
	mov.u64 	%rd54, $str9;
	cvta.global.u64 	%rd55, %rd54;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd52;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r64, [retval0+0];
	
	//{
	}// Callseq End 16
	bra.uni 	BB5_60;

BB5_6:
	setp.eq.s32	%p7, %r39, 1022;
	@%p7 bra 	BB5_15;
	bra.uni 	BB5_7;

BB5_15:
	ld.volatile.global.u32 	%r10, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r11, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r12, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u32 	%r13, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r14, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u32 	%r15, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u32 	%r16, [_ZN21rti_internal_register21reg_exception_detail3E];
	ld.volatile.global.u32 	%r17, [_ZN21rti_internal_register21reg_exception_detail4E];
	ld.volatile.global.u32 	%r18, [_ZN21rti_internal_register21reg_exception_detail5E];
	ld.volatile.global.u32 	%r19, [_ZN21rti_internal_register21reg_exception_detail6E];
	ld.volatile.global.u32 	%r20, [_ZN21rti_internal_register21reg_exception_detail7E];
	ld.volatile.global.u32 	%r21, [_ZN21rti_internal_register21reg_exception_detail8E];
	// inline asm
	call (%r46), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p13, %r46, 0;
	@%p13 bra 	BB5_60;

	mov.b32 	 %f1, %r13;
	cvt.f64.f32	%fd1, %f1;
	mov.b32 	 %f2, %r14;
	cvt.f64.f32	%fd2, %f2;
	mov.b32 	 %f3, %r15;
	cvt.f64.f32	%fd3, %f3;
	mov.b32 	 %f4, %r16;
	cvt.f64.f32	%fd4, %f4;
	mov.b32 	 %f5, %r17;
	cvt.f64.f32	%fd5, %f5;
	mov.b32 	 %f6, %r18;
	cvt.f64.f32	%fd6, %f6;
	mov.b32 	 %f7, %r20;
	cvt.f64.f32	%fd7, %f7;
	mov.b32 	 %f8, %r21;
	cvt.f64.f32	%fd8, %f8;
	add.u64 	%rd28, %SP, 96;
	cvta.to.local.u64 	%rd29, %rd28;
	st.local.v2.u32 	[%rd29], {%r10, %r11};
	st.local.u32 	[%rd29+8], %r12;
	st.local.u32 	[%rd29+64], %r19;
	st.local.f64 	[%rd29+16], %fd1;
	st.local.f64 	[%rd29+24], %fd2;
	st.local.f64 	[%rd29+32], %fd3;
	st.local.f64 	[%rd29+40], %fd4;
	st.local.f64 	[%rd29+48], %fd5;
	st.local.f64 	[%rd29+56], %fd6;
	st.local.f64 	[%rd29+72], %fd7;
	st.local.f64 	[%rd29+80], %fd8;
	mov.u64 	%rd30, $str15;
	cvta.global.u64 	%rd31, %rd30;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd31;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r47, [retval0+0];
	
	//{
	}// Callseq End 9
	bra.uni 	BB5_60;

BB5_28:
	// inline asm
	call (%r58), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p21, %r58, 0;
	@%p21 bra 	BB5_60;

	mov.u64 	%rd46, $str11;
	cvta.global.u64 	%rd47, %rd46;
	mov.u64 	%rd48, 0;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd47;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r59, [retval0+0];
	
	//{
	}// Callseq End 14
	bra.uni 	BB5_60;

BB5_23:
	setp.ne.s32	%p18, %r53, 2;
	@%p18 bra 	BB5_60;

	// inline asm
	call (%r54), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p19, %r54, 0;
	@%p19 bra 	BB5_60;

	mov.u64 	%rd39, $str13;
	cvta.global.u64 	%rd40, %rd39;
	mov.u64 	%rd41, 0;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd40;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd41;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r55, [retval0+0];
	
	//{
	}// Callseq End 12
	bra.uni 	BB5_60;

BB5_7:
	setp.eq.s32	%p8, %r39, 1023;
	add.u64 	%rd14, %SP, 0;
	cvta.to.local.u64 	%rd15, %rd14;
	add.s64 	%rd1, %rd15, 4;
	@%p8 bra 	BB5_13;
	bra.uni 	BB5_8;

BB5_13:
	ld.volatile.global.u32 	%r6, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r7, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r8, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u32 	%r9, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r44), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p12, %r44, 0;
	@%p12 bra 	BB5_60;

	st.local.u32 	[%rd15], %r6;
	st.local.u32 	[%rd1], %r7;
	st.local.v2.u32 	[%rd1+4], {%r8, %r9};
	mov.u64 	%rd26, $str16;
	cvta.global.u64 	%rd27, %rd26;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd27;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r45, [retval0+0];
	
	//{
	}// Callseq End 8
	bra.uni 	BB5_60;

BB5_8:
	add.s32 	%r2, %r39, -1024;
	setp.lt.u32	%p9, %r2, 64512;
	ld.volatile.global.u32 	%r3, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r4, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r5, [_ZN21rti_internal_register14reg_rayIndex_zE];
	@%p9 bra 	BB5_11;
	bra.uni 	BB5_9;

BB5_11:
	// inline asm
	call (%r42), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p11, %r42, 0;
	@%p11 bra 	BB5_60;

	add.s32 	%r82, %r39, -1024;
	st.local.u32 	[%rd15], %r82;
	st.local.u32 	[%rd1], %r3;
	st.local.v2.u32 	[%rd1+4], {%r4, %r5};
	mov.u64 	%rd22, $str17;
	cvta.global.u64 	%rd23, %rd22;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r43, [retval0+0];
	
	//{
	}// Callseq End 7
	bra.uni 	BB5_60;

BB5_9:
	// inline asm
	call (%r40), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p10, %r40, 0;
	@%p10 bra 	BB5_60;

	add.u64 	%rd16, %SP, 184;
	cvta.to.local.u64 	%rd17, %rd16;
	st.local.v2.u32 	[%rd17], {%r3, %r4};
	st.local.u32 	[%rd17+8], %r5;
	mov.u64 	%rd18, $str18;
	cvta.global.u64 	%rd19, %rd18;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r41, [retval0+0];
	
	//{
	}// Callseq End 6
	bra.uni 	BB5_60;
}

	// .weak	_ZN3VLR16Vector3DTemplateIfEC2Ev
.weak .func _ZN3VLR16Vector3DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR16Vector3DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR16Vector3DTemplateIfEC2Ef
.weak .func _ZN3VLR16Vector3DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR16Vector3DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR16Vector3DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector3DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Vector3DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	ret;
}

	// .weak	_ZN3VLR16Vector3DTemplateIfEC2Efff
.weak .func _ZN3VLR16Vector3DTemplateIfEC2Efff(
	.param .b64 _ZN3VLR16Vector3DTemplateIfEC2Efff_param_0,
	.param .b32 _ZN3VLR16Vector3DTemplateIfEC2Efff_param_1,
	.param .b32 _ZN3VLR16Vector3DTemplateIfEC2Efff_param_2,
	.param .b32 _ZN3VLR16Vector3DTemplateIfEC2Efff_param_3
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector3DTemplateIfEC2Efff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Vector3DTemplateIfEC2Efff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR16Vector3DTemplateIfEC2Efff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR16Vector3DTemplateIfEC2Efff_param_3];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR16Vector4DTemplateIfEC2Ev
.weak .func _ZN3VLR16Vector4DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR16Vector4DTemplateIfEC2Ef
.weak .func _ZN3VLR16Vector4DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector4DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Vector4DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	st.f32 	[%rd1+12], %f1;
	ret;
}

	// .weak	_ZN3VLR16Vector4DTemplateIfEC2Effff
.weak .func _ZN3VLR16Vector4DTemplateIfEC2Effff(
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_0,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_1,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_2,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_3,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_4
)
{
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_3];
	ld.param.f32 	%f4, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_4];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+12], %f4;
	ret;
}

	// .weak	_ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf
.weak .func _ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf(
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_0,
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_1,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_2
)
{
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_1];
	ld.param.f32 	%f1, [_ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_2];
	ld.f32 	%f2, [%rd2];
	st.f32 	[%rd1], %f2;
	ld.f32 	%f3, [%rd2+4];
	st.f32 	[%rd1+4], %f3;
	ld.f32 	%f4, [%rd2+8];
	st.f32 	[%rd1+8], %f4;
	st.f32 	[%rd1+12], %f1;
	ret;
}

	// .weak	_ZN3VLR16Normal3DTemplateIfEC2Ev
.weak .func _ZN3VLR16Normal3DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR16Normal3DTemplateIfEC2Ef
.weak .func _ZN3VLR16Normal3DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR16Normal3DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Normal3DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Normal3DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	ret;
}

	// .weak	_ZN3VLR16Normal3DTemplateIfEC2Efff
.weak .func _ZN3VLR16Normal3DTemplateIfEC2Efff(
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2Efff_param_0,
	.param .b32 _ZN3VLR16Normal3DTemplateIfEC2Efff_param_1,
	.param .b32 _ZN3VLR16Normal3DTemplateIfEC2Efff_param_2,
	.param .b32 _ZN3VLR16Normal3DTemplateIfEC2Efff_param_3
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Normal3DTemplateIfEC2Efff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Normal3DTemplateIfEC2Efff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR16Normal3DTemplateIfEC2Efff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR16Normal3DTemplateIfEC2Efff_param_3];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE
.weak .func _ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE(
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_0,
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_1
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_1];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR15Point3DTemplateIfEC2Ev
.weak .func _ZN3VLR15Point3DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR15Point3DTemplateIfEC2Ef
.weak .func _ZN3VLR15Point3DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR15Point3DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR15Point3DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR15Point3DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	ret;
}

	// .weak	_ZN3VLR15Point3DTemplateIfEC2Efff
.weak .func _ZN3VLR15Point3DTemplateIfEC2Efff(
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2Efff_param_0,
	.param .b32 _ZN3VLR15Point3DTemplateIfEC2Efff_param_1,
	.param .b32 _ZN3VLR15Point3DTemplateIfEC2Efff_param_2,
	.param .b32 _ZN3VLR15Point3DTemplateIfEC2Efff_param_3
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR15Point3DTemplateIfEC2Efff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR15Point3DTemplateIfEC2Efff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR15Point3DTemplateIfEC2Efff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR15Point3DTemplateIfEC2Efff_param_3];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE
.weak .func _ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE(
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_0,
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_1
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_1];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR18TexCoord2DTemplateIfEC2Ev
.weak .func _ZN3VLR18TexCoord2DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR18TexCoord2DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR18TexCoord2DTemplateIfEC2Ef
.weak .func _ZN3VLR18TexCoord2DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR18TexCoord2DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR18TexCoord2DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR18TexCoord2DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR18TexCoord2DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	ret;
}

	// .weak	_ZN3VLR18TexCoord2DTemplateIfEC2Eff
.weak .func _ZN3VLR18TexCoord2DTemplateIfEC2Eff(
	.param .b64 _ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_0,
	.param .b32 _ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_1,
	.param .b32 _ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_2
)
{
	.reg .f32 	%f<3>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_2];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	ret;
}

	// .weak	_ZN3VLR21BoundingBox3DTemplateIfEC2Ev
.weak .func _ZN3VLR21BoundingBox3DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE
.weak .func _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE(
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE_param_0,
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE_param_1
)
{
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE_param_1];
	ld.f32 	%f1, [%rd2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1], %f1;
	ld.f32 	%f4, [%rd2];
	ld.f32 	%f5, [%rd2+4];
	ld.f32 	%f6, [%rd2+8];
	st.f32 	[%rd1+20], %f6;
	st.f32 	[%rd1+16], %f5;
	st.f32 	[%rd1+12], %f4;
	ret;
}

	// .weak	_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5_
.weak .func _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5_(
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_0,
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_1,
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_2
)
{
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_0];
	ld.param.u64 	%rd2, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_1];
	ld.param.u64 	%rd3, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_2];
	ld.f32 	%f1, [%rd2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1], %f1;
	ld.f32 	%f4, [%rd3];
	ld.f32 	%f5, [%rd3+4];
	ld.f32 	%f6, [%rd3+8];
	st.f32 	[%rd1+20], %f6;
	st.f32 	[%rd1+16], %f5;
	st.f32 	[%rd1+12], %f4;
	ret;
}

	// .weak	_ZN3VLR17Matrix3x3TemplateIfEC2Ev
.weak .func _ZN3VLR17Matrix3x3TemplateIfEC2Ev(
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR17Matrix3x3TemplateIfEC2EPf
.weak .func _ZN3VLR17Matrix3x3TemplateIfEC2EPf(
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2EPf_param_0,
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2EPf_param_1
)
{
	.reg .f32 	%f<10>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix3x3TemplateIfEC2EPf_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix3x3TemplateIfEC2EPf_param_1];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	ld.f32 	%f4, [%rd2+12];
	st.f32 	[%rd1+12], %f4;
	ld.f32 	%f5, [%rd2+16];
	st.f32 	[%rd1+16], %f5;
	ld.f32 	%f6, [%rd2+20];
	st.f32 	[%rd1+20], %f6;
	ld.f32 	%f7, [%rd2+24];
	st.f32 	[%rd1+24], %f7;
	ld.f32 	%f8, [%rd2+28];
	st.f32 	[%rd1+28], %f8;
	ld.f32 	%f9, [%rd2+32];
	st.f32 	[%rd1+32], %f9;
	ret;
}

	// .weak	_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5_
.weak .func _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5_(
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_0,
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_1,
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_2,
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_3
)
{
	.reg .f32 	%f<10>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_1];
	ld.param.u64 	%rd3, [_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_2];
	ld.param.u64 	%rd4, [_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_3];
	ld.f32 	%f1, [%rd2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1], %f1;
	ld.f32 	%f4, [%rd3];
	ld.f32 	%f5, [%rd3+4];
	ld.f32 	%f6, [%rd3+8];
	st.f32 	[%rd1+20], %f6;
	st.f32 	[%rd1+16], %f5;
	st.f32 	[%rd1+12], %f4;
	ld.f32 	%f7, [%rd4];
	ld.f32 	%f8, [%rd4+4];
	ld.f32 	%f9, [%rd4+8];
	st.f32 	[%rd1+32], %f9;
	st.f32 	[%rd1+28], %f8;
	st.f32 	[%rd1+24], %f7;
	ret;
}

	// .weak	_ZN3VLR17Matrix4x4TemplateIfEC2Ev
.weak .func _ZN3VLR17Matrix4x4TemplateIfEC2Ev(
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR17Matrix4x4TemplateIfEC2EPf
.weak .func _ZN3VLR17Matrix4x4TemplateIfEC2EPf(
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2EPf_param_0,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2EPf_param_1
)
{
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix4x4TemplateIfEC2EPf_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix4x4TemplateIfEC2EPf_param_1];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	ld.f32 	%f4, [%rd2+12];
	st.f32 	[%rd1+12], %f4;
	ld.f32 	%f5, [%rd2+16];
	st.f32 	[%rd1+16], %f5;
	ld.f32 	%f6, [%rd2+20];
	st.f32 	[%rd1+20], %f6;
	ld.f32 	%f7, [%rd2+24];
	st.f32 	[%rd1+24], %f7;
	ld.f32 	%f8, [%rd2+28];
	st.f32 	[%rd1+28], %f8;
	ld.f32 	%f9, [%rd2+32];
	st.f32 	[%rd1+32], %f9;
	ld.f32 	%f10, [%rd2+36];
	st.f32 	[%rd1+36], %f10;
	ld.f32 	%f11, [%rd2+40];
	st.f32 	[%rd1+40], %f11;
	ld.f32 	%f12, [%rd2+44];
	st.f32 	[%rd1+44], %f12;
	ld.f32 	%f13, [%rd2+48];
	st.f32 	[%rd1+48], %f13;
	ld.f32 	%f14, [%rd2+52];
	st.f32 	[%rd1+52], %f14;
	ld.f32 	%f15, [%rd2+56];
	st.f32 	[%rd1+56], %f15;
	ld.f32 	%f16, [%rd2+60];
	st.f32 	[%rd1+60], %f16;
	ret;
}

	// .weak	_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5_
.weak .func _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5_(
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_0,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_1,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_2,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_3
)
{
	.reg .f32 	%f<10>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_1];
	ld.param.u64 	%rd3, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_2];
	ld.param.u64 	%rd4, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_3];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	mov.u32 	%r1, 0;
	st.u32 	[%rd1+12], %r1;
	ld.f32 	%f4, [%rd3];
	st.f32 	[%rd1+16], %f4;
	ld.f32 	%f5, [%rd3+4];
	st.f32 	[%rd1+20], %f5;
	ld.f32 	%f6, [%rd3+8];
	st.f32 	[%rd1+24], %f6;
	st.u32 	[%rd1+28], %r1;
	ld.f32 	%f7, [%rd4];
	st.f32 	[%rd1+32], %f7;
	ld.f32 	%f8, [%rd4+4];
	st.f32 	[%rd1+36], %f8;
	ld.f32 	%f9, [%rd4+8];
	st.f32 	[%rd1+40], %f9;
	st.u32 	[%rd1+44], %r1;
	st.u32 	[%rd1+48], %r1;
	st.u32 	[%rd1+52], %r1;
	st.u32 	[%rd1+56], %r1;
	mov.u32 	%r2, 1065353216;
	st.u32 	[%rd1+60], %r2;
	ret;
}

	// .weak	_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5_
.weak .func _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5_(
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_0,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_1,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_2,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_3,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_4
)
{
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_1];
	ld.param.u64 	%rd3, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_2];
	ld.param.u64 	%rd4, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_3];
	ld.param.u64 	%rd5, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_4];
	ld.f32 	%f1, [%rd2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	ld.f32 	%f4, [%rd2+12];
	st.f32 	[%rd1+12], %f4;
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1], %f1;
	ld.f32 	%f5, [%rd3];
	ld.f32 	%f6, [%rd3+4];
	ld.f32 	%f7, [%rd3+8];
	ld.f32 	%f8, [%rd3+12];
	st.f32 	[%rd1+28], %f8;
	st.f32 	[%rd1+24], %f7;
	st.f32 	[%rd1+20], %f6;
	st.f32 	[%rd1+16], %f5;
	ld.f32 	%f9, [%rd4];
	ld.f32 	%f10, [%rd4+4];
	ld.f32 	%f11, [%rd4+8];
	ld.f32 	%f12, [%rd4+12];
	st.f32 	[%rd1+44], %f12;
	st.f32 	[%rd1+40], %f11;
	st.f32 	[%rd1+36], %f10;
	st.f32 	[%rd1+32], %f9;
	ld.f32 	%f13, [%rd5];
	ld.f32 	%f14, [%rd5+4];
	ld.f32 	%f15, [%rd5+8];
	ld.f32 	%f16, [%rd5+12];
	st.f32 	[%rd1+60], %f16;
	st.f32 	[%rd1+56], %f15;
	st.f32 	[%rd1+52], %f14;
	st.f32 	[%rd1+48], %f13;
	ret;
}

	// .weak	_ZN3VLR18QuaternionTemplateIfEC2Ev
.weak .func _ZN3VLR18QuaternionTemplateIfEC2Ev(
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR18QuaternionTemplateIfEC2Effff
.weak .func _ZN3VLR18QuaternionTemplateIfEC2Effff(
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_0,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_1,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_2,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_3,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_4
)
{
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_3];
	ld.param.f32 	%f4, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_4];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+12], %f4;
	ret;
}

	// .weak	_ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf
.weak .func _ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf(
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_0,
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_1,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_2
)
{
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_1];
	ld.param.f32 	%f1, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	ld.f32 	%f4, [%rd2];
	st.f32 	[%rd1], %f4;
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+12], %f1;
	ret;
}

	// .weak	_ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE
.weak .func _ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE(
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE_param_0,
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE_param_1
)
{
	.local .align 4 .b8 	__local_depot37[184];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .f32 	%f<77>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<73>;


	mov.u64 	%SPL, __local_depot37;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE_param_0];
	ld.param.u64 	%rd4, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE_param_1];
	ld.f32 	%f1, [%rd4+20];
	ld.f32 	%f2, [%rd4];
	add.f32 	%f16, %f2, %f1;
	ld.f32 	%f3, [%rd4+40];
	add.f32 	%f4, %f16, %f3;
	setp.gt.f32	%p1, %f4, 0f00000000;
	@%p1 bra 	BB37_4;
	bra.uni 	BB37_1;

BB37_4:
	add.f32 	%f59, %f4, 0f3F800000;
	sqrt.rn.f32 	%f60, %f59;
	mov.f32 	%f61, 0f3F000000;
	div.rn.f32 	%f62, %f61, %f60;
	ld.f32 	%f63, [%rd4+36];
	ld.f32 	%f64, [%rd4+24];
	sub.f32 	%f65, %f64, %f63;
	ld.f32 	%f66, [%rd4+8];
	ld.f32 	%f67, [%rd4+32];
	sub.f32 	%f68, %f67, %f66;
	ld.f32 	%f69, [%rd4+16];
	ld.f32 	%f70, [%rd4+4];
	sub.f32 	%f71, %f70, %f69;
	mul.f32 	%f72, %f62, %f65;
	mul.f32 	%f73, %f62, %f68;
	mul.f32 	%f74, %f62, %f71;
	st.f32 	[%rd3], %f72;
	st.f32 	[%rd3+4], %f73;
	st.f32 	[%rd3+8], %f74;
	mul.f32 	%f75, %f60, 0f3F000000;
	st.f32 	[%rd3+12], %f75;
	bra.uni 	BB37_5;

BB37_1:
	add.u64 	%rd5, %SP, 160;
	cvta.to.local.u64 	%rd6, %rd5;
	mov.u32 	%r3, 0;
	st.local.u32 	[%rd6+8], %r3;
	mov.u32 	%r4, 2;
	st.local.u32 	[%rd6+4], %r4;
	mov.u32 	%r5, 1;
	st.local.u32 	[%rd6], %r5;
	setp.gt.f32	%p2, %f1, %f2;
	selp.u64	%rd7, 1, 0, %p2;
	selp.u32	%r6, 1, 0, %p2;
	mul.wide.u32 	%rd8, %r6, 16;
	add.s64 	%rd9, %rd4, %rd8;
	ld.f32 	%f17, [%rd9];
	ld.f32 	%f18, [%rd9+4];
	ld.f32 	%f19, [%rd9+8];
	ld.f32 	%f20, [%rd9+12];
	add.u64 	%rd10, %SP, 0;
	cvta.to.local.u64 	%rd11, %rd10;
	st.local.f32 	[%rd11+12], %f20;
	st.local.f32 	[%rd11+8], %f19;
	st.local.f32 	[%rd11+4], %f18;
	st.local.f32 	[%rd11], %f17;
	mul.wide.u32 	%rd12, %r6, 4;
	add.s64 	%rd13, %rd11, %rd12;
	ld.local.f32 	%f21, [%rd13];
	setp.gt.f32	%p3, %f3, %f21;
	selp.b64	%rd2, 2, %rd7, %p3;
	shl.b64 	%rd14, %rd2, 2;
	add.s64 	%rd15, %rd6, %rd14;
	ld.local.u32 	%r1, [%rd15];
	mul.wide.s32 	%rd16, %r1, 4;
	add.s64 	%rd17, %rd6, %rd16;
	ld.local.u32 	%r2, [%rd17];
	shl.b64 	%rd18, %rd2, 4;
	add.s64 	%rd19, %rd4, %rd18;
	ld.f32 	%f22, [%rd19];
	ld.f32 	%f23, [%rd19+4];
	ld.f32 	%f24, [%rd19+8];
	ld.f32 	%f25, [%rd19+12];
	add.u64 	%rd20, %SP, 16;
	cvta.to.local.u64 	%rd21, %rd20;
	st.local.f32 	[%rd21+12], %f25;
	st.local.f32 	[%rd21+8], %f24;
	st.local.f32 	[%rd21+4], %f23;
	st.local.f32 	[%rd21], %f22;
	add.s64 	%rd22, %rd21, %rd14;
	ld.local.f32 	%f26, [%rd22];
	mul.wide.u32 	%rd23, %r1, 16;
	add.s64 	%rd24, %rd4, %rd23;
	ld.f32 	%f5, [%rd24];
	ld.f32 	%f6, [%rd24+4];
	ld.f32 	%f7, [%rd24+8];
	ld.f32 	%f8, [%rd24+12];
	add.u64 	%rd25, %SP, 32;
	cvta.to.local.u64 	%rd26, %rd25;
	st.local.f32 	[%rd26+12], %f8;
	st.local.f32 	[%rd26+8], %f7;
	st.local.f32 	[%rd26+4], %f6;
	st.local.f32 	[%rd26], %f5;
	mul.wide.u32 	%rd27, %r1, 4;
	add.s64 	%rd28, %rd26, %rd27;
	ld.local.f32 	%f27, [%rd28];
	mul.wide.u32 	%rd29, %r2, 16;
	add.s64 	%rd30, %rd4, %rd29;
	ld.f32 	%f9, [%rd30];
	ld.f32 	%f10, [%rd30+4];
	ld.f32 	%f11, [%rd30+8];
	ld.f32 	%f12, [%rd30+12];
	add.u64 	%rd31, %SP, 48;
	cvta.to.local.u64 	%rd32, %rd31;
	st.local.f32 	[%rd32+12], %f12;
	st.local.f32 	[%rd32+8], %f11;
	st.local.f32 	[%rd32+4], %f10;
	st.local.f32 	[%rd32], %f9;
	mul.wide.u32 	%rd33, %r2, 4;
	add.s64 	%rd34, %rd32, %rd33;
	ld.local.f32 	%f28, [%rd34];
	add.f32 	%f29, %f27, %f28;
	sub.f32 	%f30, %f26, %f29;
	add.f32 	%f31, %f30, 0f3F800000;
	sqrt.rn.f32 	%f76, %f31;
	mul.f32 	%f32, %f76, 0f00000000;
	add.u64 	%rd35, %SP, 172;
	cvta.to.local.u64 	%rd36, %rd35;
	add.s64 	%rd37, %rd36, %rd14;
	st.local.f32 	[%rd37], %f32;
	setp.eq.f32	%p4, %f76, 0f00000000;
	@%p4 bra 	BB37_3;

	mov.f32 	%f33, 0f3F000000;
	div.rn.f32 	%f76, %f33, %f76;

BB37_3:
	add.u64 	%rd38, %SP, 64;
	cvta.to.local.u64 	%rd39, %rd38;
	st.local.f32 	[%rd39+4], %f6;
	st.local.f32 	[%rd39], %f5;
	st.local.f32 	[%rd39+8], %f7;
	st.local.f32 	[%rd39+12], %f8;
	add.s64 	%rd41, %rd39, %rd33;
	ld.local.f32 	%f34, [%rd41];
	add.u64 	%rd42, %SP, 80;
	cvta.to.local.u64 	%rd43, %rd42;
	st.local.f32 	[%rd43+12], %f12;
	st.local.f32 	[%rd43+8], %f11;
	st.local.f32 	[%rd43+4], %f10;
	st.local.f32 	[%rd43], %f9;
	add.s64 	%rd45, %rd43, %rd27;
	ld.local.f32 	%f35, [%rd45];
	sub.f32 	%f36, %f34, %f35;
	mul.f32 	%f37, %f76, %f36;
	st.f32 	[%rd3+12], %f37;
	ld.f32 	%f38, [%rd19];
	ld.f32 	%f39, [%rd19+4];
	ld.f32 	%f40, [%rd19+8];
	ld.f32 	%f41, [%rd19+12];
	add.u64 	%rd48, %SP, 96;
	cvta.to.local.u64 	%rd49, %rd48;
	st.local.f32 	[%rd49+12], %f41;
	st.local.f32 	[%rd49+8], %f40;
	st.local.f32 	[%rd49+4], %f39;
	st.local.f32 	[%rd49], %f38;
	add.s64 	%rd50, %rd49, %rd27;
	ld.local.f32 	%f42, [%rd50];
	ld.f32 	%f43, [%rd24];
	ld.f32 	%f44, [%rd24+4];
	ld.f32 	%f45, [%rd24+8];
	ld.f32 	%f46, [%rd24+12];
	add.u64 	%rd53, %SP, 112;
	cvta.to.local.u64 	%rd54, %rd53;
	st.local.f32 	[%rd54+12], %f46;
	st.local.f32 	[%rd54+8], %f45;
	st.local.f32 	[%rd54+4], %f44;
	st.local.f32 	[%rd54], %f43;
	add.s64 	%rd56, %rd54, %rd14;
	ld.local.f32 	%f47, [%rd56];
	add.f32 	%f48, %f42, %f47;
	mul.f32 	%f49, %f76, %f48;
	add.s64 	%rd60, %rd36, %rd16;
	st.local.f32 	[%rd60], %f49;
	add.u64 	%rd61, %SP, 128;
	cvta.to.local.u64 	%rd62, %rd61;
	st.local.f32 	[%rd62+12], %f41;
	st.local.f32 	[%rd62+8], %f40;
	st.local.f32 	[%rd62+4], %f39;
	st.local.f32 	[%rd62], %f38;
	add.s64 	%rd63, %rd62, %rd33;
	ld.local.f32 	%f50, [%rd63];
	ld.f32 	%f51, [%rd30];
	ld.f32 	%f52, [%rd30+4];
	ld.f32 	%f53, [%rd30+8];
	ld.f32 	%f54, [%rd30+12];
	add.u64 	%rd66, %SP, 144;
	cvta.to.local.u64 	%rd67, %rd66;
	st.local.f32 	[%rd67+12], %f54;
	st.local.f32 	[%rd67+8], %f53;
	st.local.f32 	[%rd67+4], %f52;
	st.local.f32 	[%rd67], %f51;
	add.s64 	%rd68, %rd67, %rd14;
	ld.local.f32 	%f55, [%rd68];
	add.f32 	%f56, %f50, %f55;
	mul.f32 	%f57, %f76, %f56;
	mul.wide.s32 	%rd69, %r2, 4;
	add.s64 	%rd70, %rd36, %rd69;
	st.local.f32 	[%rd70], %f57;
	ld.local.u32 	%rd71, [%rd36];
	ld.local.f32 	%f58, [%rd36+8];
	ld.local.u32 	%rd72, [%rd36+4];
	st.u32 	[%rd3+4], %rd72;
	st.u32 	[%rd3], %rd71;
	st.f32 	[%rd3+8], %f58;

BB37_5:
	ret;
}

	// .weak	_ZN3VLR11RGBTemplateIfEC2Ev
.weak .func _ZN3VLR11RGBTemplateIfEC2Ev(
	.param .b64 _ZN3VLR11RGBTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR11RGBTemplateIfEC2Ef
.weak .func _ZN3VLR11RGBTemplateIfEC2Ef(
	.param .b64 _ZN3VLR11RGBTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR11RGBTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR11RGBTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR11RGBTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	ret;
}

	// .weak	_ZN3VLR11RGBTemplateIfEC2Efff
.weak .func _ZN3VLR11RGBTemplateIfEC2Efff(
	.param .b64 _ZN3VLR11RGBTemplateIfEC2Efff_param_0,
	.param .b32 _ZN3VLR11RGBTemplateIfEC2Efff_param_1,
	.param .b32 _ZN3VLR11RGBTemplateIfEC2Efff_param_2,
	.param .b32 _ZN3VLR11RGBTemplateIfEC2Efff_param_3
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR11RGBTemplateIfEC2Efff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR11RGBTemplateIfEC2Efff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR11RGBTemplateIfEC2Efff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR11RGBTemplateIfEC2Efff_param_3];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .globl	_ZN3VLR35Null_NormalAlphaModifier_fetchAlphaERKNS_18TexCoord2DTemplateIfEE
.visible .func  (.param .b32 func_retval0) _ZN3VLR35Null_NormalAlphaModifier_fetchAlphaERKNS_18TexCoord2DTemplateIfEE(
	.param .b64 _ZN3VLR35Null_NormalAlphaModifier_fetchAlphaERKNS_18TexCoord2DTemplateIfEE_param_0
)
{
	.reg .f32 	%f<2>;


	mov.f32 	%f1, 0f3F800000;
	st.param.f32	[func_retval0+0], %f1;
	ret;
}

	// .globl	_ZN3VLR36Null_NormalAlphaModifier_fetchNormalERKNS_18TexCoord2DTemplateIfEE
.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN3VLR36Null_NormalAlphaModifier_fetchNormalERKNS_18TexCoord2DTemplateIfEE(
	.param .b64 _ZN3VLR36Null_NormalAlphaModifier_fetchNormalERKNS_18TexCoord2DTemplateIfEE_param_0
)
{
	.reg .f32 	%f<3>;


	mov.f32 	%f1, 0f00000000;
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f1;
	mov.f32 	%f2, 0f3F800000;
	st.param.f32	[func_retval0+8], %f2;
	ret;
}

	// .globl	_ZN3VLR30NormalAlphaModifier_fetchAlphaERKNS_18TexCoord2DTemplateIfEE
.visible .func  (.param .b32 func_retval0) _ZN3VLR30NormalAlphaModifier_fetchAlphaERKNS_18TexCoord2DTemplateIfEE(
	.param .b64 _ZN3VLR30NormalAlphaModifier_fetchAlphaERKNS_18TexCoord2DTemplateIfEE_param_0
)
{
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR30NormalAlphaModifier_fetchAlphaERKNS_18TexCoord2DTemplateIfEE_param_0];
	ld.f32 	%f1, [%rd1];
	ld.f32 	%f2, [%rd1+4];
	tex.2d.v4.u32.f32	{%r1, %r2, %r3, %r4}, [_ZN3VLR17pv_texNormalAlphaE, {%f1, %f2}];
	mov.b32 	 %f3, %r4;
	st.param.f32	[func_retval0+0], %f3;
	ret;
}

	// .globl	_ZN3VLR31NormalAlphaModifier_fetchNormalERKNS_18TexCoord2DTemplateIfEE
.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN3VLR31NormalAlphaModifier_fetchNormalERKNS_18TexCoord2DTemplateIfEE(
	.param .b64 _ZN3VLR31NormalAlphaModifier_fetchNormalERKNS_18TexCoord2DTemplateIfEE_param_0
)
{
	.reg .f32 	%f<9>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR31NormalAlphaModifier_fetchNormalERKNS_18TexCoord2DTemplateIfEE_param_0];
	ld.f32 	%f1, [%rd1];
	ld.f32 	%f2, [%rd1+4];
	tex.2d.v4.u32.f32	{%r1, %r2, %r3, %r4}, [_ZN3VLR17pv_texNormalAlphaE, {%f1, %f2}];
	mov.b32 	 %f3, %r1;
	mov.b32 	 %f4, %r2;
	mov.b32 	 %f5, %r3;
	fma.rn.f32 	%f6, %f3, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f7, %f4, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f8, %f5, 0f40000000, 0fBF800000;
	st.param.f32	[func_retval0+0], %f6;
	st.param.f32	[func_retval0+4], %f7;
	st.param.f32	[func_retval0+8], %f8;
	ret;
}


