//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23920284
// Cuda compilation tools, release 9.2, V9.2.88
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	_ZN3VLR21stochasticAlphaAnyHitEv
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.visible .global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo11pv_topGroupE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo14sm_launchIndexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo6sm_rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo10sm_payloadE[8] = {82, 97, 121, 0, 64, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo19sm_shadowRayPayloadE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo15a_hitPointParamE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo25pv_progSampleLensPositionE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo16pv_progSampleIDFE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo21pv_materialDescriptorE[8] = {82, 97, 121, 0, 160, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo21pv_progDecodeTexCoordE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo21pv_progDecodeHitPointE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo17pv_progFetchAlphaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN3VLR21rti_internal_typeinfo18pv_progFetchNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename11pv_topGroupE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename14sm_launchIndexE[13] = {111, 112, 116, 105, 120, 58, 58, 117, 105, 110, 116, 50, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename6sm_rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.visible .global .align 8 .b8 _ZN3VLR21rti_internal_typename10sm_payloadE[8] = {80, 97, 121, 108, 111, 97, 100, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename19sm_shadowRayPayloadE[17] = {83, 104, 97, 100, 111, 119, 82, 97, 121, 80, 97, 121, 108, 111, 97, 100, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename15a_hitPointParamE[18] = {72, 105, 116, 80, 111, 105, 110, 116, 80, 97, 114, 97, 109, 101, 116, 101, 114, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename25pv_progSampleLensPositionE[26] = {112, 114, 111, 103, 83, 105, 103, 83, 97, 109, 112, 108, 101, 76, 101, 110, 115, 80, 111, 115, 105, 116, 105, 111, 110, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename16pv_progSampleIDFE[17] = {112, 114, 111, 103, 83, 105, 103, 83, 97, 109, 112, 108, 101, 73, 68, 70, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename21pv_materialDescriptorE[19] = {77, 97, 116, 101, 114, 105, 97, 108, 68, 101, 115, 99, 114, 105, 112, 116, 111, 114, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename21pv_progDecodeTexCoordE[22] = {112, 114, 111, 103, 83, 105, 103, 68, 101, 99, 111, 100, 101, 84, 101, 120, 67, 111, 111, 114, 100, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename21pv_progDecodeHitPointE[22] = {112, 114, 111, 103, 83, 105, 103, 68, 101, 99, 111, 100, 101, 72, 105, 116, 80, 111, 105, 110, 116, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename17pv_progFetchAlphaE[18] = {112, 114, 111, 103, 83, 105, 103, 70, 101, 116, 99, 104, 65, 108, 112, 104, 97, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_typename18pv_progFetchNormalE[19] = {112, 114, 111, 103, 83, 105, 103, 70, 101, 116, 99, 104, 78, 111, 114, 109, 97, 108, 0};
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum11pv_topGroupE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum14sm_launchIndexE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum6sm_rayE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum10sm_payloadE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum19sm_shadowRayPayloadE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum15a_hitPointParamE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum25pv_progSampleLensPositionE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum16pv_progSampleIDFE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum21pv_materialDescriptorE = 4919;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum21pv_progDecodeTexCoordE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum21pv_progDecodeHitPointE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum17pv_progFetchAlphaE = 4921;
.visible .global .align 4 .u32 _ZN3VLR21rti_internal_typeenum18pv_progFetchNormalE = 4921;
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic11pv_topGroupE[1];
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_semantic14sm_launchIndexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_semantic6sm_rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_semantic10sm_payloadE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_semantic19sm_shadowRayPayloadE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.visible .global .align 16 .b8 _ZN3VLR21rti_internal_semantic15a_hitPointParamE[24] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 104, 105, 116, 80, 111, 105, 110, 116, 80, 97, 114, 97, 109, 0};
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic25pv_progSampleLensPositionE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic16pv_progSampleIDFE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic21pv_materialDescriptorE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic21pv_progDecodeTexCoordE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic21pv_progDecodeHitPointE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic17pv_progFetchAlphaE[1];
.visible .global .align 1 .b8 _ZN3VLR21rti_internal_semantic18pv_progFetchNormalE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation11pv_topGroupE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation14sm_launchIndexE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation6sm_rayE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation10sm_payloadE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation19sm_shadowRayPayloadE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation15a_hitPointParamE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation25pv_progSampleLensPositionE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation16pv_progSampleIDFE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation21pv_materialDescriptorE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation21pv_progDecodeTexCoordE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation21pv_progDecodeHitPointE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation17pv_progFetchAlphaE[1];
.visible .global .align 1 .b8 _ZN3VLR23rti_internal_annotation18pv_progFetchNormalE[1];
.visible .global .align 4 .b8 _ZN3VLR11pv_topGroupE[4];
.visible .global .align 1 .b8 _ZN3VLR12pv_rngBufferE[1];
.visible .global .align 1 .b8 _ZN3VLR15pv_outputBufferE[1];
.visible .global .texref _ZN3VLR17pv_texNormalAlphaE;
.visible .global .align 8 .b8 _ZN3VLR14sm_launchIndexE[8];
.visible .global .align 4 .b8 _ZN3VLR6sm_rayE[36];
.visible .global .align 4 .b8 _ZN3VLR10sm_payloadE[64];
.visible .global .align 4 .b8 _ZN3VLR19sm_shadowRayPayloadE[4];
.visible .global .align 4 .b8 _ZN3VLR15a_hitPointParamE[12];
.visible .global .align 4 .b8 _ZN3VLR25pv_progSampleLensPositionE[4];
.visible .global .align 4 .b8 _ZN3VLR16pv_progSampleIDFE[4];
.visible .global .align 16 .b8 _ZN3VLR21pv_materialDescriptorE[160];
.visible .global .align 4 .b8 _ZN3VLR21pv_progDecodeTexCoordE[4];
.visible .global .align 4 .b8 _ZN3VLR21pv_progDecodeHitPointE[4];
.visible .global .align 4 .b8 _ZN3VLR17pv_progFetchAlphaE[4];
.visible .global .align 4 .b8 _ZN3VLR18pv_progFetchNormalE[4];
.global .align 16 .b8 $str[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str1[218] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 58, 32, 48, 120, 37, 108, 108, 88, 10, 32, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 105, 116, 121, 32, 58, 32, 37, 100, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 120, 37, 108, 108, 100, 120, 37, 108, 108, 100, 10, 32, 32, 101, 108, 101, 109, 101, 110, 116, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 10, 0};
.global .align 16 .b8 $str2[40] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 16 .b8 $str3[46] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str4[56] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 16 .b8 $str5[39] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 112, 114, 111, 103, 114, 97, 109, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str6[40] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 16 .b8 $str7[33] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 48, 41, 10, 0};
.global .align 16 .b8 $str8[56] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 16 .b8 $str9[34] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 45, 49, 41, 10, 0};
.global .align 16 .b8 $str10[39] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 16 .b8 $str11[44] = {9, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str12[55] = {9, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 16 .b8 $str13[37] = {9, 66, 117, 102, 102, 101, 114, 32, 73, 68, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 98, 117, 102, 102, 101, 114, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str14[145] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 58, 32, 48, 120, 37, 108, 108, 88, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 16 .b8 $str15[179] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 86, 65, 76, 73, 68, 95, 82, 65, 89, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 32, 32, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 121, 112, 101, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 116, 109, 105, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 109, 97, 120, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 0};
.global .align 16 .b8 $str16[84] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 78, 65, 76, 95, 69, 82, 82, 79, 82, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 101, 114, 114, 111, 114, 32, 105, 100, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str17[57] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 43, 37, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str18[54] = {67, 97, 117, 103, 104, 116, 32, 117, 110, 107, 110, 111, 119, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.weak .global .align 4 .b8 _ZN3VLR17Matrix4x4TemplateIfEC1ERKNS_16Vector3DTemplateIfEES5_S5_$319[16] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 63};

.visible .entry _ZN3VLR21stochasticAlphaAnyHitEv(

)
{
	.local .align 4 .b8 	__local_depot0[20];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<21>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd9, %SP, 8;
	cvta.to.local.u64 	%rd10, %rd9;
	add.u64 	%rd11, %SP, 0;
	cvta.to.local.u64 	%rd12, %rd11;
	ld.global.f32 	%f1, [_ZN3VLR15a_hitPointParamE];
	ld.global.f32 	%f2, [_ZN3VLR15a_hitPointParamE+4];
	ld.global.u32 	%r5, [_ZN3VLR15a_hitPointParamE+8];
	st.local.u32 	[%rd10+8], %r5;
	st.local.f32 	[%rd10+4], %f2;
	st.local.f32 	[%rd10], %f1;
	ld.global.u32 	%r1, [_ZN3VLR21pv_progDecodeTexCoordE];
	// inline asm
	call (%rd1), _rt_callable_program_from_id_64, (%r1);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .align 4 .b8 retval0[8];
	prototype_0 : .callprototype (.param .align 4 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd1, 
	(
	param0
	)
	, prototype_0;
	ld.param.f32	%f3, [retval0+0];
	ld.param.f32	%f4, [retval0+4];
	
	//{
	}// Callseq End 0
	st.local.f32 	[%rd12+4], %f4;
	st.local.f32 	[%rd12], %f3;
	ld.global.u32 	%r2, [_ZN3VLR17pv_progFetchAlphaE];
	// inline asm
	call (%rd2), _rt_callable_program_from_id_64, (%r2);
	// inline asm
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b32 retval0;
	prototype_1 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd2, 
	(
	param0
	)
	, prototype_1;
	ld.param.f32	%f5, [retval0+0];
	
	//{
	}// Callseq End 1
	ld.global.v2.u32 	{%r6, %r7}, [_ZN3VLR14sm_launchIndexE];
	cvt.u64.u32	%rd5, %r6;
	cvt.u64.u32	%rd6, %r7;
	mov.u64 	%rd13, _ZN3VLR12pv_rngBufferE;
	cvta.global.u64 	%rd4, %rd13;
	mov.u32 	%r3, 2;
	mov.u32 	%r4, 8;
	mov.u64 	%rd8, 0;
	// inline asm
	call (%rd3), _rt_buffer_get_64, (%rd4, %r3, %r4, %rd5, %rd6, %rd8, %rd8);
	// inline asm
	ld.u64 	%rd14, [%rd3];
	mul.lo.s64 	%rd15, %rd14, 6364136223846793005;
	add.s64 	%rd16, %rd15, 1;
	st.u64 	[%rd3], %rd16;
	shr.u64 	%rd17, %rd14, 18;
	xor.b64  	%rd18, %rd17, %rd14;
	shr.u64 	%rd19, %rd18, 27;
	cvt.u32.u64	%r10, %rd19;
	shr.u64 	%rd20, %rd14, 59;
	cvt.u32.u64	%r11, %rd20;
	shr.u32 	%r12, %r10, %r11;
	neg.s32 	%r13, %r11;
	and.b32  	%r14, %r13, 31;
	shl.b32 	%r15, %r10, %r14;
	or.b32  	%r16, %r12, %r15;
	shr.u32 	%r17, %r16, 9;
	or.b32  	%r18, %r17, 1065353216;
	mov.b32 	 %f6, %r18;
	add.f32 	%f7, %f6, 0fBF800000;
	setp.ltu.f32	%p1, %f7, %f5;
	@%p1 bra 	BB0_2;

	// inline asm
	call _rt_ignore_intersection, ();
	// inline asm

BB0_2:
	ret;
}

	// .globl	_ZN3VLR11alphaAnyHitEv
.visible .entry _ZN3VLR11alphaAnyHitEv(

)
{
	.local .align 4 .b8 	__local_depot1[20];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<7>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd3, %SP, 8;
	cvta.to.local.u64 	%rd4, %rd3;
	add.u64 	%rd5, %SP, 0;
	cvta.to.local.u64 	%rd6, %rd5;
	ld.global.f32 	%f1, [_ZN3VLR15a_hitPointParamE];
	ld.global.f32 	%f2, [_ZN3VLR15a_hitPointParamE+4];
	ld.global.u32 	%r3, [_ZN3VLR15a_hitPointParamE+8];
	st.local.u32 	[%rd4+8], %r3;
	st.local.f32 	[%rd4+4], %f2;
	st.local.f32 	[%rd4], %f1;
	ld.global.u32 	%r1, [_ZN3VLR21pv_progDecodeTexCoordE];
	// inline asm
	call (%rd1), _rt_callable_program_from_id_64, (%r1);
	// inline asm
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .align 4 .b8 retval0[8];
	prototype_2 : .callprototype (.param .align 4 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd1, 
	(
	param0
	)
	, prototype_2;
	ld.param.f32	%f3, [retval0+0];
	ld.param.f32	%f4, [retval0+4];
	
	//{
	}// Callseq End 2
	st.local.f32 	[%rd6+4], %f4;
	st.local.f32 	[%rd6], %f3;
	ld.global.u32 	%r2, [_ZN3VLR17pv_progFetchAlphaE];
	// inline asm
	call (%rd2), _rt_callable_program_from_id_64, (%r2);
	// inline asm
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b32 retval0;
	prototype_3 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd2, 
	(
	param0
	)
	, prototype_3;
	ld.param.f32	%f5, [retval0+0];
	
	//{
	}// Callseq End 3
	ld.global.f32 	%f6, [_ZN3VLR19sm_shadowRayPayloadE];
	mul.f32 	%f7, %f5, %f6;
	st.global.f32 	[_ZN3VLR19sm_shadowRayPayloadE], %f7;
	setp.neu.f32	%p1, %f7, 0f00000000;
	@%p1 bra 	BB1_2;

	// inline asm
	call _rt_terminate_ray, ();
	// inline asm

BB1_2:
	ret;
}

	// .globl	_ZN3VLR20pathTracingIterationEv
.visible .entry _ZN3VLR20pathTracingIterationEv(

)
{
	.local .align 16 .b8 	__local_depot2[416];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<27>;
	.reg .b64 	%rd<30>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd11, %SP, 80;
	cvta.to.local.u64 	%rd12, %rd11;
	add.u64 	%rd13, %SP, 96;
	cvta.to.local.u64 	%rd3, %rd13;
	add.u64 	%rd14, %SP, 256;
	cvta.to.local.u64 	%rd2, %rd14;
	ld.global.v2.u32 	{%r7, %r8}, [_ZN3VLR14sm_launchIndexE];
	cvt.u64.u32	%rd6, %r7;
	cvt.u64.u32	%rd7, %r8;
	mov.u64 	%rd15, _ZN3VLR12pv_rngBufferE;
	cvta.global.u64 	%rd5, %rd15;
	mov.u32 	%r3, 2;
	mov.u32 	%r4, 8;
	mov.u64 	%rd9, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r3, %r4, %rd6, %rd7, %rd9, %rd9);
	// inline asm
	ld.global.f32 	%f1, [_ZN3VLR15a_hitPointParamE];
	ld.global.f32 	%f2, [_ZN3VLR15a_hitPointParamE+4];
	ld.global.u32 	%r11, [_ZN3VLR15a_hitPointParamE+8];
	st.local.u32 	[%rd12+8], %r11;
	st.local.f32 	[%rd12+4], %f2;
	st.local.f32 	[%rd12], %f1;
	ld.global.u32 	%r5, [_ZN3VLR21pv_progDecodeHitPointE];
	// inline asm
	call (%rd10), _rt_callable_program_from_id_64, (%r5);
	// inline asm
	add.u64 	%rd16, %SP, 0;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	prototype_4 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd10, 
	(
	param0, 
	param1
	)
	, prototype_4;
	
	//{
	}// Callseq End 4
	mov.u32 	%r26, 0;
	mov.pred 	%p1, 0;
	@%p1 bra 	BB2_2;

BB2_1:
	mul.wide.s32 	%rd17, %r26, 16;
	mov.u64 	%rd18, _ZN3VLR21pv_materialDescriptorE;
	add.s64 	%rd19, %rd18, %rd17;
	ld.global.v2.u64 	{%rd20, %rd21}, [%rd19];
	add.s64 	%rd24, %rd3, %rd17;
	st.local.v2.u64 	[%rd24], {%rd20, %rd21};
	add.s32 	%r26, %r26, 1;
	setp.lt.u32	%p2, %r26, 10;
	@%p2 bra 	BB2_1;

BB2_2:
	ld.local.u32 	%r12, [%rd3+128];
	// inline asm
	call (%rd25), _rt_callable_program_from_id_64, (%r12);
	// inline asm
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd14;
	prototype_5 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd25, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_5;
	
	//{
	}// Callseq End 5
	ld.local.u32 	%r13, [%rd3+132];
	ld.local.v4.u32 	{%r14, %r15, %r16, %r17}, [%rd3+144];
	ld.local.v2.u32 	{%r19, %r20}, [%rd3+136];
	st.local.v4.u32 	[%rd2+128], {%r13, %r19, %r20, %r14};
	st.local.v2.u32 	[%rd2+144], {%r15, %r16};
	st.local.u32 	[%rd2+152], %r17;
	// inline asm
	call (%rd26), _rt_callable_program_from_id_64, (%r13);
	// inline asm
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .align 4 .b8 retval0[12];
	prototype_6 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _);
	call (retval0), 
	%rd26, 
	(
	param0
	)
	, prototype_6;
	ld.param.f32	%f3, [retval0+0];
	ld.param.f32	%f4, [retval0+4];
	ld.param.f32	%f5, [retval0+8];
	
	//{
	}// Callseq End 6
	st.global.f32 	[_ZN3VLR10sm_payloadE+24], %f5;
	st.global.f32 	[_ZN3VLR10sm_payloadE+20], %f4;
	st.global.f32 	[_ZN3VLR10sm_payloadE+16], %f3;
	mov.u16 	%rs1, 1;
	st.global.u8 	[_ZN3VLR10sm_payloadE+60], %rs1;
	ret;
}

	// .globl	_ZN3VLR15pathTracingMissEv
.visible .entry _ZN3VLR15pathTracingMissEv(

)
{
	.reg .b16 	%rs<2>;


	mov.u16 	%rs1, 1;
	st.global.u8 	[_ZN3VLR10sm_payloadE+60], %rs1;
	ret;
}

	// .globl	_ZN3VLR11pathTracingEv
.visible .entry _ZN3VLR11pathTracingEv(

)
{
	.local .align 4 .b8 	__local_depot4[188];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<100>;
	.reg .b32 	%r<64>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<60>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd15, %SP, 64;
	cvta.to.local.u64 	%rd16, %rd15;
	add.u64 	%rd17, %SP, 160;
	cvta.to.local.u64 	%rd18, %rd17;
	add.u64 	%rd19, %SP, 168;
	cvta.to.local.u64 	%rd20, %rd19;
	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd21;
	ld.global.v2.u32 	{%r9, %r10}, [_ZN3VLR14sm_launchIndexE];
	cvt.u64.u32	%rd4, %r9;
	cvt.u64.u32	%rd5, %r10;
	mov.u64 	%rd22, _ZN3VLR12pv_rngBufferE;
	cvta.global.u64 	%rd3, %rd22;
	mov.u32 	%r4, 2;
	mov.u32 	%r3, 8;
	mov.u64 	%rd7, 0;
	// inline asm
	call (%rd2), _rt_buffer_get_64, (%rd3, %r4, %r3, %rd4, %rd5, %rd7, %rd7);
	// inline asm
	ld.global.u32 	%r13, [_ZN3VLR14sm_launchIndexE];
	cvt.rn.f32.u32	%f21, %r13;
	ld.u64 	%rd23, [%rd2];
	mul.lo.s64 	%rd24, %rd23, 6364136223846793005;
	add.s64 	%rd25, %rd24, 1;
	st.u64 	[%rd2], %rd25;
	shr.u64 	%rd26, %rd23, 18;
	xor.b64  	%rd27, %rd26, %rd23;
	shr.u64 	%rd28, %rd27, 27;
	cvt.u32.u64	%r14, %rd28;
	shr.u64 	%rd29, %rd23, 59;
	cvt.u32.u64	%r15, %rd29;
	shr.u32 	%r16, %r14, %r15;
	neg.s32 	%r17, %r15;
	and.b32  	%r18, %r17, 31;
	shl.b32 	%r19, %r14, %r18;
	or.b32  	%r20, %r16, %r19;
	shr.u32 	%r21, %r20, 9;
	or.b32  	%r22, %r21, 1065353216;
	mov.b32 	 %f22, %r22;
	add.f32 	%f23, %f22, 0fBF800000;
	add.f32 	%f24, %f21, %f23;
	ld.global.u32 	%r23, [_ZN3VLR14sm_launchIndexE+4];
	cvt.rn.f32.u32	%f25, %r23;
	mul.lo.s64 	%rd30, %rd25, 6364136223846793005;
	add.s64 	%rd31, %rd30, 1;
	st.u64 	[%rd2], %rd31;
	shr.u64 	%rd32, %rd25, 18;
	xor.b64  	%rd33, %rd32, %rd25;
	shr.u64 	%rd34, %rd33, 27;
	cvt.u32.u64	%r24, %rd34;
	shr.u64 	%rd35, %rd25, 59;
	cvt.u32.u64	%r25, %rd35;
	shr.u32 	%r26, %r24, %r25;
	neg.s32 	%r27, %r25;
	and.b32  	%r28, %r27, 31;
	shl.b32 	%r29, %r24, %r28;
	or.b32  	%r30, %r26, %r29;
	shr.u32 	%r31, %r30, 9;
	or.b32  	%r32, %r31, 1065353216;
	mov.b32 	 %f26, %r32;
	add.f32 	%f27, %f26, 0fBF800000;
	add.f32 	%f28, %f25, %f27;
	mov.u64 	%rd36, _ZN3VLR15pv_outputBufferE;
	cvta.global.u64 	%rd12, %rd36;
	mov.u32 	%r5, 12;
	// inline asm
	call (%rd8, %rd9, %rd10, %rd11), _rt_buffer_get_size_64, (%rd12, %r4, %r5);
	// inline asm
	cvt.u32.u64	%r33, %rd8;
	cvt.u32.u64	%r34, %rd9;
	ld.u64 	%rd37, [%rd2];
	mul.lo.s64 	%rd38, %rd37, 6364136223846793005;
	add.s64 	%rd39, %rd38, 1;
	shr.u64 	%rd40, %rd37, 18;
	xor.b64  	%rd41, %rd40, %rd37;
	shr.u64 	%rd42, %rd41, 27;
	cvt.u32.u64	%r35, %rd42;
	shr.u64 	%rd43, %rd37, 59;
	cvt.u32.u64	%r36, %rd43;
	shr.u32 	%r37, %r35, %r36;
	neg.s32 	%r38, %r36;
	and.b32  	%r39, %r38, 31;
	shl.b32 	%r40, %r35, %r39;
	or.b32  	%r41, %r37, %r40;
	shr.u32 	%r42, %r41, 9;
	or.b32  	%r43, %r42, 1065353216;
	mov.b32 	 %f29, %r43;
	add.f32 	%f30, %f29, 0fBF800000;
	mul.lo.s64 	%rd44, %rd39, 6364136223846793005;
	add.s64 	%rd45, %rd44, 1;
	st.u64 	[%rd2], %rd45;
	shr.u64 	%rd46, %rd39, 18;
	xor.b64  	%rd47, %rd46, %rd39;
	shr.u64 	%rd48, %rd47, 27;
	cvt.u32.u64	%r44, %rd48;
	shr.u64 	%rd49, %rd39, 59;
	cvt.u32.u64	%r45, %rd49;
	shr.u32 	%r46, %r44, %r45;
	neg.s32 	%r47, %r45;
	and.b32  	%r48, %r47, 31;
	shl.b32 	%r49, %r44, %r48;
	or.b32  	%r50, %r46, %r49;
	shr.u32 	%r51, %r50, 9;
	or.b32  	%r52, %r51, 1065353216;
	mov.b32 	 %f31, %r52;
	add.f32 	%f32, %f31, 0fBF800000;
	st.local.f32 	[%rd16], %f30;
	st.local.f32 	[%rd16+4], %f32;
	ld.global.u32 	%r6, [_ZN3VLR25pv_progSampleLensPositionE];
	// inline asm
	call (%rd13), _rt_callable_program_from_id_64, (%r6);
	// inline asm
	add.u64 	%rd50, %SP, 72;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd15;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .align 4 .b8 retval0[12];
	prototype_7 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd13, 
	(
	param0, 
	param1
	)
	, prototype_7;
	ld.param.f32	%f33, [retval0+0];
	ld.param.f32	%f34, [retval0+4];
	ld.param.f32	%f35, [retval0+8];
	
	//{
	}// Callseq End 7
	cvt.rn.f32.u32	%f36, %r33;
	div.rn.f32 	%f37, %f24, %f36;
	cvt.rn.f32.u32	%f38, %r34;
	div.rn.f32 	%f39, %f28, %f38;
	st.local.f32 	[%rd18], %f37;
	st.local.f32 	[%rd18+4], %f39;
	ld.global.u32 	%r7, [_ZN3VLR16pv_progSampleIDFE];
	// inline asm
	call (%rd14), _rt_callable_program_from_id_64, (%r7);
	// inline asm
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd50;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd17;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd19;
	.param .align 4 .b8 retval0[12];
	prototype_8 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .b64 _, .param .b64 _);
	call (retval0), 
	%rd14, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_8;
	ld.param.f32	%f40, [retval0+0];
	ld.param.f32	%f41, [retval0+4];
	ld.param.f32	%f42, [retval0+8];
	
	//{
	}// Callseq End 8
	ld.local.f32 	%f43, [%rd20];
	cvta.to.local.u64 	%rd51, %rd50;
	ld.local.f32 	%f44, [%rd51+24];
	ld.local.f32 	%f45, [%rd20+4];
	ld.local.f32 	%f46, [%rd51+36];
	mul.f32 	%f47, %f46, %f45;
	fma.rn.f32 	%f48, %f44, %f43, %f47;
	ld.local.f32 	%f49, [%rd20+8];
	ld.local.f32 	%f50, [%rd51+48];
	fma.rn.f32 	%f96, %f50, %f49, %f48;
	ld.local.f32 	%f51, [%rd51+28];
	ld.local.f32 	%f52, [%rd51+40];
	mul.f32 	%f53, %f52, %f45;
	fma.rn.f32 	%f54, %f51, %f43, %f53;
	ld.local.f32 	%f55, [%rd51+52];
	fma.rn.f32 	%f97, %f55, %f49, %f54;
	ld.local.f32 	%f56, [%rd51+32];
	ld.local.f32 	%f57, [%rd51+44];
	mul.f32 	%f58, %f57, %f45;
	fma.rn.f32 	%f59, %f56, %f43, %f58;
	ld.local.f32 	%f60, [%rd51+56];
	fma.rn.f32 	%f98, %f60, %f49, %f59;
	mul.f32 	%f61, %f33, %f40;
	mul.f32 	%f62, %f34, %f41;
	mul.f32 	%f63, %f35, %f42;
	ld.local.f32 	%f64, [%rd51+12];
	ld.local.f32 	%f65, [%rd51+16];
	mul.f32 	%f66, %f97, %f65;
	fma.rn.f32 	%f67, %f96, %f64, %f66;
	ld.local.f32 	%f68, [%rd51+20];
	fma.rn.f32 	%f69, %f98, %f68, %f67;
	cvt.f64.f32	%fd1, %f69;
	abs.f64 	%fd2, %fd1;
	cvt.rn.f32.f64	%f70, %fd2;
	ld.local.f32 	%f71, [%rd20+12];
	ld.local.f32 	%f72, [%rd51+80];
	mul.f32 	%f73, %f72, %f71;
	div.rn.f32 	%f74, %f70, %f73;
	mul.f32 	%f75, %f61, %f74;
	mul.f32 	%f76, %f62, %f74;
	mul.f32 	%f77, %f63, %f74;
	ld.local.f32 	%f93, [%rd51];
	ld.local.f32 	%f94, [%rd51+4];
	ld.local.f32 	%f95, [%rd51+8];
	mul.f32 	%f78, %f76, 0f3F371437;
	fma.rn.f32 	%f79, %f75, 0f3E59C6ED, %f78;
	fma.rn.f32 	%f80, %f77, 0f3D93D07D, %f79;
	st.local.f32 	[%rd1], %f80;
	st.local.f32 	[%rd1+4], %f75;
	st.local.f32 	[%rd1+8], %f76;
	st.local.f32 	[%rd1+12], %f77;
	mov.u32 	%r63, 0;
	st.local.u32 	[%rd1+16], %r63;
	st.local.u32 	[%rd1+20], %r63;
	st.local.u32 	[%rd1+24], %r63;
	mov.f32 	%f99, 0f00000000;
	bra.uni 	BB4_1;

BB4_3:
	ld.local.f32 	%f93, [%rd1+28];
	ld.local.f32 	%f94, [%rd1+32];
	ld.local.f32 	%f95, [%rd1+36];
	ld.local.f32 	%f96, [%rd1+40];
	ld.local.f32 	%f97, [%rd1+44];
	ld.local.f32 	%f98, [%rd1+48];
	mov.f32 	%f99, 0f38D1B717;
	mov.u32 	%r63, 1;

BB4_1:
	ld.global.u32 	%r53, [_ZN3VLR11pv_topGroupE];
	mov.f32 	%f88, 0f7F800000;
	mov.u32 	%r55, 64;
	// inline asm
	call _rt_trace_64, (%r53, %f93, %f94, %f95, %f96, %f97, %f98, %r63, %f99, %f88, %rd21, %r55);
	// inline asm
	ld.local.u8 	%rs1, [%rd1+60];
	setp.eq.s16	%p1, %rs1, 0;
	@%p1 bra 	BB4_3;

	ld.global.v2.u32 	{%r58, %r59}, [_ZN3VLR14sm_launchIndexE];
	cvt.u64.u32	%rd55, %r58;
	cvt.u64.u32	%rd56, %r59;
	// inline asm
	call (%rd53), _rt_buffer_get_64, (%rd12, %r4, %r5, %rd55, %rd56, %rd7, %rd7);
	// inline asm
	ld.local.f32 	%f89, [%rd1+16];
	ld.local.f32 	%f90, [%rd1+20];
	ld.local.f32 	%f91, [%rd1+24];
	st.f32 	[%rd53+8], %f91;
	st.f32 	[%rd53+4], %f90;
	st.f32 	[%rd53], %f89;
	ret;
}

	// .globl	_ZN3VLR9exceptionEv
.visible .entry _ZN3VLR9exceptionEv(

)
{
	.local .align 16 .b8 	__local_depot5[208];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<40>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<83>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<89>;


	mov.u64 	%SPL, __local_depot5;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%r39), _rt_get_exception_code, ();
	// inline asm
	setp.eq.s32	%p1, %r39, 1020;
	@%p1 bra 	BB5_58;
	bra.uni 	BB5_1;

BB5_58:
	ld.volatile.global.u32 	%r36, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r37, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r38, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r80), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p39, %r80, 0;
	@%p39 bra 	BB5_60;

	add.u64 	%rd83, %SP, 184;
	cvta.to.local.u64 	%rd84, %rd83;
	st.local.v2.u32 	[%rd84], {%r36, %r37};
	st.local.u32 	[%rd84+8], %r38;
	mov.u64 	%rd85, $str;
	cvta.global.u64 	%rd86, %rd85;
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd86;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd83;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r81, [retval0+0];
	
	//{
	}// Callseq End 27
	bra.uni 	BB5_60;

BB5_1:
	setp.eq.s32	%p2, %r39, 1021;
	@%p2 bra 	BB5_52;
	bra.uni 	BB5_2;

BB5_52:
	ld.volatile.global.u32 	%r30, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r31, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r32, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r33, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd5, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r34, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u64 	%rd6, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	mov.u64 	%rd88, 1;
	setp.lt.u32	%p36, %r30, 2;
	mov.u64 	%rd87, %rd88;
	@%p36 bra 	BB5_54;

	ld.volatile.global.u64 	%rd87, [_ZN21rti_internal_register24reg_exception_64_detail2E];

BB5_54:
	setp.lt.u32	%p37, %r30, 3;
	@%p37 bra 	BB5_56;

	ld.volatile.global.u64 	%rd88, [_ZN21rti_internal_register24reg_exception_64_detail3E];

BB5_56:
	ld.volatile.global.u32 	%r35, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u64 	%rd11, [_ZN21rti_internal_register24reg_exception_64_detail4E];
	ld.volatile.global.u64 	%rd12, [_ZN21rti_internal_register24reg_exception_64_detail5E];
	ld.volatile.global.u64 	%rd13, [_ZN21rti_internal_register24reg_exception_64_detail6E];
	// inline asm
	call (%r78), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p38, %r78, 0;
	@%p38 bra 	BB5_60;

	add.u64 	%rd79, %SP, 96;
	cvta.to.local.u64 	%rd80, %rd79;
	st.local.v2.u32 	[%rd80], {%r31, %r32};
	st.local.u32 	[%rd80+8], %r33;
	st.local.u32 	[%rd80+24], %r34;
	st.local.u32 	[%rd80+56], %r35;
	st.local.u64 	[%rd80+16], %rd5;
	st.local.u64 	[%rd80+32], %rd6;
	st.local.u64 	[%rd80+40], %rd87;
	st.local.u64 	[%rd80+48], %rd88;
	st.local.u64 	[%rd80+64], %rd11;
	st.local.u64 	[%rd80+72], %rd12;
	st.local.u64 	[%rd80+80], %rd13;
	mov.u64 	%rd81, $str1;
	cvta.global.u64 	%rd82, %rd81;
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd82;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd79;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r79, [retval0+0];
	
	//{
	}// Callseq End 26

BB5_60:
	ret;

BB5_2:
	setp.eq.s32	%p3, %r39, 1006;
	@%p3 bra 	BB5_41;
	bra.uni 	BB5_3;

BB5_41:
	// inline asm
	call (%r69), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p29, %r69, 0;
	@%p29 bra 	BB5_43;

	mov.u64 	%rd64, $str2;
	cvta.global.u64 	%rd65, %rd64;
	mov.u64 	%rd66, 0;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd65;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r70, [retval0+0];
	
	//{
	}// Callseq End 22

BB5_43:
	ld.volatile.global.u32 	%r71, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p30, %r71, 0;
	@%p30 bra 	BB5_50;

	setp.eq.s32	%p31, %r71, 1;
	@%p31 bra 	BB5_48;
	bra.uni 	BB5_45;

BB5_48:
	ld.volatile.global.u32 	%r29, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r74), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p34, %r74, 0;
	@%p34 bra 	BB5_60;

	add.u64 	%rd70, %SP, 88;
	cvta.to.local.u64 	%rd71, %rd70;
	st.local.u32 	[%rd71], %r29;
	mov.u64 	%rd72, $str4;
	cvta.global.u64 	%rd73, %rd72;
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd73;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd70;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r75, [retval0+0];
	
	//{
	}// Callseq End 24
	bra.uni 	BB5_60;

BB5_3:
	setp.eq.s32	%p4, %r39, 1007;
	@%p4 bra 	BB5_30;
	bra.uni 	BB5_4;

BB5_30:
	// inline asm
	call (%r60), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p22, %r60, 0;
	@%p22 bra 	BB5_32;

	mov.u64 	%rd49, $str6;
	cvta.global.u64 	%rd50, %rd49;
	mov.u64 	%rd51, 0;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd50;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r61, [retval0+0];
	
	//{
	}// Callseq End 18

BB5_32:
	ld.volatile.global.u32 	%r62, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p23, %r62, 0;
	@%p23 bra 	BB5_39;

	setp.eq.s32	%p24, %r62, 1;
	@%p24 bra 	BB5_37;
	bra.uni 	BB5_34;

BB5_37:
	ld.volatile.global.u32 	%r27, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r65), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p27, %r65, 0;
	@%p27 bra 	BB5_60;

	add.u64 	%rd56, %SP, 72;
	cvta.to.local.u64 	%rd57, %rd56;
	st.local.u32 	[%rd57], %r27;
	mov.u64 	%rd58, $str8;
	cvta.global.u64 	%rd59, %rd58;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd59;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd56;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r66, [retval0+0];
	
	//{
	}// Callseq End 20
	bra.uni 	BB5_60;

BB5_4:
	setp.eq.s32	%p5, %r39, 1018;
	@%p5 bra 	BB5_19;
	bra.uni 	BB5_5;

BB5_19:
	// inline asm
	call (%r51), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p15, %r51, 0;
	@%p15 bra 	BB5_21;

	mov.u64 	%rd36, $str10;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, 0;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd37;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd38;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r52, [retval0+0];
	
	//{
	}// Callseq End 14

BB5_21:
	ld.volatile.global.u32 	%r53, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p16, %r53, 0;
	@%p16 bra 	BB5_28;

	setp.eq.s32	%p17, %r53, 1;
	@%p17 bra 	BB5_26;
	bra.uni 	BB5_23;

BB5_26:
	ld.volatile.global.u32 	%r25, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r56), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p20, %r56, 0;
	@%p20 bra 	BB5_60;

	add.u64 	%rd42, %SP, 56;
	cvta.to.local.u64 	%rd43, %rd42;
	st.local.u32 	[%rd43], %r25;
	mov.u64 	%rd44, $str12;
	cvta.global.u64 	%rd45, %rd44;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd45;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r57, [retval0+0];
	
	//{
	}// Callseq End 16
	bra.uni 	BB5_60;

BB5_50:
	// inline asm
	call (%r76), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p35, %r76, 0;
	@%p35 bra 	BB5_60;

	mov.u64 	%rd74, $str3;
	cvta.global.u64 	%rd75, %rd74;
	mov.u64 	%rd76, 0;
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd75;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd76;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r77, [retval0+0];
	
	//{
	}// Callseq End 25
	bra.uni 	BB5_60;

BB5_45:
	setp.ne.s32	%p32, %r71, 2;
	@%p32 bra 	BB5_60;

	// inline asm
	call (%r72), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p33, %r72, 0;
	@%p33 bra 	BB5_60;

	mov.u64 	%rd67, $str5;
	cvta.global.u64 	%rd68, %rd67;
	mov.u64 	%rd69, 0;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd68;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd69;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r73, [retval0+0];
	
	//{
	}// Callseq End 23
	bra.uni 	BB5_60;

BB5_5:
	setp.eq.s32	%p6, %r39, 1019;
	@%p6 bra 	BB5_17;
	bra.uni 	BB5_6;

BB5_17:
	ld.volatile.global.u32 	%r49, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r22, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r23, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r24, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd2, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd3, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd4, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	// inline asm
	call (%r48), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p14, %r48, 0;
	@%p14 bra 	BB5_60;

	add.u64 	%rd32, %SP, 16;
	cvta.to.local.u64 	%rd33, %rd32;
	st.local.v2.u32 	[%rd33], {%r22, %r23};
	st.local.u32 	[%rd33+8], %r24;
	st.local.u64 	[%rd33+16], %rd2;
	st.local.u64 	[%rd33+24], %rd3;
	st.local.u64 	[%rd33+32], %rd4;
	mov.u64 	%rd34, $str14;
	cvta.global.u64 	%rd35, %rd34;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r50, [retval0+0];
	
	//{
	}// Callseq End 13
	bra.uni 	BB5_60;

BB5_39:
	ld.volatile.global.u32 	%r28, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r67), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p28, %r67, 0;
	@%p28 bra 	BB5_60;

	add.u64 	%rd60, %SP, 80;
	cvta.to.local.u64 	%rd61, %rd60;
	st.local.u32 	[%rd61], %r28;
	mov.u64 	%rd62, $str7;
	cvta.global.u64 	%rd63, %rd62;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd63;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd60;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r68, [retval0+0];
	
	//{
	}// Callseq End 21
	bra.uni 	BB5_60;

BB5_34:
	setp.ne.s32	%p25, %r62, 2;
	@%p25 bra 	BB5_60;

	ld.volatile.global.u32 	%r26, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r63), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p26, %r63, 0;
	@%p26 bra 	BB5_60;

	add.u64 	%rd52, %SP, 64;
	cvta.to.local.u64 	%rd53, %rd52;
	st.local.u32 	[%rd53], %r26;
	mov.u64 	%rd54, $str9;
	cvta.global.u64 	%rd55, %rd54;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd52;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r64, [retval0+0];
	
	//{
	}// Callseq End 19
	bra.uni 	BB5_60;

BB5_6:
	setp.eq.s32	%p7, %r39, 1022;
	@%p7 bra 	BB5_15;
	bra.uni 	BB5_7;

BB5_15:
	ld.volatile.global.u32 	%r10, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r11, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r12, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u32 	%r13, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r14, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u32 	%r15, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u32 	%r16, [_ZN21rti_internal_register21reg_exception_detail3E];
	ld.volatile.global.u32 	%r17, [_ZN21rti_internal_register21reg_exception_detail4E];
	ld.volatile.global.u32 	%r18, [_ZN21rti_internal_register21reg_exception_detail5E];
	ld.volatile.global.u32 	%r19, [_ZN21rti_internal_register21reg_exception_detail6E];
	ld.volatile.global.u32 	%r20, [_ZN21rti_internal_register21reg_exception_detail7E];
	ld.volatile.global.u32 	%r21, [_ZN21rti_internal_register21reg_exception_detail8E];
	// inline asm
	call (%r46), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p13, %r46, 0;
	@%p13 bra 	BB5_60;

	mov.b32 	 %f1, %r13;
	cvt.f64.f32	%fd1, %f1;
	mov.b32 	 %f2, %r14;
	cvt.f64.f32	%fd2, %f2;
	mov.b32 	 %f3, %r15;
	cvt.f64.f32	%fd3, %f3;
	mov.b32 	 %f4, %r16;
	cvt.f64.f32	%fd4, %f4;
	mov.b32 	 %f5, %r17;
	cvt.f64.f32	%fd5, %f5;
	mov.b32 	 %f6, %r18;
	cvt.f64.f32	%fd6, %f6;
	mov.b32 	 %f7, %r20;
	cvt.f64.f32	%fd7, %f7;
	mov.b32 	 %f8, %r21;
	cvt.f64.f32	%fd8, %f8;
	add.u64 	%rd28, %SP, 96;
	cvta.to.local.u64 	%rd29, %rd28;
	st.local.v2.u32 	[%rd29], {%r10, %r11};
	st.local.u32 	[%rd29+8], %r12;
	st.local.u32 	[%rd29+64], %r19;
	st.local.f64 	[%rd29+16], %fd1;
	st.local.f64 	[%rd29+24], %fd2;
	st.local.f64 	[%rd29+32], %fd3;
	st.local.f64 	[%rd29+40], %fd4;
	st.local.f64 	[%rd29+48], %fd5;
	st.local.f64 	[%rd29+56], %fd6;
	st.local.f64 	[%rd29+72], %fd7;
	st.local.f64 	[%rd29+80], %fd8;
	mov.u64 	%rd30, $str15;
	cvta.global.u64 	%rd31, %rd30;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd31;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r47, [retval0+0];
	
	//{
	}// Callseq End 12
	bra.uni 	BB5_60;

BB5_28:
	// inline asm
	call (%r58), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p21, %r58, 0;
	@%p21 bra 	BB5_60;

	mov.u64 	%rd46, $str11;
	cvta.global.u64 	%rd47, %rd46;
	mov.u64 	%rd48, 0;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd47;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r59, [retval0+0];
	
	//{
	}// Callseq End 17
	bra.uni 	BB5_60;

BB5_23:
	setp.ne.s32	%p18, %r53, 2;
	@%p18 bra 	BB5_60;

	// inline asm
	call (%r54), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p19, %r54, 0;
	@%p19 bra 	BB5_60;

	mov.u64 	%rd39, $str13;
	cvta.global.u64 	%rd40, %rd39;
	mov.u64 	%rd41, 0;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd40;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd41;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r55, [retval0+0];
	
	//{
	}// Callseq End 15
	bra.uni 	BB5_60;

BB5_7:
	setp.eq.s32	%p8, %r39, 1023;
	add.u64 	%rd14, %SP, 0;
	cvta.to.local.u64 	%rd15, %rd14;
	add.s64 	%rd1, %rd15, 4;
	@%p8 bra 	BB5_13;
	bra.uni 	BB5_8;

BB5_13:
	ld.volatile.global.u32 	%r6, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r7, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r8, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u32 	%r9, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r44), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p12, %r44, 0;
	@%p12 bra 	BB5_60;

	st.local.u32 	[%rd15], %r6;
	st.local.u32 	[%rd1], %r7;
	st.local.v2.u32 	[%rd1+4], {%r8, %r9};
	mov.u64 	%rd26, $str16;
	cvta.global.u64 	%rd27, %rd26;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd27;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r45, [retval0+0];
	
	//{
	}// Callseq End 11
	bra.uni 	BB5_60;

BB5_8:
	add.s32 	%r2, %r39, -1024;
	setp.lt.u32	%p9, %r2, 64512;
	ld.volatile.global.u32 	%r3, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r4, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r5, [_ZN21rti_internal_register14reg_rayIndex_zE];
	@%p9 bra 	BB5_11;
	bra.uni 	BB5_9;

BB5_11:
	// inline asm
	call (%r42), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p11, %r42, 0;
	@%p11 bra 	BB5_60;

	add.s32 	%r82, %r39, -1024;
	st.local.u32 	[%rd15], %r82;
	st.local.u32 	[%rd1], %r3;
	st.local.v2.u32 	[%rd1+4], {%r4, %r5};
	mov.u64 	%rd22, $str17;
	cvta.global.u64 	%rd23, %rd22;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r43, [retval0+0];
	
	//{
	}// Callseq End 10
	bra.uni 	BB5_60;

BB5_9:
	// inline asm
	call (%r40), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p10, %r40, 0;
	@%p10 bra 	BB5_60;

	add.u64 	%rd16, %SP, 184;
	cvta.to.local.u64 	%rd17, %rd16;
	st.local.v2.u32 	[%rd17], {%r3, %r4};
	st.local.u32 	[%rd17+8], %r5;
	mov.u64 	%rd18, $str18;
	cvta.global.u64 	%rd19, %rd18;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r41, [retval0+0];
	
	//{
	}// Callseq End 9
	bra.uni 	BB5_60;
}

	// .weak	_ZN3VLR16Vector3DTemplateIfEC2Ev
.weak .func _ZN3VLR16Vector3DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR16Vector3DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR16Vector3DTemplateIfEC2Ef
.weak .func _ZN3VLR16Vector3DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR16Vector3DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR16Vector3DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector3DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Vector3DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	ret;
}

	// .weak	_ZN3VLR16Vector3DTemplateIfEC2Efff
.weak .func _ZN3VLR16Vector3DTemplateIfEC2Efff(
	.param .b64 _ZN3VLR16Vector3DTemplateIfEC2Efff_param_0,
	.param .b32 _ZN3VLR16Vector3DTemplateIfEC2Efff_param_1,
	.param .b32 _ZN3VLR16Vector3DTemplateIfEC2Efff_param_2,
	.param .b32 _ZN3VLR16Vector3DTemplateIfEC2Efff_param_3
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector3DTemplateIfEC2Efff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Vector3DTemplateIfEC2Efff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR16Vector3DTemplateIfEC2Efff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR16Vector3DTemplateIfEC2Efff_param_3];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR16Vector4DTemplateIfEC2Ev
.weak .func _ZN3VLR16Vector4DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR16Vector4DTemplateIfEC2Ef
.weak .func _ZN3VLR16Vector4DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector4DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Vector4DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	st.f32 	[%rd1+12], %f1;
	ret;
}

	// .weak	_ZN3VLR16Vector4DTemplateIfEC2Effff
.weak .func _ZN3VLR16Vector4DTemplateIfEC2Effff(
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_0,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_1,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_2,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_3,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2Effff_param_4
)
{
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_3];
	ld.param.f32 	%f4, [_ZN3VLR16Vector4DTemplateIfEC2Effff_param_4];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+12], %f4;
	ret;
}

	// .weak	_ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf
.weak .func _ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf(
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_0,
	.param .b64 _ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_1,
	.param .b32 _ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_2
)
{
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_1];
	ld.param.f32 	%f1, [_ZN3VLR16Vector4DTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_2];
	ld.f32 	%f2, [%rd2];
	st.f32 	[%rd1], %f2;
	ld.f32 	%f3, [%rd2+4];
	st.f32 	[%rd1+4], %f3;
	ld.f32 	%f4, [%rd2+8];
	st.f32 	[%rd1+8], %f4;
	st.f32 	[%rd1+12], %f1;
	ret;
}

	// .weak	_ZN3VLR16Normal3DTemplateIfEC2Ev
.weak .func _ZN3VLR16Normal3DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR16Normal3DTemplateIfEC2Ef
.weak .func _ZN3VLR16Normal3DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR16Normal3DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Normal3DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Normal3DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	ret;
}

	// .weak	_ZN3VLR16Normal3DTemplateIfEC2Efff
.weak .func _ZN3VLR16Normal3DTemplateIfEC2Efff(
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2Efff_param_0,
	.param .b32 _ZN3VLR16Normal3DTemplateIfEC2Efff_param_1,
	.param .b32 _ZN3VLR16Normal3DTemplateIfEC2Efff_param_2,
	.param .b32 _ZN3VLR16Normal3DTemplateIfEC2Efff_param_3
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR16Normal3DTemplateIfEC2Efff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR16Normal3DTemplateIfEC2Efff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR16Normal3DTemplateIfEC2Efff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR16Normal3DTemplateIfEC2Efff_param_3];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE
.weak .func _ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE(
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_0,
	.param .b64 _ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_1
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR16Normal3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_1];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR15Point3DTemplateIfEC2Ev
.weak .func _ZN3VLR15Point3DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR15Point3DTemplateIfEC2Ef
.weak .func _ZN3VLR15Point3DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR15Point3DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR15Point3DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR15Point3DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	ret;
}

	// .weak	_ZN3VLR15Point3DTemplateIfEC2Efff
.weak .func _ZN3VLR15Point3DTemplateIfEC2Efff(
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2Efff_param_0,
	.param .b32 _ZN3VLR15Point3DTemplateIfEC2Efff_param_1,
	.param .b32 _ZN3VLR15Point3DTemplateIfEC2Efff_param_2,
	.param .b32 _ZN3VLR15Point3DTemplateIfEC2Efff_param_3
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR15Point3DTemplateIfEC2Efff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR15Point3DTemplateIfEC2Efff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR15Point3DTemplateIfEC2Efff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR15Point3DTemplateIfEC2Efff_param_3];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE
.weak .func _ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE(
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_0,
	.param .b64 _ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_1
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR15Point3DTemplateIfEC2ERKNS_16Vector3DTemplateIfEE_param_1];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .weak	_ZN3VLR18TexCoord2DTemplateIfEC2Ev
.weak .func _ZN3VLR18TexCoord2DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR18TexCoord2DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR18TexCoord2DTemplateIfEC2Ef
.weak .func _ZN3VLR18TexCoord2DTemplateIfEC2Ef(
	.param .b64 _ZN3VLR18TexCoord2DTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR18TexCoord2DTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR18TexCoord2DTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR18TexCoord2DTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	ret;
}

	// .weak	_ZN3VLR18TexCoord2DTemplateIfEC2Eff
.weak .func _ZN3VLR18TexCoord2DTemplateIfEC2Eff(
	.param .b64 _ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_0,
	.param .b32 _ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_1,
	.param .b32 _ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_2
)
{
	.reg .f32 	%f<3>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR18TexCoord2DTemplateIfEC2Eff_param_2];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	ret;
}

	// .weak	_ZN3VLR21BoundingBox3DTemplateIfEC2Ev
.weak .func _ZN3VLR21BoundingBox3DTemplateIfEC2Ev(
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE
.weak .func _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE(
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE_param_0,
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE_param_1
)
{
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEE_param_1];
	ld.f32 	%f1, [%rd2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1], %f1;
	ld.f32 	%f4, [%rd2];
	ld.f32 	%f5, [%rd2+4];
	ld.f32 	%f6, [%rd2+8];
	st.f32 	[%rd1+20], %f6;
	st.f32 	[%rd1+16], %f5;
	st.f32 	[%rd1+12], %f4;
	ret;
}

	// .weak	_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5_
.weak .func _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5_(
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_0,
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_1,
	.param .b64 _ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_2
)
{
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_0];
	ld.param.u64 	%rd2, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_1];
	ld.param.u64 	%rd3, [_ZN3VLR21BoundingBox3DTemplateIfEC2ERKNS_15Point3DTemplateIfEES5__param_2];
	ld.f32 	%f1, [%rd2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1], %f1;
	ld.f32 	%f4, [%rd3];
	ld.f32 	%f5, [%rd3+4];
	ld.f32 	%f6, [%rd3+8];
	st.f32 	[%rd1+20], %f6;
	st.f32 	[%rd1+16], %f5;
	st.f32 	[%rd1+12], %f4;
	ret;
}

	// .weak	_ZN3VLR17Matrix3x3TemplateIfEC2Ev
.weak .func _ZN3VLR17Matrix3x3TemplateIfEC2Ev(
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR17Matrix3x3TemplateIfEC2EPf
.weak .func _ZN3VLR17Matrix3x3TemplateIfEC2EPf(
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2EPf_param_0,
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2EPf_param_1
)
{
	.reg .f32 	%f<10>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix3x3TemplateIfEC2EPf_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix3x3TemplateIfEC2EPf_param_1];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	ld.f32 	%f4, [%rd2+12];
	st.f32 	[%rd1+12], %f4;
	ld.f32 	%f5, [%rd2+16];
	st.f32 	[%rd1+16], %f5;
	ld.f32 	%f6, [%rd2+20];
	st.f32 	[%rd1+20], %f6;
	ld.f32 	%f7, [%rd2+24];
	st.f32 	[%rd1+24], %f7;
	ld.f32 	%f8, [%rd2+28];
	st.f32 	[%rd1+28], %f8;
	ld.f32 	%f9, [%rd2+32];
	st.f32 	[%rd1+32], %f9;
	ret;
}

	// .weak	_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5_
.weak .func _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5_(
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_0,
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_1,
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_2,
	.param .b64 _ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_3
)
{
	.reg .f32 	%f<10>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_1];
	ld.param.u64 	%rd3, [_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_2];
	ld.param.u64 	%rd4, [_ZN3VLR17Matrix3x3TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_3];
	ld.f32 	%f1, [%rd2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1], %f1;
	ld.f32 	%f4, [%rd3];
	ld.f32 	%f5, [%rd3+4];
	ld.f32 	%f6, [%rd3+8];
	st.f32 	[%rd1+20], %f6;
	st.f32 	[%rd1+16], %f5;
	st.f32 	[%rd1+12], %f4;
	ld.f32 	%f7, [%rd4];
	ld.f32 	%f8, [%rd4+4];
	ld.f32 	%f9, [%rd4+8];
	st.f32 	[%rd1+32], %f9;
	st.f32 	[%rd1+28], %f8;
	st.f32 	[%rd1+24], %f7;
	ret;
}

	// .weak	_ZN3VLR17Matrix4x4TemplateIfEC2Ev
.weak .func _ZN3VLR17Matrix4x4TemplateIfEC2Ev(
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR17Matrix4x4TemplateIfEC2EPf
.weak .func _ZN3VLR17Matrix4x4TemplateIfEC2EPf(
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2EPf_param_0,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2EPf_param_1
)
{
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix4x4TemplateIfEC2EPf_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix4x4TemplateIfEC2EPf_param_1];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	ld.f32 	%f4, [%rd2+12];
	st.f32 	[%rd1+12], %f4;
	ld.f32 	%f5, [%rd2+16];
	st.f32 	[%rd1+16], %f5;
	ld.f32 	%f6, [%rd2+20];
	st.f32 	[%rd1+20], %f6;
	ld.f32 	%f7, [%rd2+24];
	st.f32 	[%rd1+24], %f7;
	ld.f32 	%f8, [%rd2+28];
	st.f32 	[%rd1+28], %f8;
	ld.f32 	%f9, [%rd2+32];
	st.f32 	[%rd1+32], %f9;
	ld.f32 	%f10, [%rd2+36];
	st.f32 	[%rd1+36], %f10;
	ld.f32 	%f11, [%rd2+40];
	st.f32 	[%rd1+40], %f11;
	ld.f32 	%f12, [%rd2+44];
	st.f32 	[%rd1+44], %f12;
	ld.f32 	%f13, [%rd2+48];
	st.f32 	[%rd1+48], %f13;
	ld.f32 	%f14, [%rd2+52];
	st.f32 	[%rd1+52], %f14;
	ld.f32 	%f15, [%rd2+56];
	st.f32 	[%rd1+56], %f15;
	ld.f32 	%f16, [%rd2+60];
	st.f32 	[%rd1+60], %f16;
	ret;
}

	// .weak	_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5_
.weak .func _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5_(
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_0,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_1,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_2,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_3
)
{
	.reg .f32 	%f<10>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_1];
	ld.param.u64 	%rd3, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_2];
	ld.param.u64 	%rd4, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector3DTemplateIfEES5_S5__param_3];
	ld.f32 	%f1, [%rd2];
	st.f32 	[%rd1], %f1;
	ld.f32 	%f2, [%rd2+4];
	st.f32 	[%rd1+4], %f2;
	ld.f32 	%f3, [%rd2+8];
	st.f32 	[%rd1+8], %f3;
	mov.u32 	%r1, 0;
	st.u32 	[%rd1+12], %r1;
	ld.f32 	%f4, [%rd3];
	st.f32 	[%rd1+16], %f4;
	ld.f32 	%f5, [%rd3+4];
	st.f32 	[%rd1+20], %f5;
	ld.f32 	%f6, [%rd3+8];
	st.f32 	[%rd1+24], %f6;
	st.u32 	[%rd1+28], %r1;
	ld.f32 	%f7, [%rd4];
	st.f32 	[%rd1+32], %f7;
	ld.f32 	%f8, [%rd4+4];
	st.f32 	[%rd1+36], %f8;
	ld.f32 	%f9, [%rd4+8];
	st.f32 	[%rd1+40], %f9;
	st.u32 	[%rd1+44], %r1;
	st.u32 	[%rd1+48], %r1;
	st.u32 	[%rd1+52], %r1;
	st.u32 	[%rd1+56], %r1;
	mov.u32 	%r2, 1065353216;
	st.u32 	[%rd1+60], %r2;
	ret;
}

	// .weak	_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5_
.weak .func _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5_(
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_0,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_1,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_2,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_3,
	.param .b64 _ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_4
)
{
	.reg .f32 	%f<17>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_0];
	ld.param.u64 	%rd2, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_1];
	ld.param.u64 	%rd3, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_2];
	ld.param.u64 	%rd4, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_3];
	ld.param.u64 	%rd5, [_ZN3VLR17Matrix4x4TemplateIfEC2ERKNS_16Vector4DTemplateIfEES5_S5_S5__param_4];
	ld.f32 	%f1, [%rd2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	ld.f32 	%f4, [%rd2+12];
	st.f32 	[%rd1+12], %f4;
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1], %f1;
	ld.f32 	%f5, [%rd3];
	ld.f32 	%f6, [%rd3+4];
	ld.f32 	%f7, [%rd3+8];
	ld.f32 	%f8, [%rd3+12];
	st.f32 	[%rd1+28], %f8;
	st.f32 	[%rd1+24], %f7;
	st.f32 	[%rd1+20], %f6;
	st.f32 	[%rd1+16], %f5;
	ld.f32 	%f9, [%rd4];
	ld.f32 	%f10, [%rd4+4];
	ld.f32 	%f11, [%rd4+8];
	ld.f32 	%f12, [%rd4+12];
	st.f32 	[%rd1+44], %f12;
	st.f32 	[%rd1+40], %f11;
	st.f32 	[%rd1+36], %f10;
	st.f32 	[%rd1+32], %f9;
	ld.f32 	%f13, [%rd5];
	ld.f32 	%f14, [%rd5+4];
	ld.f32 	%f15, [%rd5+8];
	ld.f32 	%f16, [%rd5+12];
	st.f32 	[%rd1+60], %f16;
	st.f32 	[%rd1+56], %f15;
	st.f32 	[%rd1+52], %f14;
	st.f32 	[%rd1+48], %f13;
	ret;
}

	// .weak	_ZN3VLR18QuaternionTemplateIfEC2Ev
.weak .func _ZN3VLR18QuaternionTemplateIfEC2Ev(
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR18QuaternionTemplateIfEC2Effff
.weak .func _ZN3VLR18QuaternionTemplateIfEC2Effff(
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_0,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_1,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_2,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_3,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2Effff_param_4
)
{
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_3];
	ld.param.f32 	%f4, [_ZN3VLR18QuaternionTemplateIfEC2Effff_param_4];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+12], %f4;
	ret;
}

	// .weak	_ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf
.weak .func _ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf(
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_0,
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_1,
	.param .b32 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_2
)
{
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_0];
	ld.param.u64 	%rd2, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_1];
	ld.param.f32 	%f1, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_16Vector3DTemplateIfEEf_param_2];
	ld.f32 	%f2, [%rd2+4];
	ld.f32 	%f3, [%rd2+8];
	ld.f32 	%f4, [%rd2];
	st.f32 	[%rd1], %f4;
	st.f32 	[%rd1+8], %f3;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+12], %f1;
	ret;
}

	// .weak	_ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE
.weak .func _ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE(
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE_param_0,
	.param .b64 _ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE_param_1
)
{
	.local .align 4 .b8 	__local_depot37[184];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .f32 	%f<77>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<73>;


	mov.u64 	%SPL, __local_depot37;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE_param_0];
	ld.param.u64 	%rd4, [_ZN3VLR18QuaternionTemplateIfEC2ERKNS_17Matrix4x4TemplateIfEE_param_1];
	ld.f32 	%f1, [%rd4+20];
	ld.f32 	%f2, [%rd4];
	add.f32 	%f16, %f2, %f1;
	ld.f32 	%f3, [%rd4+40];
	add.f32 	%f4, %f16, %f3;
	setp.gt.f32	%p1, %f4, 0f00000000;
	@%p1 bra 	BB37_4;
	bra.uni 	BB37_1;

BB37_4:
	add.f32 	%f59, %f4, 0f3F800000;
	sqrt.rn.f32 	%f60, %f59;
	mov.f32 	%f61, 0f3F000000;
	div.rn.f32 	%f62, %f61, %f60;
	ld.f32 	%f63, [%rd4+36];
	ld.f32 	%f64, [%rd4+24];
	sub.f32 	%f65, %f64, %f63;
	ld.f32 	%f66, [%rd4+8];
	ld.f32 	%f67, [%rd4+32];
	sub.f32 	%f68, %f67, %f66;
	ld.f32 	%f69, [%rd4+16];
	ld.f32 	%f70, [%rd4+4];
	sub.f32 	%f71, %f70, %f69;
	mul.f32 	%f72, %f62, %f65;
	mul.f32 	%f73, %f62, %f68;
	mul.f32 	%f74, %f62, %f71;
	st.f32 	[%rd3], %f72;
	st.f32 	[%rd3+4], %f73;
	st.f32 	[%rd3+8], %f74;
	mul.f32 	%f75, %f60, 0f3F000000;
	st.f32 	[%rd3+12], %f75;
	bra.uni 	BB37_5;

BB37_1:
	add.u64 	%rd5, %SP, 160;
	cvta.to.local.u64 	%rd6, %rd5;
	mov.u32 	%r3, 0;
	st.local.u32 	[%rd6+8], %r3;
	mov.u32 	%r4, 2;
	st.local.u32 	[%rd6+4], %r4;
	mov.u32 	%r5, 1;
	st.local.u32 	[%rd6], %r5;
	setp.gt.f32	%p2, %f1, %f2;
	selp.u64	%rd7, 1, 0, %p2;
	selp.u32	%r6, 1, 0, %p2;
	mul.wide.u32 	%rd8, %r6, 16;
	add.s64 	%rd9, %rd4, %rd8;
	ld.f32 	%f17, [%rd9];
	ld.f32 	%f18, [%rd9+4];
	ld.f32 	%f19, [%rd9+8];
	ld.f32 	%f20, [%rd9+12];
	add.u64 	%rd10, %SP, 0;
	cvta.to.local.u64 	%rd11, %rd10;
	st.local.f32 	[%rd11+12], %f20;
	st.local.f32 	[%rd11+8], %f19;
	st.local.f32 	[%rd11+4], %f18;
	st.local.f32 	[%rd11], %f17;
	mul.wide.u32 	%rd12, %r6, 4;
	add.s64 	%rd13, %rd11, %rd12;
	ld.local.f32 	%f21, [%rd13];
	setp.gt.f32	%p3, %f3, %f21;
	selp.b64	%rd2, 2, %rd7, %p3;
	shl.b64 	%rd14, %rd2, 2;
	add.s64 	%rd15, %rd6, %rd14;
	ld.local.u32 	%r1, [%rd15];
	mul.wide.s32 	%rd16, %r1, 4;
	add.s64 	%rd17, %rd6, %rd16;
	ld.local.u32 	%r2, [%rd17];
	shl.b64 	%rd18, %rd2, 4;
	add.s64 	%rd19, %rd4, %rd18;
	ld.f32 	%f22, [%rd19];
	ld.f32 	%f23, [%rd19+4];
	ld.f32 	%f24, [%rd19+8];
	ld.f32 	%f25, [%rd19+12];
	add.u64 	%rd20, %SP, 16;
	cvta.to.local.u64 	%rd21, %rd20;
	st.local.f32 	[%rd21+12], %f25;
	st.local.f32 	[%rd21+8], %f24;
	st.local.f32 	[%rd21+4], %f23;
	st.local.f32 	[%rd21], %f22;
	add.s64 	%rd22, %rd21, %rd14;
	ld.local.f32 	%f26, [%rd22];
	mul.wide.u32 	%rd23, %r1, 16;
	add.s64 	%rd24, %rd4, %rd23;
	ld.f32 	%f5, [%rd24];
	ld.f32 	%f6, [%rd24+4];
	ld.f32 	%f7, [%rd24+8];
	ld.f32 	%f8, [%rd24+12];
	add.u64 	%rd25, %SP, 32;
	cvta.to.local.u64 	%rd26, %rd25;
	st.local.f32 	[%rd26+12], %f8;
	st.local.f32 	[%rd26+8], %f7;
	st.local.f32 	[%rd26+4], %f6;
	st.local.f32 	[%rd26], %f5;
	mul.wide.u32 	%rd27, %r1, 4;
	add.s64 	%rd28, %rd26, %rd27;
	ld.local.f32 	%f27, [%rd28];
	mul.wide.u32 	%rd29, %r2, 16;
	add.s64 	%rd30, %rd4, %rd29;
	ld.f32 	%f9, [%rd30];
	ld.f32 	%f10, [%rd30+4];
	ld.f32 	%f11, [%rd30+8];
	ld.f32 	%f12, [%rd30+12];
	add.u64 	%rd31, %SP, 48;
	cvta.to.local.u64 	%rd32, %rd31;
	st.local.f32 	[%rd32+12], %f12;
	st.local.f32 	[%rd32+8], %f11;
	st.local.f32 	[%rd32+4], %f10;
	st.local.f32 	[%rd32], %f9;
	mul.wide.u32 	%rd33, %r2, 4;
	add.s64 	%rd34, %rd32, %rd33;
	ld.local.f32 	%f28, [%rd34];
	add.f32 	%f29, %f27, %f28;
	sub.f32 	%f30, %f26, %f29;
	add.f32 	%f31, %f30, 0f3F800000;
	sqrt.rn.f32 	%f76, %f31;
	mul.f32 	%f32, %f76, 0f00000000;
	add.u64 	%rd35, %SP, 172;
	cvta.to.local.u64 	%rd36, %rd35;
	add.s64 	%rd37, %rd36, %rd14;
	st.local.f32 	[%rd37], %f32;
	setp.eq.f32	%p4, %f76, 0f00000000;
	@%p4 bra 	BB37_3;

	mov.f32 	%f33, 0f3F000000;
	div.rn.f32 	%f76, %f33, %f76;

BB37_3:
	add.u64 	%rd38, %SP, 64;
	cvta.to.local.u64 	%rd39, %rd38;
	st.local.f32 	[%rd39+4], %f6;
	st.local.f32 	[%rd39], %f5;
	st.local.f32 	[%rd39+8], %f7;
	st.local.f32 	[%rd39+12], %f8;
	add.s64 	%rd41, %rd39, %rd33;
	ld.local.f32 	%f34, [%rd41];
	add.u64 	%rd42, %SP, 80;
	cvta.to.local.u64 	%rd43, %rd42;
	st.local.f32 	[%rd43+12], %f12;
	st.local.f32 	[%rd43+8], %f11;
	st.local.f32 	[%rd43+4], %f10;
	st.local.f32 	[%rd43], %f9;
	add.s64 	%rd45, %rd43, %rd27;
	ld.local.f32 	%f35, [%rd45];
	sub.f32 	%f36, %f34, %f35;
	mul.f32 	%f37, %f76, %f36;
	st.f32 	[%rd3+12], %f37;
	ld.f32 	%f38, [%rd19];
	ld.f32 	%f39, [%rd19+4];
	ld.f32 	%f40, [%rd19+8];
	ld.f32 	%f41, [%rd19+12];
	add.u64 	%rd48, %SP, 96;
	cvta.to.local.u64 	%rd49, %rd48;
	st.local.f32 	[%rd49+12], %f41;
	st.local.f32 	[%rd49+8], %f40;
	st.local.f32 	[%rd49+4], %f39;
	st.local.f32 	[%rd49], %f38;
	add.s64 	%rd50, %rd49, %rd27;
	ld.local.f32 	%f42, [%rd50];
	ld.f32 	%f43, [%rd24];
	ld.f32 	%f44, [%rd24+4];
	ld.f32 	%f45, [%rd24+8];
	ld.f32 	%f46, [%rd24+12];
	add.u64 	%rd53, %SP, 112;
	cvta.to.local.u64 	%rd54, %rd53;
	st.local.f32 	[%rd54+12], %f46;
	st.local.f32 	[%rd54+8], %f45;
	st.local.f32 	[%rd54+4], %f44;
	st.local.f32 	[%rd54], %f43;
	add.s64 	%rd56, %rd54, %rd14;
	ld.local.f32 	%f47, [%rd56];
	add.f32 	%f48, %f42, %f47;
	mul.f32 	%f49, %f76, %f48;
	add.s64 	%rd60, %rd36, %rd16;
	st.local.f32 	[%rd60], %f49;
	add.u64 	%rd61, %SP, 128;
	cvta.to.local.u64 	%rd62, %rd61;
	st.local.f32 	[%rd62+12], %f41;
	st.local.f32 	[%rd62+8], %f40;
	st.local.f32 	[%rd62+4], %f39;
	st.local.f32 	[%rd62], %f38;
	add.s64 	%rd63, %rd62, %rd33;
	ld.local.f32 	%f50, [%rd63];
	ld.f32 	%f51, [%rd30];
	ld.f32 	%f52, [%rd30+4];
	ld.f32 	%f53, [%rd30+8];
	ld.f32 	%f54, [%rd30+12];
	add.u64 	%rd66, %SP, 144;
	cvta.to.local.u64 	%rd67, %rd66;
	st.local.f32 	[%rd67+12], %f54;
	st.local.f32 	[%rd67+8], %f53;
	st.local.f32 	[%rd67+4], %f52;
	st.local.f32 	[%rd67], %f51;
	add.s64 	%rd68, %rd67, %rd14;
	ld.local.f32 	%f55, [%rd68];
	add.f32 	%f56, %f50, %f55;
	mul.f32 	%f57, %f76, %f56;
	mul.wide.s32 	%rd69, %r2, 4;
	add.s64 	%rd70, %rd36, %rd69;
	st.local.f32 	[%rd70], %f57;
	ld.local.u32 	%rd71, [%rd36];
	ld.local.f32 	%f58, [%rd36+8];
	ld.local.u32 	%rd72, [%rd36+4];
	st.u32 	[%rd3+4], %rd72;
	st.u32 	[%rd3], %rd71;
	st.f32 	[%rd3+8], %f58;

BB37_5:
	ret;
}

	// .weak	_ZN3VLR11RGBTemplateIfEC2Ev
.weak .func _ZN3VLR11RGBTemplateIfEC2Ev(
	.param .b64 _ZN3VLR11RGBTemplateIfEC2Ev_param_0
)
{



	ret;
}

	// .weak	_ZN3VLR11RGBTemplateIfEC2Ef
.weak .func _ZN3VLR11RGBTemplateIfEC2Ef(
	.param .b64 _ZN3VLR11RGBTemplateIfEC2Ef_param_0,
	.param .b32 _ZN3VLR11RGBTemplateIfEC2Ef_param_1
)
{
	.reg .f32 	%f<2>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR11RGBTemplateIfEC2Ef_param_0];
	ld.param.f32 	%f1, [_ZN3VLR11RGBTemplateIfEC2Ef_param_1];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f1;
	st.f32 	[%rd1+8], %f1;
	ret;
}

	// .weak	_ZN3VLR11RGBTemplateIfEC2Efff
.weak .func _ZN3VLR11RGBTemplateIfEC2Efff(
	.param .b64 _ZN3VLR11RGBTemplateIfEC2Efff_param_0,
	.param .b32 _ZN3VLR11RGBTemplateIfEC2Efff_param_1,
	.param .b32 _ZN3VLR11RGBTemplateIfEC2Efff_param_2,
	.param .b32 _ZN3VLR11RGBTemplateIfEC2Efff_param_3
)
{
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_ZN3VLR11RGBTemplateIfEC2Efff_param_0];
	ld.param.f32 	%f1, [_ZN3VLR11RGBTemplateIfEC2Efff_param_1];
	ld.param.f32 	%f2, [_ZN3VLR11RGBTemplateIfEC2Efff_param_2];
	ld.param.f32 	%f3, [_ZN3VLR11RGBTemplateIfEC2Efff_param_3];
	st.f32 	[%rd1], %f1;
	st.f32 	[%rd1+4], %f2;
	st.f32 	[%rd1+8], %f3;
	ret;
}

	// .globl	_ZN3VLR35Null_NormalAlphaModifier_fetchAlphaERKNS_18TexCoord2DTemplateIfEE
.visible .func  (.param .b32 func_retval0) _ZN3VLR35Null_NormalAlphaModifier_fetchAlphaERKNS_18TexCoord2DTemplateIfEE(
	.param .b64 _ZN3VLR35Null_NormalAlphaModifier_fetchAlphaERKNS_18TexCoord2DTemplateIfEE_param_0
)
{
	.reg .f32 	%f<2>;


	mov.f32 	%f1, 0f3F800000;
	st.param.f32	[func_retval0+0], %f1;
	ret;
}

	// .globl	_ZN3VLR36Null_NormalAlphaModifier_fetchNormalERKNS_18TexCoord2DTemplateIfEE
.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN3VLR36Null_NormalAlphaModifier_fetchNormalERKNS_18TexCoord2DTemplateIfEE(
	.param .b64 _ZN3VLR36Null_NormalAlphaModifier_fetchNormalERKNS_18TexCoord2DTemplateIfEE_param_0
)
{
	.reg .f32 	%f<3>;


	mov.f32 	%f1, 0f00000000;
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f1;
	mov.f32 	%f2, 0f3F800000;
	st.param.f32	[func_retval0+8], %f2;
	ret;
}

	// .globl	_ZN3VLR30NormalAlphaModifier_fetchAlphaERKNS_18TexCoord2DTemplateIfEE
.visible .func  (.param .b32 func_retval0) _ZN3VLR30NormalAlphaModifier_fetchAlphaERKNS_18TexCoord2DTemplateIfEE(
	.param .b64 _ZN3VLR30NormalAlphaModifier_fetchAlphaERKNS_18TexCoord2DTemplateIfEE_param_0
)
{
	.reg .f32 	%f<4>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR30NormalAlphaModifier_fetchAlphaERKNS_18TexCoord2DTemplateIfEE_param_0];
	ld.f32 	%f1, [%rd1];
	ld.f32 	%f2, [%rd1+4];
	tex.2d.v4.u32.f32	{%r1, %r2, %r3, %r4}, [_ZN3VLR17pv_texNormalAlphaE, {%f1, %f2}];
	mov.b32 	 %f3, %r4;
	st.param.f32	[func_retval0+0], %f3;
	ret;
}

	// .globl	_ZN3VLR31NormalAlphaModifier_fetchNormalERKNS_18TexCoord2DTemplateIfEE
.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN3VLR31NormalAlphaModifier_fetchNormalERKNS_18TexCoord2DTemplateIfEE(
	.param .b64 _ZN3VLR31NormalAlphaModifier_fetchNormalERKNS_18TexCoord2DTemplateIfEE_param_0
)
{
	.reg .f32 	%f<9>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3VLR31NormalAlphaModifier_fetchNormalERKNS_18TexCoord2DTemplateIfEE_param_0];
	ld.f32 	%f1, [%rd1];
	ld.f32 	%f2, [%rd1+4];
	tex.2d.v4.u32.f32	{%r1, %r2, %r3, %r4}, [_ZN3VLR17pv_texNormalAlphaE, {%f1, %f2}];
	mov.b32 	 %f3, %r1;
	mov.b32 	 %f4, %r2;
	mov.b32 	 %f5, %r3;
	fma.rn.f32 	%f6, %f3, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f7, %f4, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f8, %f5, 0f40000000, 0fBF800000;
	st.param.f32	[func_retval0+0], %f6;
	st.param.f32	[func_retval0+4], %f7;
	st.param.f32	[func_retval0+8], %f8;
	ret;
}


